(InstanceState state, Int32 srcChannel, INode source, TriMesh mesh, Int32 targetChannel) => 
  {
    Int32 _0Constant;// 5:GetMapChannelOrGeometry->0:Constant 165268
    Boolean _1Equal;// 5:GetMapChannelOrGeometry->4:Equal 165267
    Boolean _2IsValidNode;// 6:MeshFromNodeWithDefault->1:IsValidNode 165318
    TriMesh _4Pass-through: TriMesh;// 0:Pass-through: TriMesh 165252
    MapChannel _8Pass-through: any;// 0:Pass-through: any 165259
    Object _9Null;// 6:IsNullFix2->3:Null 165263
    Object _10As;// 6:IsNullFix2->23:As 165261
    Boolean _11Equal;// 6:IsNullFix2->1:Equal 165260
    Boolean _12Not;// 4:MapChannelExists->4:Not 165258
    _0Constant = -3;
    _1Equal = Equal(srcChannel, _0Constant);
    _2IsValidNode = IsValidNode(source);
    _4Pass-through: TriMesh = if (_2IsValidNode)
      {
        TriMesh _3MeshFromNode;// 6:MeshFromNodeWithDefault->2:MeshFromNode 165319
        _3MeshFromNode = MeshFromNode(source);
        _3MeshFromNode;
        }else
      {
        mesh;
        };
    _8Pass-through: any = if (_1Equal)
      {
        MapChannel _6TopologyChannel;// 5:GetMapChannelOrGeometry->6:TopologyChannel 165269
        _6TopologyChannel = TopologyChannel(_4Pass-through: TriMesh);
        _6TopologyChannel;
        }else
      {
        MapChannel _7GetMapChannel;// 5:GetMapChannelOrGeometry->3:GetMapChannel 165270
        _7GetMapChannel = GetMapChannel(_4Pass-through: TriMesh, srcChannel);
        _7GetMapChannel;
        };
    _9Null = Null();
    _10As = As(_8Pass-through: any, (Object x0) => 
      {
        Object _0IgnoreFirst;// 6:IsNullFix2->5:IgnoreFirst 165262
        _0IgnoreFirst = IgnoreFirst(x0, _9Null);
        _0IgnoreFirst;
        });
    _11Equal = Equal(_10As, _9Null);
    _12Not = Not(_11Equal);
    if (_12Not)
      {
        Int32 _13Constant;// 7:SetMapChannelOrGeometry->0:Constant 165280
        Boolean _14Equal;// 7:SetMapChannelOrGeometry->6:Equal 165279
        Int32 _15Constant;// 0:GetMapChannelOrGeometry->0:Constant 165290
        Boolean _16Equal;// 0:GetMapChannelOrGeometry->4:Equal 165289
        MapChannel _20Pass-through: MapChannel;// 0:Pass-through: MapChannel 165272
        IArray[Vector3] _21MapChannelVertexBuffer;// 8:AssignMapChannel->3:MapChannelVertexBuffer 165284
        IArray[Int32] _26MapChannelIndexBuffer;// 8:AssignMapChannel->4:MapChannelIndexBuffer 165285
        _13Constant = -3;
        _14Equal = Equal(_13Constant, targetChannel);
        _15Constant = -3;
        _16Equal = Equal(srcChannel, _15Constant);
        _20Pass-through: MapChannel = if (_16Equal)
          {
            MapChannel _18TopologyChannel;// 0:GetMapChannelOrGeometry->6:TopologyChannel 165291
            _18TopologyChannel = TopologyChannel(_4Pass-through: TriMesh);
            _18TopologyChannel;
            }else
          {
            MapChannel _19GetMapChannel;// 0:GetMapChannelOrGeometry->3:GetMapChannel 165292
            _19GetMapChannel = GetMapChannel(_4Pass-through: TriMesh, srcChannel);
            _19GetMapChannel;
            };
        _21MapChannelVertexBuffer = MapChannelVertexBuffer(_20Pass-through: MapChannel);
        _26MapChannelIndexBuffer = MapChannelIndexBuffer(_20Pass-through: MapChannel);
        if (_14Equal)
          {
            MeshData _27MeshData;// 7:SetMapChannelOrGeometry->9:MeshData 165282
            TriMesh _28CreateMeshWithMeshData;// 7:SetMapChannelOrGeometry->8:CreateMeshWithMeshData 165281
            _27MeshData = MeshData(mesh);
            _28CreateMeshWithMeshData = CreateMeshWithMeshData(_21MapChannelVertexBuffer, _26MapChannelIndexBuffer, _27MeshData);
            _28CreateMeshWithMeshData;
            }else
          {
            TriMesh _29SetMapChannel;// 7:SetMapChannelOrGeometry->0:SetMapChannel 165283
            _29SetMapChannel = SetMapChannel(mesh, targetChannel, _21MapChannelVertexBuffer, _26MapChannelIndexBuffer);
            _29SetMapChannel;
            };
        }else
      {
        Int32 _30Constant;// 10:SetMapChannelOrGeometry->0:Constant 165301
        Boolean _31Equal;// 10:SetMapChannelOrGeometry->6:Equal 165300
        Single _32Constant;// 5:Origin->0:Constant 165307
        Vector3 _33Vector3;// 5:Origin->1:Vector3 165306
        IArray[Vector3] _34Unit;// 2:MapChannelClear->4:Unit 165305
        Int32 _35Zero;// 2:MapChannelClear->9:Zero 165309
        Int32 _36FaceCount;// 2:MapChannelClear->6:FaceCount 165313
        Int32 _37Constant;// 1:Three->0:Constant 165312
        Int32 _38Multiply;// 7:MultiplyByThree->2:Multiply 165311
        IArray[Int32] _39ArrayOf;// 2:MapChannelClear->8:ArrayOf 165308
        _30Constant = -3;
        _31Equal = Equal(_30Constant, targetChannel);
        _32Constant = 0;
        _33Vector3 = Vector3(_32Constant, _32Constant, _32Constant);
        _34Unit = Unit(_33Vector3);
        _35Zero = Zero();
        _36FaceCount = FaceCount(mesh);
        _37Constant = 3;
        _38Multiply = Multiply(_36FaceCount, _37Constant);
        _39ArrayOf = ArrayOf(_35Zero, _38Multiply);
        if (_31Equal)
          {
            MeshData _40MeshData;// 10:SetMapChannelOrGeometry->9:MeshData 165303
            TriMesh _41CreateMeshWithMeshData;// 10:SetMapChannelOrGeometry->8:CreateMeshWithMeshData 165302
            _40MeshData = MeshData(mesh);
            _41CreateMeshWithMeshData = CreateMeshWithMeshData(_34Unit, _39ArrayOf, _40MeshData);
            _41CreateMeshWithMeshData;
            }else
          {
            TriMesh _42SetMapChannel;// 10:SetMapChannelOrGeometry->0:SetMapChannel 165304
            _42SetMapChannel = SetMapChannel(mesh, targetChannel, _34Unit, _39ArrayOf);
            _42SetMapChannel;
            };
        };
    }