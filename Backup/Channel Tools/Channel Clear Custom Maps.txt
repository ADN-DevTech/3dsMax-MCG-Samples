(InstanceState state, TriMesh mesh) => 
  {
    Int32 _0Constant;// 1:MeshClearCustomMapChannels->0:Constant 164966
    IArray[Int32] _1Range;// 1:MeshClearCustomMapChannels->1:Range 164965
    Int32 _2Two;// 1:MeshClearCustomMapChannels->4:Two 164967
    IArray[Int32] _3Skip;// 1:MeshClearCustomMapChannels->3:Skip 164964
    IArray[Int32] _4Filter;// 1:MeshClearCustomMapChannels->13:Filter 164963
    TriMesh _5Aggregate;// 1:MeshClearCustomMapChannels->6:Aggregate 164962
    _0Constant = 100;
    _1Range = Range(_0Constant);
    _2Two = Two();
    _3Skip = Skip(_1Range, _2Two);
    _4Filter = Filter(_3Skip, (Int32 x0) => 
      {
        Int32 _0Constant;// 5:GetMapChannelOrGeometry->0:Constant 164980
        Boolean _1Equal;// 5:GetMapChannelOrGeometry->4:Equal 164979
        MapChannel _4Pass-through: any;// 0:Pass-through: any 164971
        Object _5Null;// 6:IsNullFix2->3:Null 164975
        Object _6As;// 6:IsNullFix2->23:As 164973
        Boolean _7Equal;// 6:IsNullFix2->1:Equal 164972
        Boolean _8Not;// 12:MapChannelExists->4:Not 164970
        _0Constant = -3;
        _1Equal = Equal(x0, _0Constant);
        _4Pass-through: any = if (_1Equal)
          {
            MapChannel _2TopologyChannel;// 5:GetMapChannelOrGeometry->6:TopologyChannel 164981
            _2TopologyChannel = TopologyChannel(mesh);
            _2TopologyChannel;
            }else
          {
            MapChannel _3GetMapChannel;// 5:GetMapChannelOrGeometry->3:GetMapChannel 164982
            _3GetMapChannel = GetMapChannel(mesh, x0);
            _3GetMapChannel;
            };
        _5Null = Null();
        _6As = As(_4Pass-through: any, (Object x0) => 
          {
            Object _0IgnoreFirst;// 6:IsNullFix2->5:IgnoreFirst 164974
            _0IgnoreFirst = IgnoreFirst(x0, _5Null);
            _0IgnoreFirst;
            });
        _7Equal = Equal(_6As, _5Null);
        _8Not = Not(_7Equal);
        _8Not;
        });
    _5Aggregate = Aggregate(_4Filter, mesh, (TriMesh x0, Int32 x1) => 
      {
        Int32 _0Constant;// 10:SetMapChannelOrGeometry->0:Constant 164991
        Int32 _1IgnoreFirst;// 1:MeshClearCustomMapChannels->7:IgnoreFirst 165004
        Boolean _2Equal;// 10:SetMapChannelOrGeometry->6:Equal 164990
        Single _3Constant;// 5:Origin->0:Constant 164997
        Vector3 _4Vector3;// 5:Origin->1:Vector3 164996
        IArray[Vector3] _5Unit;// 0:MapChannelClear->4:Unit 164995
        Int32 _6Zero;// 0:MapChannelClear->9:Zero 164999
        Int32 _7FaceCount;// 0:MapChannelClear->6:FaceCount 165003
        Int32 _8Constant;// 1:Three->0:Constant 165002
        Int32 _9Multiply;// 7:MultiplyByThree->2:Multiply 165001
        IArray[Int32] _10ArrayOf;// 0:MapChannelClear->8:ArrayOf 164998
        _0Constant = -3;
        _1IgnoreFirst = IgnoreFirst(x0, x1);
        _2Equal = Equal(_0Constant, _1IgnoreFirst);
        _3Constant = 0;
        _4Vector3 = Vector3(_3Constant, _3Constant, _3Constant);
        _5Unit = Unit(_4Vector3);
        _6Zero = Zero();
        _7FaceCount = FaceCount(x0);
        _8Constant = 3;
        _9Multiply = Multiply(_7FaceCount, _8Constant);
        _10ArrayOf = ArrayOf(_6Zero, _9Multiply);
        if (_2Equal)
          {
            MeshData _11MeshData;// 10:SetMapChannelOrGeometry->9:MeshData 164993
            TriMesh _12CreateMeshWithMeshData;// 10:SetMapChannelOrGeometry->8:CreateMeshWithMeshData 164992
            _11MeshData = MeshData(x0);
            _12CreateMeshWithMeshData = CreateMeshWithMeshData(_5Unit, _10ArrayOf, _11MeshData);
            _12CreateMeshWithMeshData;
            }else
          {
            TriMesh _13SetMapChannel;// 10:SetMapChannelOrGeometry->0:SetMapChannel 164994
            _13SetMapChannel = SetMapChannel(x0, _1IgnoreFirst, _5Unit, _10ArrayOf);
            _13SetMapChannel;
            };
        });
    _5Aggregate;
    }