(InstanceState state, Boolean Keep Original, TriMesh mesh, Boolean flip, BoundingBox boundingBox, Single Offset X, Single OffsetY, Single Offset Z, Int32 axis) => 
  {
    IArray[Vector3] _0MeshVertices;// 2:DeformMeshPoints->0:MeshVertices 187589
    Vector3 _3Vector3;// 19:Vector3 187600
    Vector3 _4Add;// 20:Add 187594
    Int32 _5Zero;// 14:ChooseAxis->9:Zero 187609
    Boolean _6GreaterThanOrEqual;// 14:ChooseAxis->8:GreaterThanOrEqual 187608
    Vector3 _7XAxis;// 14:ChooseAxis->3:XAxis 187617
    IArray[Vector3] _8Unit;// 2:Array3->2:Unit 187616
    Vector3 _9YAxis;// 14:ChooseAxis->4:YAxis 187618
    IArray[Vector3] _10Append;// 2:Array3->3:Append 187615
    Vector3 _11ZAxis;// 14:ChooseAxis->5:ZAxis 187619
    IArray[Vector3] _12Append;// 2:Array3->6:Append 187614
    Ray _32Ray;// 17:Ray 187593
    Plane _33Plane;// 16:Plane 187592
    Matrix _34ReflectionMatrix;// 11:ReflectionMatrix 187591
    Func[Vector3, Vector3] _35Pass-through: function1;// 0:Pass-through: function1 187586
    IArray[Vector3] _36Map;// 2:DeformMeshPoints->1:Map 187588
    TriMesh _37SetMeshVertices;// 2:DeformMeshPoints->4:SetMeshVertices 187587
    _0MeshVertices = MeshVertices(mesh);
    _3Vector3 = Vector3(Offset X, OffsetY, Offset Z);
    _4Add = Add(if (flip)
        {
          Vector3 _1BoxMin;// 6:BoxMin 187597
          _1BoxMin = BoxMin(boundingBox);
          _1BoxMin;
          }else
        {
          Vector3 _2BoxMax;// 8:BoxMax 187599
          _2BoxMax = BoxMax(boundingBox);
          _2BoxMax;
          }, _3Vector3);
    _5Zero = Zero();
    _6GreaterThanOrEqual = GreaterThanOrEqual(axis, _5Zero);
    _7XAxis = XAxis();
    _8Unit = Unit(_7XAxis);
    _9YAxis = YAxis();
    _10Append = Append(_8Unit, _9YAxis);
    _11ZAxis = ZAxis();
    _12Append = Append(_10Append, _11ZAxis);
    _32Ray = Ray(_4Add, if (flip)
      {
        Vector3 _25Negate;// 9:Negate 187605
        _25Negate = Negate(if (_6GreaterThanOrEqual)
          {
            Vector3 _19At;// 14:ChooseAxis->1:At 187610
            _19At = At(_12Append, axis);
            _19At;
            }else
          {
            Int32 _20One;// 10:PlusOne->1:One 187625
            Int32 _21Add;// 10:PlusOne->0:Add 187624
            Int32 _22Negative;// 14:ChooseAxis->11:Negative 187622
            Vector3 _23At;// 14:ChooseAxis->12:At 187621
            Vector3 _24Negate;// 14:ChooseAxis->13:Negate 187620
            _20One = One();
            _21Add = Add(axis, _20One);
            _22Negative = Negative(_21Add);
            _23At = At(_12Append, _22Negative);
            _24Negate = Negate(_23At);
            _24Negate;
            });
        _25Negate;
        }else
      {
        if (_6GreaterThanOrEqual)
          {
            Vector3 _26At;// 14:ChooseAxis->1:At 187610
            _26At = At(_12Append, axis);
            _26At;
            }else
          {
            Int32 _27One;// 10:PlusOne->1:One 187625
            Int32 _28Add;// 10:PlusOne->0:Add 187624
            Int32 _29Negative;// 14:ChooseAxis->11:Negative 187622
            Vector3 _30At;// 14:ChooseAxis->12:At 187621
            Vector3 _31Negate;// 14:ChooseAxis->13:Negate 187620
            _27One = One();
            _28Add = Add(axis, _27One);
            _29Negative = Negative(_28Add);
            _30At = At(_12Append, _29Negative);
            _31Negate = Negate(_30At);
            _31Negate;
            };
        });
    _33Plane = Plane(_32Ray);
    _34ReflectionMatrix = ReflectionMatrix(_33Plane);
    _35Pass-through: function1 = (Vector3 x0) => 
      {
        Vector3 _0Transform;// 10:TransformMesh->0:Transform 187590
        _0Transform = Transform(x0, _34ReflectionMatrix);
        _0Transform;
        };
    _36Map = Map(_0MeshVertices, _35Pass-through: function1);
    _37SetMeshVertices = SetMeshVertices(mesh, _36Map);
    if (Keep Original)
      {
        TriMesh _38CombineMeshes;// 2:CombineMeshes 187581
        _38CombineMeshes = CombineMeshes(mesh, _37SetMeshVertices);
        _38CombineMeshes;
        }else
      {
        _37SetMeshVertices;
        };
    }