(InstanceState state, TriMesh mesh, Int32 target channel , Int32 flux channel ) => 
  {
    MapChannel _0GetMapChannel;// 0:MatricesFromMapChannel-ext->9:GetMapChannel 101210
    IArray[Vector3] _1MapChannelVertexBuffer;// 0:MatricesFromMapChannel-ext->8:MapChannelVertexBuffer 101209
    Int32 _2Count;// 2:Slices->2:Count 101206
    Int32 _3Constant;// 0:MatricesFromMapChannel-ext->0:Constant 101211
    Int32 _4Divide;// 2:Slices->3:Divide 101205
    IArray[Int32] _5Range;// 2:Slices->4:Range 101204
    IArray[IArray[Vector3]] _6Map;// 2:Slices->5:Map 101203
    IArray[Matrix] _7Map;// 0:MatricesFromMapChannel-ext->5:Map 101200
    Func[Matrix, IArray[Vector3]] _8Pass-through: function1;// 0:Pass-through: function1 101184
    IArray[IArray[Vector3]] _9Map;// 5:FlatMap->4:Map 101186
    IArray[Vector3] _10Flatten;// 5:FlatMap->3:Flatten 101185
    IArray[Int32] _11MeshIndices;// 5:MapChannelStoreMatrices-ext->0:MeshIndices 101195
    TriMesh _12SetMapChannel;// 5:MapChannelStoreMatrices-ext->7:SetMapChannel 101182
    _0GetMapChannel = GetMapChannel(mesh, flux channel );
    _1MapChannelVertexBuffer = MapChannelVertexBuffer(_0GetMapChannel);
    _2Count = Count(_1MapChannelVertexBuffer);
    _3Constant = 4;
    _4Divide = Divide(_2Count, _3Constant);
    _5Range = Range(_4Divide);
    _6Map = Map(_5Range, (Int32 x0) => 
      {
        Int32 _0Multiply;// 2:Slices->6:Multiply 101208
        IArray[Vector3] _1Slice;// 2:Slices->0:Slice 101207
        _0Multiply = Multiply(_3Constant, x0);
        _1Slice = Slice(_1MapChannelVertexBuffer, _0Multiply, _3Constant);
        _1Slice;
        });
    _7Map = Map(_6Map, (IArray[Vector3] x0) => 
      {
        Matrix _0MatrixIdentity;// 0:SetMatrixFrom3Rows->23:MatrixIdentity 101220
        Int32 _1One;// 0:SetMatrixFrom3Rows->24:One 101221
        Int32 _2Zero;// 6:MatrixFromRows-ext->7:Zero 101225
        Vector3 _3At;// 6:MatrixFromRows-ext->3:At 101224
        Matrix _4SetMatrixRow;// 0:SetMatrixFrom3Rows->22:SetMatrixRow 101219
        Int32 _5Two;// 0:SetMatrixFrom3Rows->26:Two 101222
        Int32 _6One;// 8:PlusOne->1:One 101229
        Int32 _7Add;// 8:PlusOne->0:Add 101228
        Vector3 _8At;// 6:MatrixFromRows-ext->4:At 101226
        Matrix _9SetMatrixRow;// 0:SetMatrixFrom3Rows->27:SetMatrixRow 101218
        Int32 _10Constant;// 25:Three->0:Constant 101223
        Int32 _11One;// 9:PlusOne->1:One 101233
        Int32 _12Add;// 9:PlusOne->0:Add 101232
        Vector3 _13At;// 6:MatrixFromRows-ext->5:At 101230
        Matrix _14SetMatrixRow;// 0:SetMatrixFrom3Rows->28:SetMatrixRow 101217
        Int32 _15One;// 10:PlusOne->1:One 101237
        Int32 _16Add;// 10:PlusOne->0:Add 101236
        Vector3 _17At;// 6:MatrixFromRows-ext->6:At 101234
        Matrix _18SetMatrixTranslation;// 6:MatrixFromRows-ext->2:SetMatrixTranslation 101213
        _0MatrixIdentity = MatrixIdentity();
        _1One = One();
        _2Zero = Zero();
        _3At = At(x0, _2Zero);
        _4SetMatrixRow = SetMatrixRow(_0MatrixIdentity, _1One, _3At);
        _5Two = Two();
        _6One = One();
        _7Add = Add(_2Zero, _6One);
        _8At = At(x0, _7Add);
        _9SetMatrixRow = SetMatrixRow(_4SetMatrixRow, _5Two, _8At);
        _10Constant = 3;
        _11One = One();
        _12Add = Add(_7Add, _11One);
        _13At = At(x0, _12Add);
        _14SetMatrixRow = SetMatrixRow(_9SetMatrixRow, _10Constant, _13At);
        _15One = One();
        _16Add = Add(_12Add, _15One);
        _17At = At(x0, _16Add);
        _18SetMatrixTranslation = SetMatrixTranslation(_14SetMatrixRow, _17At);
        _18SetMatrixTranslation;
        });
    _8Pass-through: function1 = (Matrix x0) => 
      {
        Int32 _0Constant;// 3:MatrixRows-ext->0:Constant 101190
        IArray[Int32] _1Range;// 3:MatrixRows-ext->1:Range 101189
        IArray[Vector3] _2Map;// 3:MatrixRows-ext->3:Map 101188
        _0Constant = 4;
        _1Range = Range(_0Constant);
        _2Map = Map(_1Range, (Int32 x0) => 
          {
            Int32 _0One;// 5:PlusOne->1:One 101194
            Int32 _1Add;// 5:PlusOne->0:Add 101193
            Vector3 _2MatrixRow;// 3:MatrixRows-ext->4:MatrixRow 101191
            _0One = One();
            _1Add = Add(x0, _0One);
            _2MatrixRow = MatrixRow(_1Add, x0);
            _2MatrixRow;
            });
        _2Map;
        };
    _9Map = Map(_7Map, _8Pass-through: function1);
    _10Flatten = Flatten(_9Map);
    _11MeshIndices = MeshIndices(mesh);
    _12SetMapChannel = SetMapChannel(mesh, target channel , _10Flatten, _11MeshIndices);
    _12SetMapChannel;
    }