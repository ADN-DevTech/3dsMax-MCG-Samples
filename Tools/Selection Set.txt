(InstanceState state, TriMesh mesh, Single value) => 
  {
    Int32 _0Zero;// 7:Zero 109459
    IArray[Single] _1PerVertexData;// 1:MeshPerVertexDataOrZeros-ext->2:PerVertexData 109453
    Boolean _2IsNull;// 1:MeshPerVertexDataOrZeros-ext->3:IsNull 109452
    Func[Single, Single] _7Pass-through: function1;// 0:Pass-through: function1 109446
    IArray[Single] _8Map;// 1:PerVertexDataTransform-ext->3:Map 109448
    TriMesh _9SetPerVertexData;// 1:PerVertexDataTransform-ext->5:SetPerVertexData 109447
    _0Zero = Zero();
    _1PerVertexData = PerVertexData(mesh, _0Zero);
    _2IsNull = IsNull(_1PerVertexData);
    _7Pass-through: function1 = (Single x0) => 
      {
        Single _0IgnoreFirst;// 3:IgnoreFirst 109460
        _0IgnoreFirst = IgnoreFirst(x0, value);
        _0IgnoreFirst;
        };
    _8Map = Map(if (_2IsNull)
      {
        Single _3FloatZero;// 1:MeshPerVertexDataOrZeros-ext->6:FloatZero 109455
        IArray[Vector3] _4MeshVertices;// 1:MeshPerVertexDataOrZeros-ext->4:MeshVertices 109457
        Int32 _5Count;// 1:MeshPerVertexDataOrZeros-ext->7:Count 109456
        IArray[Single] _6ArrayOf;// 1:MeshPerVertexDataOrZeros-ext->8:ArrayOf 109454
        _3FloatZero = FloatZero();
        _4MeshVertices = MeshVertices(mesh);
        _5Count = Count(_4MeshVertices);
        _6ArrayOf = ArrayOf(_3FloatZero, _5Count);
        _6ArrayOf;
        }else
      {
        _1PerVertexData;
        }, _7Pass-through: function1);
    _9SetPerVertexData = SetPerVertexData(mesh, _0Zero, _8Map);
    _9SetPerVertexData;
    }