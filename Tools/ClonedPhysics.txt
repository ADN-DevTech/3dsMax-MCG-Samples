(InstanceState state, TriMesh mesh, Int32 count, Single frame, Boolean clearCache, Single spawnRadius, Int32 seed, Matrix modifierTransform, IArray[INode] obstacles, Single gravity speed) => 
  {
    IArray[TriMesh] _0ArrayOf;// 14:ArrayOf 95001
    Int32 _1FramesToTicks;// 36:FramesToTicks 95051
    Cache[World] _2IfThen;// 4:CacheValueResettable->7:IfThen 95036
    Int32 _3Zero;// 4:ExtractCurrentValueFromCache->3:Zero 95035
    World _4CachedValue;// 4:ExtractCurrentValueFromCache->1:CachedValue 95034
    Int32 _5GetSimulationTime;// 3:RunSimulationUntil->6:GetSimulationTime 95027
    Boolean _6LessThan;// 3:RunSimulationUntil->1:LessThan 95026
    World _7IfThen;// 3:RunSimulationUntil->5:IfThen 95025
    Int32 _8GetSimulationTime;// 3:RunSimulationUntil->25:GetSimulationTime 95030
    Int32 _9Subtract;// 3:RunSimulationUntil->27:Subtract 95029
    World _10StepSimulation;// 3:RunSimulationUntil->23:StepSimulation 95024
    Int32 _11GetNumberOfRigidBodies;// 8:RigidBodySimulationTransforms->2:GetNumberOfRigidBodies 95019
    IArray[Int32] _12Range;// 3:MapRange->2:Range 95018
    Func[Int32, Matrix] _13Pass-through: function1;// 0:Pass-through: function1 95016
    IArray[Matrix] _14Map;// 3:MapRange->3:Map 95017
    Matrix _15InvertMatrix;// 7:RigidBodySimulation->20:InvertMatrix 95049
    IArray[Matrix] _16Map;// 7:RigidBodySimulation->6:Map 95013
    Random _17RandomNumberGenerator;// 11:RandomNumberGenerator 95111
    Func[Vector3] _18Bind;// 13:RandomPointsInBoundingBox->4:Bind 95066
    IArray[Vector3] _19ArrayOfFunction;// 13:RandomPointsInBoundingBox->1:ArrayOfFunction 95065
    IArray[Matrix] _20Map;// 9:RandomRigidBodies->0:Map 95061
    Single _21FloatOne;// 9:RandomRigidBodies->10:FloatOne 95103
    IArray[RigidBody] _22Map;// 9:RandomRigidBodies->6:Map 95060
    Int32 _23Count;// 7:RigidBodySimulation->24:Count 95050
    IArray[Matrix] _24Take;// 7:RigidBodySimulation->23:Take 95012
    IArray[TriMesh] _25Combine;// 15:Combine 95000
    TriMesh _26CombineAllMeshes;// 6:CombineAllMeshes 94999
    _0ArrayOf = ArrayOf(mesh, count);
    _1FramesToTicks = FramesToTicks(frame);
    _2IfThen = IfThen(clearCache, () => 
      {
        Cache[World] _0CreateStaticCache;// 4:CacheValueResettable->1:CreateStaticCache 95038
        Cache[World] _1ForceUpdateCache;// 4:CacheValueResettable->6:ForceUpdateCache 95037
        _0CreateStaticCache = CreateStaticCache(() => 
          {
            IArray[Constraint] _0ConstraintEmptyArray;// 24:ConstraintEmptyArray 95054
            Random _1RandomNumberGenerator;// 11:RandomNumberGenerator 95111
            Func[Vector3] _2Bind;// 13:RandomPointsInBoundingBox->4:Bind 95066
            IArray[Vector3] _3ArrayOfFunction;// 13:RandomPointsInBoundingBox->1:ArrayOfFunction 95065
            IArray[Matrix] _4Map;// 9:RandomRigidBodies->0:Map 95061
            Single _5FloatOne;// 9:RandomRigidBodies->10:FloatOne 95103
            IArray[RigidBody] _6Map;// 9:RandomRigidBodies->6:Map 95060
            Single _7FloatZero;// 13:RigidBodyObstaclesFromNodes->3:FloatZero 95142
            IArray[RigidBody] _8Map;// 13:RigidBodyObstaclesFromNodes->1:Map 95115
            IArray[RigidBody] _9Concatenate;// 7:RigidBodySimulation->22:Concatenate 95043
            Int32 _10Zero;// 20:Zero 95144
            World _11CreateWorld;// 7:RigidBodySimulation->13:CreateWorld 95045
            Single _12Constant;// 0:Origin->0:Constant 95153
            Vector3 _13Vector3;// 0:Origin->1:Vector3 95152
            Single _14X;// 1:SetZ->4:X 95150
            Single _15Y;// 1:SetZ->5:Y 95151
            Single _16Constant;// 23:GravityVector->0:Constant 95154
            Vector3 _17Vector3;// 1:SetZ->2:Vector3 95149
            Vector3 _18MultiplyByScalar;// 27:MultiplyByScalar 95145
            World _19SetGravity;// 7:RigidBodySimulation->33:SetGravity 95044
            World _20Aggregate;// 7:RigidBodySimulation->103:Aggregate 95042
            World _21Aggregate;// 7:RigidBodySimulation->18:Aggregate 95040
            _0ConstraintEmptyArray = GetValue();
            _1RandomNumberGenerator = RandomNumberGenerator(seed);
            _2Bind = Bind((Random x0) => 
              {
                Vector3 _0Vector3;// 6:PseudoRandomVector->1:Vector3 95072
                Single _1Constant;// 18:Origin-ext->0:Constant 95109
                Vector3 _2Vector3;// 18:Origin-ext->1:Vector3 95108
                BoundingSphere _3Sphere;// 5:BoxFromPointAndRadius->3:Sphere 95107
                BoundingBox _4BoxFromSphere;// 5:BoxFromPointAndRadius->0:BoxFromSphere 95106
                Vector3 _5BoxMax;// 2:BoundingBoxExtent->1:BoxMax 95076
                Vector3 _6BoxMin;// 2:BoundingBoxExtent->2:BoxMin 95077
                Vector3 _7Subtract;// 2:BoundingBoxExtent->3:Subtract 95075
                Vector3 _8Multiply;// 5:PseudoRandomPointInBox->3:Multiply 95070
                Vector3 _9BoxMin;// 5:PseudoRandomPointInBox->4:BoxMin 95078
                Vector3 _10Add;// 5:PseudoRandomPointInBox->5:Add 95069
                _0Vector3 = Vector3(PseudoRandomFloat(x0), PseudoRandomFloat(x0), PseudoRandomFloat(x0));
                _1Constant = 0;
                _2Vector3 = Vector3(_1Constant, _1Constant, _1Constant);
                _3Sphere = Sphere(_2Vector3, spawnRadius);
                _4BoxFromSphere = BoxFromSphere(_3Sphere);
                _5BoxMax = BoxMax(_4BoxFromSphere);
                _6BoxMin = BoxMin(_4BoxFromSphere);
                _7Subtract = Subtract(_5BoxMax, _6BoxMin);
                _8Multiply = Multiply(_0Vector3, _7Subtract);
                _9BoxMin = BoxMin(_4BoxFromSphere);
                _10Add = Add(_8Multiply, _9BoxMin);
                _10Add;
                }, _1RandomNumberGenerator);
            _3ArrayOfFunction = ArrayOfFunction(_2Bind, count);
            _4Map = Map(_3ArrayOfFunction, (Vector3 x0) => 
              {
                Matrix _0TranslationMatrix;// 9:RandomRigidBodies->5:TranslationMatrix 95080
                Matrix _1Multiply;// 9:RandomRigidBodies->12:Multiply 95079
                _0TranslationMatrix = TranslationMatrix(x0);
                _1Multiply = Multiply(modifierTransform, _0TranslationMatrix);
                _1Multiply;
                });
            _5FloatOne = FloatOne();
            _6Map = Map(_4Map, (Matrix x0) => 
              {
                IArray[Vector3] _0MeshVertices;// 7:RigidBodyFromMeshWithMass->27:MeshVertices 95096
                Vector3 _1DefaultValueOfElement;// 2:Sum->4:DefaultValueOfElement 95092
                Vector3 _2Aggregate;// 2:Sum->0:Aggregate 95091
                Int32 _3Count;// 28:AverageVector->3:Count 95095
                Single _4IntAsFloat;// 28:AverageVector->1:IntAsFloat 95094
                Vector3 _5DivideByScalar;// 28:AverageVector->5:DivideByScalar 95089
                Matrix _6TranslationMatrix;// 7:RigidBodyFromMeshWithMass->40:TranslationMatrix 95087
                Matrix _7Multiply;// 7:RigidBodyFromMeshWithMass->42:Multiply 95086
                Single _8Constant;// 110:Origin->0:Constant 95099
                Vector3 _9Vector3;// 110:Origin->1:Vector3 95098
                Single _10FloatZero;// 7:RigidBodyFromMeshWithMass->112:FloatZero 95101
                RigidBodyDynamics _11CreateRigidBodyDynamics;// 7:RigidBodyFromMeshWithMass->111:CreateRigidBodyDynamics 95100
                Boolean _12False;// 7:RigidBodyFromMeshWithMass->122:False 95102
                RigidBody _13CreateRigidBody;// 7:RigidBodyFromMeshWithMass->107:CreateRigidBody 95084
                _0MeshVertices = MeshVertices(mesh);
                _1DefaultValueOfElement = DefaultValueOfElement(_0MeshVertices);
                _2Aggregate = Aggregate(_0MeshVertices, _1DefaultValueOfElement, (Vector3 x0, Vector3 x1) => 
                  {
                    Vector3 _0Add;// 2:Sum->2:Add 95093
                    _0Add = Add(x0, x1);
                    _0Add;
                    });
                _3Count = Count(_0MeshVertices);
                _4IntAsFloat = IntAsFloat(_3Count);
                _5DivideByScalar = DivideByScalar(_2Aggregate, _4IntAsFloat);
                _6TranslationMatrix = TranslationMatrix(_5DivideByScalar);
                _7Multiply = Multiply(x0, _6TranslationMatrix);
                _8Constant = 0;
                _9Vector3 = Vector3(_8Constant, _8Constant, _8Constant);
                _10FloatZero = FloatZero();
                _11CreateRigidBodyDynamics = CreateRigidBodyDynamics(_5FloatOne, _10FloatZero, _10FloatZero, _10FloatZero, _10FloatZero, _10FloatZero);
                _12False = False();
                _13CreateRigidBody = CreateRigidBody(_7Multiply, _9Vector3, mesh, _11CreateRigidBodyDynamics, _9Vector3, _12False);
                _13CreateRigidBody;
                });
            _7FloatZero = FloatZero();
            _8Map = Map(obstacles, (INode x0) => 
              {
                Matrix _0WorldTransform;// 2:RigidBodyFromNode->2:WorldTransform 95140
                TriMesh _1MeshFromNode;// 2:RigidBodyFromNode->3:MeshFromNode 95141
                IArray[Vector3] _2MeshVertices;// 0:RigidBodyFromMeshWithMass->27:MeshVertices 95133
                Vector3 _3DefaultValueOfElement;// 2:Sum->4:DefaultValueOfElement 95129
                Vector3 _4Aggregate;// 2:Sum->0:Aggregate 95128
                Int32 _5Count;// 28:AverageVector->3:Count 95132
                Single _6IntAsFloat;// 28:AverageVector->1:IntAsFloat 95131
                Vector3 _7DivideByScalar;// 28:AverageVector->5:DivideByScalar 95126
                Matrix _8TranslationMatrix;// 0:RigidBodyFromMeshWithMass->40:TranslationMatrix 95124
                Matrix _9Multiply;// 0:RigidBodyFromMeshWithMass->42:Multiply 95123
                Single _10Constant;// 110:Origin->0:Constant 95136
                Vector3 _11Vector3;// 110:Origin->1:Vector3 95135
                Single _12FloatZero;// 0:RigidBodyFromMeshWithMass->112:FloatZero 95138
                RigidBodyDynamics _13CreateRigidBodyDynamics;// 0:RigidBodyFromMeshWithMass->111:CreateRigidBodyDynamics 95137
                Boolean _14False;// 0:RigidBodyFromMeshWithMass->122:False 95139
                RigidBody _15CreateRigidBody;// 0:RigidBodyFromMeshWithMass->107:CreateRigidBody 95121
                _0WorldTransform = WorldTransform(x0);
                _1MeshFromNode = MeshFromNode(x0);
                _2MeshVertices = MeshVertices(_1MeshFromNode);
                _3DefaultValueOfElement = DefaultValueOfElement(_2MeshVertices);
                _4Aggregate = Aggregate(_2MeshVertices, _3DefaultValueOfElement, (Vector3 x0, Vector3 x1) => 
                  {
                    Vector3 _0Add;// 2:Sum->2:Add 95130
                    _0Add = Add(x0, x1);
                    _0Add;
                    });
                _5Count = Count(_2MeshVertices);
                _6IntAsFloat = IntAsFloat(_5Count);
                _7DivideByScalar = DivideByScalar(_4Aggregate, _6IntAsFloat);
                _8TranslationMatrix = TranslationMatrix(_7DivideByScalar);
                _9Multiply = Multiply(_0WorldTransform, _8TranslationMatrix);
                _10Constant = 0;
                _11Vector3 = Vector3(_10Constant, _10Constant, _10Constant);
                _12FloatZero = FloatZero();
                _13CreateRigidBodyDynamics = CreateRigidBodyDynamics(_7FloatZero, _12FloatZero, _12FloatZero, _12FloatZero, _12FloatZero, _12FloatZero);
                _14False = False();
                _15CreateRigidBody = CreateRigidBody(_9Multiply, _11Vector3, _1MeshFromNode, _13CreateRigidBodyDynamics, _11Vector3, _14False);
                _15CreateRigidBody;
                });
            _9Concatenate = Concatenate(_6Map, _8Map);
            _10Zero = Zero();
            _11CreateWorld = CreateWorld(_10Zero);
            _12Constant = 0;
            _13Vector3 = Vector3(_12Constant, _12Constant, _12Constant);
            _14X = X(_13Vector3);
            _15Y = Y(_13Vector3);
            _16Constant = -9.81;
            _17Vector3 = Vector3(_14X, _15Y, _16Constant);
            _18MultiplyByScalar = MultiplyByScalar(_17Vector3, gravity speed);
            _19SetGravity = SetGravity(_11CreateWorld, _18MultiplyByScalar);
            _20Aggregate = Aggregate(_9Concatenate, _19SetGravity, (World x0, RigidBody x1) => 
              {
                World _0AddRigidBody;// 7:RigidBodySimulation->11:AddRigidBody 95046
                _0AddRigidBody = AddRigidBody(x0, x1);
                _0AddRigidBody;
                });
            _21Aggregate = Aggregate(_0ConstraintEmptyArray, _20Aggregate, (World x0, Constraint x1) => 
              {
                World _0AddConstraint;// 7:RigidBodySimulation->46:AddConstraint 95047
                _0AddConstraint = AddConstraint(x0, x1);
                _0AddConstraint;
                });
            _21Aggregate;
            }).SetId(state, 0);
        _1ForceUpdateCache = ForceUpdateCache(_0CreateStaticCache);
        _1ForceUpdateCache;
        }, () => 
      {
        Cache[World] _0CreateStaticCache;// 4:CacheValueResettable->1:CreateStaticCache 95038
        _0CreateStaticCache = CreateStaticCache(() => 
          {
            IArray[Constraint] _0ConstraintEmptyArray;// 24:ConstraintEmptyArray 95054
            Random _1RandomNumberGenerator;// 11:RandomNumberGenerator 95111
            Func[Vector3] _2Bind;// 13:RandomPointsInBoundingBox->4:Bind 95066
            IArray[Vector3] _3ArrayOfFunction;// 13:RandomPointsInBoundingBox->1:ArrayOfFunction 95065
            IArray[Matrix] _4Map;// 9:RandomRigidBodies->0:Map 95061
            Single _5FloatOne;// 9:RandomRigidBodies->10:FloatOne 95103
            IArray[RigidBody] _6Map;// 9:RandomRigidBodies->6:Map 95060
            Single _7FloatZero;// 13:RigidBodyObstaclesFromNodes->3:FloatZero 95142
            IArray[RigidBody] _8Map;// 13:RigidBodyObstaclesFromNodes->1:Map 95115
            IArray[RigidBody] _9Concatenate;// 7:RigidBodySimulation->22:Concatenate 95043
            Int32 _10Zero;// 20:Zero 95144
            World _11CreateWorld;// 7:RigidBodySimulation->13:CreateWorld 95045
            Single _12Constant;// 0:Origin->0:Constant 95153
            Vector3 _13Vector3;// 0:Origin->1:Vector3 95152
            Single _14X;// 1:SetZ->4:X 95150
            Single _15Y;// 1:SetZ->5:Y 95151
            Single _16Constant;// 23:GravityVector->0:Constant 95154
            Vector3 _17Vector3;// 1:SetZ->2:Vector3 95149
            Vector3 _18MultiplyByScalar;// 27:MultiplyByScalar 95145
            World _19SetGravity;// 7:RigidBodySimulation->33:SetGravity 95044
            World _20Aggregate;// 7:RigidBodySimulation->103:Aggregate 95042
            World _21Aggregate;// 7:RigidBodySimulation->18:Aggregate 95040
            _0ConstraintEmptyArray = GetValue();
            _1RandomNumberGenerator = RandomNumberGenerator(seed);
            _2Bind = Bind((Random x0) => 
              {
                Vector3 _0Vector3;// 6:PseudoRandomVector->1:Vector3 95072
                Single _1Constant;// 18:Origin-ext->0:Constant 95109
                Vector3 _2Vector3;// 18:Origin-ext->1:Vector3 95108
                BoundingSphere _3Sphere;// 5:BoxFromPointAndRadius->3:Sphere 95107
                BoundingBox _4BoxFromSphere;// 5:BoxFromPointAndRadius->0:BoxFromSphere 95106
                Vector3 _5BoxMax;// 2:BoundingBoxExtent->1:BoxMax 95076
                Vector3 _6BoxMin;// 2:BoundingBoxExtent->2:BoxMin 95077
                Vector3 _7Subtract;// 2:BoundingBoxExtent->3:Subtract 95075
                Vector3 _8Multiply;// 5:PseudoRandomPointInBox->3:Multiply 95070
                Vector3 _9BoxMin;// 5:PseudoRandomPointInBox->4:BoxMin 95078
                Vector3 _10Add;// 5:PseudoRandomPointInBox->5:Add 95069
                _0Vector3 = Vector3(PseudoRandomFloat(x0), PseudoRandomFloat(x0), PseudoRandomFloat(x0));
                _1Constant = 0;
                _2Vector3 = Vector3(_1Constant, _1Constant, _1Constant);
                _3Sphere = Sphere(_2Vector3, spawnRadius);
                _4BoxFromSphere = BoxFromSphere(_3Sphere);
                _5BoxMax = BoxMax(_4BoxFromSphere);
                _6BoxMin = BoxMin(_4BoxFromSphere);
                _7Subtract = Subtract(_5BoxMax, _6BoxMin);
                _8Multiply = Multiply(_0Vector3, _7Subtract);
                _9BoxMin = BoxMin(_4BoxFromSphere);
                _10Add = Add(_8Multiply, _9BoxMin);
                _10Add;
                }, _1RandomNumberGenerator);
            _3ArrayOfFunction = ArrayOfFunction(_2Bind, count);
            _4Map = Map(_3ArrayOfFunction, (Vector3 x0) => 
              {
                Matrix _0TranslationMatrix;// 9:RandomRigidBodies->5:TranslationMatrix 95080
                Matrix _1Multiply;// 9:RandomRigidBodies->12:Multiply 95079
                _0TranslationMatrix = TranslationMatrix(x0);
                _1Multiply = Multiply(modifierTransform, _0TranslationMatrix);
                _1Multiply;
                });
            _5FloatOne = FloatOne();
            _6Map = Map(_4Map, (Matrix x0) => 
              {
                IArray[Vector3] _0MeshVertices;// 7:RigidBodyFromMeshWithMass->27:MeshVertices 95096
                Vector3 _1DefaultValueOfElement;// 2:Sum->4:DefaultValueOfElement 95092
                Vector3 _2Aggregate;// 2:Sum->0:Aggregate 95091
                Int32 _3Count;// 28:AverageVector->3:Count 95095
                Single _4IntAsFloat;// 28:AverageVector->1:IntAsFloat 95094
                Vector3 _5DivideByScalar;// 28:AverageVector->5:DivideByScalar 95089
                Matrix _6TranslationMatrix;// 7:RigidBodyFromMeshWithMass->40:TranslationMatrix 95087
                Matrix _7Multiply;// 7:RigidBodyFromMeshWithMass->42:Multiply 95086
                Single _8Constant;// 110:Origin->0:Constant 95099
                Vector3 _9Vector3;// 110:Origin->1:Vector3 95098
                Single _10FloatZero;// 7:RigidBodyFromMeshWithMass->112:FloatZero 95101
                RigidBodyDynamics _11CreateRigidBodyDynamics;// 7:RigidBodyFromMeshWithMass->111:CreateRigidBodyDynamics 95100
                Boolean _12False;// 7:RigidBodyFromMeshWithMass->122:False 95102
                RigidBody _13CreateRigidBody;// 7:RigidBodyFromMeshWithMass->107:CreateRigidBody 95084
                _0MeshVertices = MeshVertices(mesh);
                _1DefaultValueOfElement = DefaultValueOfElement(_0MeshVertices);
                _2Aggregate = Aggregate(_0MeshVertices, _1DefaultValueOfElement, (Vector3 x0, Vector3 x1) => 
                  {
                    Vector3 _0Add;// 2:Sum->2:Add 95093
                    _0Add = Add(x0, x1);
                    _0Add;
                    });
                _3Count = Count(_0MeshVertices);
                _4IntAsFloat = IntAsFloat(_3Count);
                _5DivideByScalar = DivideByScalar(_2Aggregate, _4IntAsFloat);
                _6TranslationMatrix = TranslationMatrix(_5DivideByScalar);
                _7Multiply = Multiply(x0, _6TranslationMatrix);
                _8Constant = 0;
                _9Vector3 = Vector3(_8Constant, _8Constant, _8Constant);
                _10FloatZero = FloatZero();
                _11CreateRigidBodyDynamics = CreateRigidBodyDynamics(_5FloatOne, _10FloatZero, _10FloatZero, _10FloatZero, _10FloatZero, _10FloatZero);
                _12False = False();
                _13CreateRigidBody = CreateRigidBody(_7Multiply, _9Vector3, mesh, _11CreateRigidBodyDynamics, _9Vector3, _12False);
                _13CreateRigidBody;
                });
            _7FloatZero = FloatZero();
            _8Map = Map(obstacles, (INode x0) => 
              {
                Matrix _0WorldTransform;// 2:RigidBodyFromNode->2:WorldTransform 95140
                TriMesh _1MeshFromNode;// 2:RigidBodyFromNode->3:MeshFromNode 95141
                IArray[Vector3] _2MeshVertices;// 0:RigidBodyFromMeshWithMass->27:MeshVertices 95133
                Vector3 _3DefaultValueOfElement;// 2:Sum->4:DefaultValueOfElement 95129
                Vector3 _4Aggregate;// 2:Sum->0:Aggregate 95128
                Int32 _5Count;// 28:AverageVector->3:Count 95132
                Single _6IntAsFloat;// 28:AverageVector->1:IntAsFloat 95131
                Vector3 _7DivideByScalar;// 28:AverageVector->5:DivideByScalar 95126
                Matrix _8TranslationMatrix;// 0:RigidBodyFromMeshWithMass->40:TranslationMatrix 95124
                Matrix _9Multiply;// 0:RigidBodyFromMeshWithMass->42:Multiply 95123
                Single _10Constant;// 110:Origin->0:Constant 95136
                Vector3 _11Vector3;// 110:Origin->1:Vector3 95135
                Single _12FloatZero;// 0:RigidBodyFromMeshWithMass->112:FloatZero 95138
                RigidBodyDynamics _13CreateRigidBodyDynamics;// 0:RigidBodyFromMeshWithMass->111:CreateRigidBodyDynamics 95137
                Boolean _14False;// 0:RigidBodyFromMeshWithMass->122:False 95139
                RigidBody _15CreateRigidBody;// 0:RigidBodyFromMeshWithMass->107:CreateRigidBody 95121
                _0WorldTransform = WorldTransform(x0);
                _1MeshFromNode = MeshFromNode(x0);
                _2MeshVertices = MeshVertices(_1MeshFromNode);
                _3DefaultValueOfElement = DefaultValueOfElement(_2MeshVertices);
                _4Aggregate = Aggregate(_2MeshVertices, _3DefaultValueOfElement, (Vector3 x0, Vector3 x1) => 
                  {
                    Vector3 _0Add;// 2:Sum->2:Add 95130
                    _0Add = Add(x0, x1);
                    _0Add;
                    });
                _5Count = Count(_2MeshVertices);
                _6IntAsFloat = IntAsFloat(_5Count);
                _7DivideByScalar = DivideByScalar(_4Aggregate, _6IntAsFloat);
                _8TranslationMatrix = TranslationMatrix(_7DivideByScalar);
                _9Multiply = Multiply(_0WorldTransform, _8TranslationMatrix);
                _10Constant = 0;
                _11Vector3 = Vector3(_10Constant, _10Constant, _10Constant);
                _12FloatZero = FloatZero();
                _13CreateRigidBodyDynamics = CreateRigidBodyDynamics(_7FloatZero, _12FloatZero, _12FloatZero, _12FloatZero, _12FloatZero, _12FloatZero);
                _14False = False();
                _15CreateRigidBody = CreateRigidBody(_9Multiply, _11Vector3, _1MeshFromNode, _13CreateRigidBodyDynamics, _11Vector3, _14False);
                _15CreateRigidBody;
                });
            _9Concatenate = Concatenate(_6Map, _8Map);
            _10Zero = Zero();
            _11CreateWorld = CreateWorld(_10Zero);
            _12Constant = 0;
            _13Vector3 = Vector3(_12Constant, _12Constant, _12Constant);
            _14X = X(_13Vector3);
            _15Y = Y(_13Vector3);
            _16Constant = -9.81;
            _17Vector3 = Vector3(_14X, _15Y, _16Constant);
            _18MultiplyByScalar = MultiplyByScalar(_17Vector3, gravity speed);
            _19SetGravity = SetGravity(_11CreateWorld, _18MultiplyByScalar);
            _20Aggregate = Aggregate(_9Concatenate, _19SetGravity, (World x0, RigidBody x1) => 
              {
                World _0AddRigidBody;// 7:RigidBodySimulation->11:AddRigidBody 95046
                _0AddRigidBody = AddRigidBody(x0, x1);
                _0AddRigidBody;
                });
            _21Aggregate = Aggregate(_0ConstraintEmptyArray, _20Aggregate, (World x0, Constraint x1) => 
              {
                World _0AddConstraint;// 7:RigidBodySimulation->46:AddConstraint 95047
                _0AddConstraint = AddConstraint(x0, x1);
                _0AddConstraint;
                });
            _21Aggregate;
            }).SetId(state, 0);
        _0CreateStaticCache;
        });
    _3Zero = Zero();
    _4CachedValue = CachedValue(_2IfThen, _3Zero);
    _5GetSimulationTime = GetSimulationTime(_4CachedValue);
    _6LessThan = LessThan(_1FramesToTicks, _5GetSimulationTime);
    _7IfThen = IfThen(_6LessThan, () => 
      {
        World _0ResetWorld;// 3:RunSimulationUntil->2:ResetWorld 95028
        _0ResetWorld = ResetWorld(_4CachedValue);
        _0ResetWorld;
        }, () => 
      {
        _4CachedValue;
        });
    _8GetSimulationTime = GetSimulationTime(_7IfThen);
    _9Subtract = Subtract(_1FramesToTicks, _8GetSimulationTime);
    _10StepSimulation = StepSimulation(_7IfThen, _9Subtract);
    _11GetNumberOfRigidBodies = GetNumberOfRigidBodies(_10StepSimulation);
    _12Range = Range(_11GetNumberOfRigidBodies);
    _13Pass-through: function1 = (Int32 x0) => 
      {
        RigidBody _0GetRigidBodyByIndex;// 8:RigidBodySimulationTransforms->4:GetRigidBodyByIndex 95021
        Matrix _1GetRigidBodyWorldTransform;// 8:RigidBodySimulationTransforms->1:GetRigidBodyWorldTransform 95020
        _0GetRigidBodyByIndex = GetRigidBodyByIndex(_10StepSimulation, x0);
        _1GetRigidBodyWorldTransform = GetRigidBodyWorldTransform(_10StepSimulation, _0GetRigidBodyByIndex);
        _1GetRigidBodyWorldTransform;
        };
    _14Map = Map(_12Range, _13Pass-through: function1);
    _15InvertMatrix = InvertMatrix(modifierTransform);
    _16Map = Map(_14Map, (Matrix x0) => 
      {
        Matrix _0Multiply;// 7:RigidBodySimulation->21:Multiply 95048
        _0Multiply = Multiply(x0, _15InvertMatrix);
        _0Multiply;
        });
    _17RandomNumberGenerator = RandomNumberGenerator(seed);
    _18Bind = Bind((Random x0) => 
      {
        Vector3 _0Vector3;// 6:PseudoRandomVector->1:Vector3 95072
        Single _1Constant;// 18:Origin-ext->0:Constant 95109
        Vector3 _2Vector3;// 18:Origin-ext->1:Vector3 95108
        BoundingSphere _3Sphere;// 5:BoxFromPointAndRadius->3:Sphere 95107
        BoundingBox _4BoxFromSphere;// 5:BoxFromPointAndRadius->0:BoxFromSphere 95106
        Vector3 _5BoxMax;// 2:BoundingBoxExtent->1:BoxMax 95076
        Vector3 _6BoxMin;// 2:BoundingBoxExtent->2:BoxMin 95077
        Vector3 _7Subtract;// 2:BoundingBoxExtent->3:Subtract 95075
        Vector3 _8Multiply;// 5:PseudoRandomPointInBox->3:Multiply 95070
        Vector3 _9BoxMin;// 5:PseudoRandomPointInBox->4:BoxMin 95078
        Vector3 _10Add;// 5:PseudoRandomPointInBox->5:Add 95069
        _0Vector3 = Vector3(PseudoRandomFloat(x0), PseudoRandomFloat(x0), PseudoRandomFloat(x0));
        _1Constant = 0;
        _2Vector3 = Vector3(_1Constant, _1Constant, _1Constant);
        _3Sphere = Sphere(_2Vector3, spawnRadius);
        _4BoxFromSphere = BoxFromSphere(_3Sphere);
        _5BoxMax = BoxMax(_4BoxFromSphere);
        _6BoxMin = BoxMin(_4BoxFromSphere);
        _7Subtract = Subtract(_5BoxMax, _6BoxMin);
        _8Multiply = Multiply(_0Vector3, _7Subtract);
        _9BoxMin = BoxMin(_4BoxFromSphere);
        _10Add = Add(_8Multiply, _9BoxMin);
        _10Add;
        }, _17RandomNumberGenerator);
    _19ArrayOfFunction = ArrayOfFunction(_18Bind, count);
    _20Map = Map(_19ArrayOfFunction, (Vector3 x0) => 
      {
        Matrix _0TranslationMatrix;// 9:RandomRigidBodies->5:TranslationMatrix 95080
        Matrix _1Multiply;// 9:RandomRigidBodies->12:Multiply 95079
        _0TranslationMatrix = TranslationMatrix(x0);
        _1Multiply = Multiply(modifierTransform, _0TranslationMatrix);
        _1Multiply;
        });
    _21FloatOne = FloatOne();
    _22Map = Map(_20Map, (Matrix x0) => 
      {
        IArray[Vector3] _0MeshVertices;// 7:RigidBodyFromMeshWithMass->27:MeshVertices 95096
        Vector3 _1DefaultValueOfElement;// 2:Sum->4:DefaultValueOfElement 95092
        Vector3 _2Aggregate;// 2:Sum->0:Aggregate 95091
        Int32 _3Count;// 28:AverageVector->3:Count 95095
        Single _4IntAsFloat;// 28:AverageVector->1:IntAsFloat 95094
        Vector3 _5DivideByScalar;// 28:AverageVector->5:DivideByScalar 95089
        Matrix _6TranslationMatrix;// 7:RigidBodyFromMeshWithMass->40:TranslationMatrix 95087
        Matrix _7Multiply;// 7:RigidBodyFromMeshWithMass->42:Multiply 95086
        Single _8Constant;// 110:Origin->0:Constant 95099
        Vector3 _9Vector3;// 110:Origin->1:Vector3 95098
        Single _10FloatZero;// 7:RigidBodyFromMeshWithMass->112:FloatZero 95101
        RigidBodyDynamics _11CreateRigidBodyDynamics;// 7:RigidBodyFromMeshWithMass->111:CreateRigidBodyDynamics 95100
        Boolean _12False;// 7:RigidBodyFromMeshWithMass->122:False 95102
        RigidBody _13CreateRigidBody;// 7:RigidBodyFromMeshWithMass->107:CreateRigidBody 95084
        _0MeshVertices = MeshVertices(mesh);
        _1DefaultValueOfElement = DefaultValueOfElement(_0MeshVertices);
        _2Aggregate = Aggregate(_0MeshVertices, _1DefaultValueOfElement, (Vector3 x0, Vector3 x1) => 
          {
            Vector3 _0Add;// 2:Sum->2:Add 95093
            _0Add = Add(x0, x1);
            _0Add;
            });
        _3Count = Count(_0MeshVertices);
        _4IntAsFloat = IntAsFloat(_3Count);
        _5DivideByScalar = DivideByScalar(_2Aggregate, _4IntAsFloat);
        _6TranslationMatrix = TranslationMatrix(_5DivideByScalar);
        _7Multiply = Multiply(x0, _6TranslationMatrix);
        _8Constant = 0;
        _9Vector3 = Vector3(_8Constant, _8Constant, _8Constant);
        _10FloatZero = FloatZero();
        _11CreateRigidBodyDynamics = CreateRigidBodyDynamics(_21FloatOne, _10FloatZero, _10FloatZero, _10FloatZero, _10FloatZero, _10FloatZero);
        _12False = False();
        _13CreateRigidBody = CreateRigidBody(_7Multiply, _9Vector3, mesh, _11CreateRigidBodyDynamics, _9Vector3, _12False);
        _13CreateRigidBody;
        });
    _23Count = Count(_22Map);
    _24Take = Take(_16Map, _23Count);
    _25Combine = Combine(_0ArrayOf, _24Take, (TriMesh x0, Matrix x1) => 
      {
        IArray[Vector3] _0MeshVertices;// 2:DeformMeshPoints->0:MeshVertices 95162
        Func[Vector3, Vector3] _1Pass-through: function1;// 0:Pass-through: function1 95159
        IArray[Vector3] _2Map;// 2:DeformMeshPoints->1:Map 95161
        TriMesh _3SetMeshVertices;// 2:DeformMeshPoints->4:SetMeshVertices 95160
        _0MeshVertices = MeshVertices(x0);
        _1Pass-through: function1 = (Vector3 x0) => 
          {
            Vector3 _0Transform;// 17:TransformMesh->0:Transform 95163
            _0Transform = Transform(x0, x1);
            _0Transform;
            };
        _2Map = Map(_0MeshVertices, _1Pass-through: function1);
        _3SetMeshVertices = SetMeshVertices(x0, _2Map);
        _3SetMeshVertices;
        });
    _26CombineAllMeshes = CombineAllMeshes(_25Combine);
    _26CombineAllMeshes;
    }