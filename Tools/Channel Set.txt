(InstanceState state, Int32 channel, TriMesh mesh, Single x, Single y, Single z) => 
  {
    Int32 _0Constant;// 5:MapChannelOrGeometryGet-ext->0:Constant 92404
    Boolean _1Equal;// 5:MapChannelOrGeometryGet-ext->4:Equal 92403
    MapChannel _4Pass-through: any;// 0:Pass-through: any 92395
    Object _5Null;// 6:IsNullFix2-ext->3:Null 92399
    Object _6As;// 6:IsNullFix2-ext->23:As 92397
    Boolean _7Equal;// 6:IsNullFix2-ext->1:Equal 92396
    Boolean _8Not;// 4:MapChannelExists-ext->4:Not 92394
    _0Constant = -3;
    _1Equal = Equal(channel, _0Constant);
    _4Pass-through: any = if (_1Equal)
      {
        MapChannel _2TopologyChannel;// 5:MapChannelOrGeometryGet-ext->6:TopologyChannel 92405
        _2TopologyChannel = TopologyChannel(mesh);
        _2TopologyChannel;
        }else
      {
        MapChannel _3GetMapChannel;// 5:MapChannelOrGeometryGet-ext->3:GetMapChannel 92406
        _3GetMapChannel = GetMapChannel(mesh, channel);
        _3GetMapChannel;
        };
    _5Null = Null();
    _6As = As(_4Pass-through: any, (Object x0) => 
      {
        Object _0IgnoreFirst;// 6:IsNullFix2-ext->5:IgnoreFirst 92398
        _0IgnoreFirst = IgnoreFirst(x0, _5Null);
        _0IgnoreFirst;
        });
    _7Equal = Equal(_6As, _5Null);
    _8Not = Not(_7Equal);
    if (_8Not)
      {
        Int32 _9Constant;// 9:MapChannelOrGeometrySet-ext->0:Constant 92413
        Boolean _10Equal;// 9:MapChannelOrGeometrySet-ext->6:Equal 92412
        Int32 _11Constant;// 5:MapChannelOrGeometryGet-ext->0:Constant 92434
        Boolean _12Equal;// 5:MapChannelOrGeometryGet-ext->4:Equal 92433
        MapChannel _15Pass-through: any;// 0:Pass-through: any 92425
        Object _16Null;// 6:IsNullFix2-ext->3:Null 92429
        Object _17As;// 6:IsNullFix2-ext->23:As 92427
        Boolean _18Equal;// 6:IsNullFix2-ext->1:Equal 92426
        Boolean _19Not;// 1:MapChannelExists-ext->4:Not 92424
        IArray[Vector3] _45MapChannelVertexBuffer;// 5:MapChannelTransform-ext->0:MapChannelVertexBuffer 92418
        Vector3 _46Vector3;// 1:Vector3 92476
        Func[Vector3, Vector3] _47Pass-through: function1;// 0:Pass-through: function1 92390
        IArray[Vector3] _48Map;// 5:MapChannelTransform-ext->1:Map 92417
        Int32 _80Constant;// 5:MapChannelOrGeometryGet-ext->0:Constant 92441
        Boolean _81Equal;// 5:MapChannelOrGeometryGet-ext->4:Equal 92440
        Int32 _84Constant;// 8:MapChannelOrGeometryGet-ext->0:Constant 92448
        Boolean _85Equal;// 8:MapChannelOrGeometryGet-ext->4:Equal 92447
        Int32 _86Constant;// 10:MapChannelOrGeometrySet-ext->0:Constant 92459
        Boolean _87Equal;// 10:MapChannelOrGeometrySet-ext->6:Equal 92458
        Single _88Constant;// 5:Origin->0:Constant 92465
        Vector3 _89Vector3;// 5:Origin->1:Vector3 92464
        IArray[Vector3] _90Unit;// 4:MapChannelClear-ext->4:Unit 92463
        Int32 _91Zero;// 4:MapChannelClear-ext->9:Zero 92467
        Int32 _92FaceCount;// 4:MapChannelClear-ext->6:FaceCount 92471
        Int32 _93Constant;// 1:Three->0:Constant 92470
        Int32 _94Multiply;// 7:MultiplyByThree->2:Multiply 92469
        IArray[Int32] _95ArrayOf;// 4:MapChannelClear-ext->8:ArrayOf 92466
        IArray[Int32] _127MapChannelIndexBuffer;// 5:MapChannelTransform-ext->8:MapChannelIndexBuffer 92472
        _9Constant = -3;
        _10Equal = Equal(_9Constant, channel);
        _11Constant = -3;
        _12Equal = Equal(channel, _11Constant);
        _15Pass-through: any = if (_12Equal)
          {
            MapChannel _13TopologyChannel;// 5:MapChannelOrGeometryGet-ext->6:TopologyChannel 92435
            _13TopologyChannel = TopologyChannel(mesh);
            _13TopologyChannel;
            }else
          {
            MapChannel _14GetMapChannel;// 5:MapChannelOrGeometryGet-ext->3:GetMapChannel 92436
            _14GetMapChannel = GetMapChannel(mesh, channel);
            _14GetMapChannel;
            };
        _16Null = Null();
        _17As = As(_15Pass-through: any, (Object x0) => 
          {
            Object _0IgnoreFirst;// 6:IsNullFix2-ext->5:IgnoreFirst 92428
            _0IgnoreFirst = IgnoreFirst(x0, _16Null);
            _0IgnoreFirst;
            });
        _18Equal = Equal(_17As, _16Null);
        _19Not = Not(_18Equal);
        _45MapChannelVertexBuffer = MapChannelVertexBuffer(if (_19Not)
          {
            Int32 _20Constant;// 5:MapChannelOrGeometryGet-ext->0:Constant 92441
            Boolean _21Equal;// 5:MapChannelOrGeometryGet-ext->4:Equal 92440
            _20Constant = -3;
            _21Equal = Equal(channel, _20Constant);
            if (_21Equal)
              {
                MapChannel _22TopologyChannel;// 5:MapChannelOrGeometryGet-ext->6:TopologyChannel 92442
                _22TopologyChannel = TopologyChannel(mesh);
                _22TopologyChannel;
                }else
              {
                MapChannel _23GetMapChannel;// 5:MapChannelOrGeometryGet-ext->3:GetMapChannel 92443
                _23GetMapChannel = GetMapChannel(mesh, channel);
                _23GetMapChannel;
                };
            }else
          {
            Int32 _24Constant;// 8:MapChannelOrGeometryGet-ext->0:Constant 92448
            Boolean _25Equal;// 8:MapChannelOrGeometryGet-ext->4:Equal 92447
            Int32 _26Constant;// 10:MapChannelOrGeometrySet-ext->0:Constant 92459
            Boolean _27Equal;// 10:MapChannelOrGeometrySet-ext->6:Equal 92458
            Single _28Constant;// 5:Origin->0:Constant 92465
            Vector3 _29Vector3;// 5:Origin->1:Vector3 92464
            IArray[Vector3] _30Unit;// 4:MapChannelClear-ext->4:Unit 92463
            Int32 _31Zero;// 4:MapChannelClear-ext->9:Zero 92467
            Int32 _32FaceCount;// 4:MapChannelClear-ext->6:FaceCount 92471
            Int32 _33Constant;// 1:Three->0:Constant 92470
            Int32 _34Multiply;// 7:MultiplyByThree->2:Multiply 92469
            IArray[Int32] _35ArrayOf;// 4:MapChannelClear-ext->8:ArrayOf 92466
            TriMesh _39Pass-through: TriMesh;// 0:Pass-through: TriMesh 92445
            _24Constant = -3;
            _25Equal = Equal(channel, _24Constant);
            _26Constant = -3;
            _27Equal = Equal(_26Constant, channel);
            _28Constant = 0;
            _29Vector3 = Vector3(_28Constant, _28Constant, _28Constant);
            _30Unit = Unit(_29Vector3);
            _31Zero = Zero();
            _32FaceCount = FaceCount(mesh);
            _33Constant = 3;
            _34Multiply = Multiply(_32FaceCount, _33Constant);
            _35ArrayOf = ArrayOf(_31Zero, _34Multiply);
            _39Pass-through: TriMesh = if (_27Equal)
              {
                MeshData _36MeshData;// 10:MapChannelOrGeometrySet-ext->9:MeshData 92461
                TriMesh _37CreateMeshWithMeshData;// 10:MapChannelOrGeometrySet-ext->8:CreateMeshWithMeshData 92460
                _36MeshData = MeshData(mesh);
                _37CreateMeshWithMeshData = CreateMeshWithMeshData(_30Unit, _35ArrayOf, _36MeshData);
                _37CreateMeshWithMeshData;
                }else
              {
                TriMesh _38SetMapChannel;// 10:MapChannelOrGeometrySet-ext->0:SetMapChannel 92462
                _38SetMapChannel = SetMapChannel(mesh, channel, _30Unit, _35ArrayOf);
                _38SetMapChannel;
                };
            if (_25Equal)
              {
                MapChannel _43TopologyChannel;// 8:MapChannelOrGeometryGet-ext->6:TopologyChannel 92449
                _43TopologyChannel = TopologyChannel(_39Pass-through: TriMesh);
                _43TopologyChannel;
                }else
              {
                MapChannel _44GetMapChannel;// 8:MapChannelOrGeometryGet-ext->3:GetMapChannel 92450
                _44GetMapChannel = GetMapChannel(_39Pass-through: TriMesh, channel);
                _44GetMapChannel;
                };
            });
        _46Vector3 = Vector3(x, y, z);
        _47Pass-through: function1 = (Vector3 x0) => 
          {
            Vector3 _0IgnoreFirst;// 3:IgnoreFirst 92475
            _0IgnoreFirst = IgnoreFirst(x0, _46Vector3);
            _0IgnoreFirst;
            };
        _48Map = Map(_45MapChannelVertexBuffer, _47Pass-through: function1);
        _80Constant = -3;
        _81Equal = Equal(channel, _80Constant);
        _84Constant = -3;
        _85Equal = Equal(channel, _84Constant);
        _86Constant = -3;
        _87Equal = Equal(_86Constant, channel);
        _88Constant = 0;
        _89Vector3 = Vector3(_88Constant, _88Constant, _88Constant);
        _90Unit = Unit(_89Vector3);
        _91Zero = Zero();
        _92FaceCount = FaceCount(mesh);
        _93Constant = 3;
        _94Multiply = Multiply(_92FaceCount, _93Constant);
        _95ArrayOf = ArrayOf(_91Zero, _94Multiply);
        _127MapChannelIndexBuffer = MapChannelIndexBuffer(if (_19Not)
          {
            if (_81Equal)
              {
                MapChannel _112TopologyChannel;// 5:MapChannelOrGeometryGet-ext->6:TopologyChannel 92442
                _112TopologyChannel = TopologyChannel(mesh);
                _112TopologyChannel;
                }else
              {
                MapChannel _113GetMapChannel;// 5:MapChannelOrGeometryGet-ext->3:GetMapChannel 92443
                _113GetMapChannel = GetMapChannel(mesh, channel);
                _113GetMapChannel;
                };
            }else
          {
            if (_85Equal)
              {
                TriMesh _120Pass-through: TriMesh;// 0:Pass-through: TriMesh 92445
                MapChannel _121TopologyChannel;// 8:MapChannelOrGeometryGet-ext->6:TopologyChannel 92449
                _120Pass-through: TriMesh = if (_87Equal)
                  {
                    MeshData _117MeshData;// 10:MapChannelOrGeometrySet-ext->9:MeshData 92461
                    TriMesh _118CreateMeshWithMeshData;// 10:MapChannelOrGeometrySet-ext->8:CreateMeshWithMeshData 92460
                    _117MeshData = MeshData(mesh);
                    _118CreateMeshWithMeshData = CreateMeshWithMeshData(_90Unit, _95ArrayOf, _117MeshData);
                    _118CreateMeshWithMeshData;
                    }else
                  {
                    TriMesh _119SetMapChannel;// 10:MapChannelOrGeometrySet-ext->0:SetMapChannel 92462
                    _119SetMapChannel = SetMapChannel(mesh, channel, _90Unit, _95ArrayOf);
                    _119SetMapChannel;
                    };
                _121TopologyChannel = TopologyChannel(_120Pass-through: TriMesh);
                _121TopologyChannel;
                }else
              {
                TriMesh _125Pass-through: TriMesh;// 0:Pass-through: TriMesh 92445
                MapChannel _126GetMapChannel;// 8:MapChannelOrGeometryGet-ext->3:GetMapChannel 92450
                _125Pass-through: TriMesh = if (_87Equal)
                  {
                    MeshData _122MeshData;// 10:MapChannelOrGeometrySet-ext->9:MeshData 92461
                    TriMesh _123CreateMeshWithMeshData;// 10:MapChannelOrGeometrySet-ext->8:CreateMeshWithMeshData 92460
                    _122MeshData = MeshData(mesh);
                    _123CreateMeshWithMeshData = CreateMeshWithMeshData(_90Unit, _95ArrayOf, _122MeshData);
                    _123CreateMeshWithMeshData;
                    }else
                  {
                    TriMesh _124SetMapChannel;// 10:MapChannelOrGeometrySet-ext->0:SetMapChannel 92462
                    _124SetMapChannel = SetMapChannel(mesh, channel, _90Unit, _95ArrayOf);
                    _124SetMapChannel;
                    };
                _126GetMapChannel = GetMapChannel(_125Pass-through: TriMesh, channel);
                _126GetMapChannel;
                };
            });
        if (_10Equal)
          {
            MeshData _128MeshData;// 9:MapChannelOrGeometrySet-ext->9:MeshData 92415
            TriMesh _129CreateMeshWithMeshData;// 9:MapChannelOrGeometrySet-ext->8:CreateMeshWithMeshData 92414
            _128MeshData = MeshData(mesh);
            _129CreateMeshWithMeshData = CreateMeshWithMeshData(_48Map, _127MapChannelIndexBuffer, _128MeshData);
            _129CreateMeshWithMeshData;
            }else
          {
            TriMesh _130SetMapChannel;// 9:MapChannelOrGeometrySet-ext->0:SetMapChannel 92416
            _130SetMapChannel = SetMapChannel(mesh, channel, _48Map, _127MapChannelIndexBuffer);
            _130SetMapChannel;
            };
        }else
      {
        mesh;
        };
    }