(InstanceState state, TriMesh mesh, Boolean invert, Single x start, Single y start, Single z start, Single x range, Single y range, Single z range) => 
  {
    IArray[Vector3] _0MeshVertices;// 9:VertexSelectionSetUsingPredicate-ext->0:MeshVertices 90310
    IArray[Vector3] _1MeshVertices;// 10:MeshBoundingBox-ext->1:MeshVertices 90336
    BoundingBox _2BoxFromPoints;// 10:MeshBoundingBox-ext->0:BoxFromPoints 90335
    Vector3 _3Vector3;// 12:Vector3 90338
    Single _4Constant;// 0:Constant 90342
    Vector3 _5DivideByScalar;// 14:DivideByScalar 90337
    Vector3 _6Vector3;// 13:Vector3 90344
    Func[Vector3, Boolean] _7Pass-through: function1;// 0:Pass-through: function1 90307
    IArray[Boolean] _8Map;// 9:VertexSelectionSetUsingPredicate-ext->2:Map 90309
    TriMesh _9SetVertexSelection;// 9:VertexSelectionSetUsingPredicate-ext->1:SetVertexSelection 90308
    _0MeshVertices = MeshVertices(mesh);
    _1MeshVertices = MeshVertices(mesh);
    _2BoxFromPoints = BoxFromPoints(_1MeshVertices);
    _3Vector3 = Vector3(x start, y start, z start);
    _4Constant = 100;
    _5DivideByScalar = DivideByScalar(_3Vector3, _4Constant);
    _6Vector3 = Vector3(x range, y range, z range);
    _7Pass-through: function1 = (Vector3 x0) => 
      {
        Vector3 _0BoxMin;// 17:BoundingBoxSlice-ext->7:BoxMin 90326
        Vector3 _1BoxMax;// 11:BoundingBoxExtent->1:BoxMax 90330
        Vector3 _2BoxMin;// 11:BoundingBoxExtent->2:BoxMin 90331
        Vector3 _3Subtract;// 11:BoundingBoxExtent->3:Subtract 90329
        Vector3 _4Multiply;// 17:BoundingBoxSlice-ext->10:Multiply 90327
        Vector3 _5Add;// 17:BoundingBoxSlice-ext->13:Add 90325
        Vector3 _6DivideByScalar;// 15:DivideByScalar 90343
        Vector3 _7Multiply;// 17:BoundingBoxSlice-ext->12:Multiply 90333
        Vector3 _8Add;// 17:BoundingBoxSlice-ext->14:Add 90332
        BoundingBox _9Box;// 17:BoundingBoxSlice-ext->15:Box 90324
        Boolean _10BoxContainsOrIntersectsPoint;// 7:BoxContainsOrIntersectsPoint 90320
        Boolean _11Not;// 19:ExclusiveOrBoolean-ext->3:Not 90316
        Boolean _12AndAlso;// 19:ExclusiveOrBoolean-ext->2:AndAlso 90315
        Boolean _13Not;// 19:ExclusiveOrBoolean-ext->6:Not 90318
        Boolean _14AndAlso;// 19:ExclusiveOrBoolean-ext->5:AndAlso 90317
        Boolean _15OrElse;// 19:ExclusiveOrBoolean-ext->4:OrElse 90314
        _0BoxMin = BoxMin(_2BoxFromPoints);
        _1BoxMax = BoxMax(_2BoxFromPoints);
        _2BoxMin = BoxMin(_2BoxFromPoints);
        _3Subtract = Subtract(_1BoxMax, _2BoxMin);
        _4Multiply = Multiply(_3Subtract, _5DivideByScalar);
        _5Add = Add(_0BoxMin, _4Multiply);
        _6DivideByScalar = DivideByScalar(_6Vector3, _4Constant);
        _7Multiply = Multiply(_3Subtract, _6DivideByScalar);
        _8Add = Add(_5Add, _7Multiply);
        _9Box = Box(_5Add, _8Add);
        _10BoxContainsOrIntersectsPoint = BoxContainsOrIntersectsPoint(_9Box, x0);
        _11Not = Not(_10BoxContainsOrIntersectsPoint);
        _12AndAlso = AndAlso(invert, _11Not);
        _13Not = Not(invert);
        _14AndAlso = AndAlso(_13Not, _10BoxContainsOrIntersectsPoint);
        _15OrElse = OrElse(_12AndAlso, _14AndAlso);
        _15OrElse;
        };
    _8Map = Map(_0MeshVertices, _7Pass-through: function1);
    _9SetVertexSelection = SetVertexSelection(mesh, _8Map);
    _9SetVertexSelection;
    }