(InstanceState state, BoundingBox boundingBox, Int32 seed, Int32 count) => 
  {
    Func[Random, Vector3] _0Pass-through: function1;// 0:Pass-through: function1 107387
    Random _1RandomNumberGenerator;// 2:RandomNumberGenerator 107405
    Func[Vector3] _2Bind;// 8:RandomArray-ext->4:Bind 107391
    Int32 _3Constant;// 1:Three->0:Constant 107409
    Int32 _4Multiply;// 7:MultiplyByThree->2:Multiply 107408
    IArray[Vector3] _5ArrayOfFunction;// 8:RandomArray-ext->5:ArrayOfFunction 107390
    TriMesh _6CreateMeshFromVertices;// 5:CreateMeshFromVertices 107383
    _0Pass-through: function1 = (Random x0) => 
      {
        Vector3 _0Vector3;// 6:PseudoRandomVector->1:Vector3 107397
        Vector3 _1BoxMax;// 2:BoundingBoxExtent->1:BoxMax 107401
        Vector3 _2BoxMin;// 2:BoundingBoxExtent->2:BoxMin 107402
        Vector3 _3Subtract;// 2:BoundingBoxExtent->3:Subtract 107400
        Vector3 _4Multiply;// 2:PseudoRandomPointInBox->3:Multiply 107395
        Vector3 _5BoxMin;// 2:PseudoRandomPointInBox->4:BoxMin 107403
        Vector3 _6Add;// 2:PseudoRandomPointInBox->5:Add 107394
        _0Vector3 = Vector3(PseudoRandomFloat(x0), PseudoRandomFloat(x0), PseudoRandomFloat(x0));
        _1BoxMax = BoxMax(boundingBox);
        _2BoxMin = BoxMin(boundingBox);
        _3Subtract = Subtract(_1BoxMax, _2BoxMin);
        _4Multiply = Multiply(_0Vector3, _3Subtract);
        _5BoxMin = BoxMin(boundingBox);
        _6Add = Add(_4Multiply, _5BoxMin);
        _6Add;
        };
    _1RandomNumberGenerator = RandomNumberGenerator(seed);
    _2Bind = Bind(_0Pass-through: function1, _1RandomNumberGenerator);
    _3Constant = 3;
    _4Multiply = Multiply(count, _3Constant);
    _5ArrayOfFunction = ArrayOfFunction(_2Bind, _4Multiply);
    _6CreateMeshFromVertices = CreateMeshFromVertices(_5ArrayOfFunction);
    _6CreateMeshFromVertices;
    }