(InstanceState state, Int32 widthSegments, Int32 heightSegments, Single width, Single height, Single length) => 
  {
    Int32 _0One;// 4:PlusOne->1:One 214706
    Int32 _1Add;// 4:PlusOne->0:Add 214705
    IArray[Single] _2RangeInclusiveFloat;// 8:SampleLerp->2:RangeInclusiveFloat 214680
    Single _3Constant;// 7:Vector3FromXY->0:Constant 214728
    Vector3 _4Vector3;// 7:Vector3FromXY->0:Vector3 214727
    Vector3 _5Negate;// 0:QuadMeshPlaneXY-ext->5:Negate 214724
    Single _6X;// 4:QuadMeshPlane-ext->2:X 214716
    Single _7Y;// 4:QuadMeshPlane-ext->3:Y 214717
    Single _8Constant;// 4:Vector3FromXY->0:Constant 214715
    Vector3 _9Vector3;// 4:Vector3FromXY->0:Vector3 214714
    Line _10Line;// 5:QuadMeshGrid-ext->10:Line 214707
    Single _11X;// 4:QuadMeshPlane-ext->6:X 214722
    Single _12Y;// 4:QuadMeshPlane-ext->8:Y 214723
    Single _13Constant;// 7:Vector3FromXY->0:Constant 214721
    Vector3 _14Vector3;// 7:Vector3FromXY->0:Vector3 214720
    Line _15Line;// 5:QuadMeshGrid-ext->11:Line 214708
    Func[Single, Line] _16Pass-through: function1;// 0:Pass-through: function1 214678
    IArray[Line] _17Map;// 8:SampleLerp->3:Map 214679
    Int32 _18One;// 6:PlusOne->1:One 214711
    Int32 _19Add;// 6:PlusOne->0:Add 214710
    Func[Line, IArray[Vector3]] _20Pass-through: function1;// 0:Pass-through: function1 214674
    IArray[IArray[Vector3]] _21Map;// 9:FlatMap->4:Map 214676
    IArray[Vector3] _22Flatten;// 9:FlatMap->3:Flatten 214675
    Boolean _23False;// 20:QuadPlaneMesh->5:False 214703
    QuadMesh _24QuadMeshStrip;// 20:QuadPlaneMesh->0:QuadMeshStrip 214672
    QuadMesh _25IgnoreFirst;// 5:QuadMeshGrid-ext->1:IgnoreFirst 214667
    IArray[Vector3] _26QuadMeshVertices;// 5:QuadMeshToTriMesh-ext->14:QuadMeshVertices 214617
    IArray[Int32] _27QuadMeshIndices;// 5:QuadMeshToTriMesh-ext->2:QuadMeshIndices 214630
    Int32 _28Count;// 3:Slices->2:Count 214627
    Int32 _29Constant;// 5:QuadMeshToTriMesh-ext->0:Constant 214631
    Int32 _30Divide;// 3:Slices->3:Divide 214626
    IArray[Int32] _31Range;// 3:Slices->4:Range 214625
    IArray[IArray[Int32]] _32Map;// 3:Slices->5:Map 214624
    Int32 _33Constant;// 5:QuadMeshToTriMesh-ext->0:Constant 214646
    IArray[Int32] _34Range;// 5:QuadMeshToTriMesh-ext->6:Range 214645
    Int32 _35Constant;// 5:QuadMeshToTriMesh-ext->0:Constant 214647
    IArray[Int32] _36Append;// 5:QuadMeshToTriMesh-ext->11:Append 214644
    Int32 _37Constant;// 5:QuadMeshToTriMesh-ext->0:Constant 214648
    IArray[Int32] _38Append;// 5:QuadMeshToTriMesh-ext->12:Append 214643
    Int32 _39Constant;// 5:QuadMeshToTriMesh-ext->0:Constant 214649
    IArray[Int32] _40Append;// 5:QuadMeshToTriMesh-ext->17:Append 214642
    IArray[Int32] _41Map;// 23:IntArrayCheck-ext->1:Map 214640
    Func[IArray[Int32], IArray[Int32]] _42Pass-through: function1;// 0:Pass-through: function1 214619
    IArray[IArray[Int32]] _43Map;// 1:FlatMap->4:Map 214621
    IArray[Int32] _44Flatten;// 1:FlatMap->3:Flatten 214620
    TriMesh _45CreateMesh;// 5:QuadMeshToTriMesh-ext->13:CreateMesh 214616
    IArray[Int32] _46MeshIndices;// 16:HideEveryThirdEdge->2:MeshIndices 214607
    IArray[Int32] _47Indices;// 16:HideEveryThirdEdge->8:Indices 214606
    Int32 _48Constant;// 16:HideEveryThirdEdge->0:Constant 214614
    Int32 _49Constant;// 16:HideEveryThirdEdge->0:Constant 214615
    IArray[Boolean] _50Map;// 16:HideEveryThirdEdge->5:Map 214605
    TriMesh _51SetVisibleEdges;// 16:HideEveryThirdEdge->9:SetVisibleEdges 214604
    IArray[Vector3] _52VertexNormals;// 1:VerticesAndNormalsToMatrices->5:VertexNormals 214597
    IArray[Vector3] _53MeshVertices;// 1:VerticesAndNormalsToMatrices->1:MeshVertices 214598
    Vector3 _54ZAxis;// 1:VerticesAndNormalsToMatrices->4:ZAxis 214601
    IArray[Matrix] _55Combine;// 1:VerticesAndNormalsToMatrices->3:Combine 214596
    Int32 _56Constant;// 7:CreateArrowMeshDefaults-ext->0:Constant 214923
    Int32 _57One;// 14:MinusOne->2:One 214906
    Int32 _58Subtract;// 14:MinusOne->1:Subtract 214905
    Int32 _59One;// 12:PlusOne->1:One 214827
    Int32 _60Add;// 12:PlusOne->0:Add 214826
    IArray[Single] _61RangeExclusiveFloat;// 11:RangeExclusiveFloatTo->0:RangeExclusiveFloat 214823
    Single _62Constant;// 1:LathePointsAroundAxis->0:Constant 214839
    Single _63ToRadians;// 2:LathePoints->9:ToRadians 214828
    IArray[Single] _64Map;// 11:RangeExclusiveFloatTo->2:Map 214822
    Int32 _65One;// 7:CreateArrowMeshDefaults-ext->2:One 214924
    Int32 _66One;// 16:PlusOne->1:One 214859
    Int32 _67Add;// 16:PlusOne->0:Add 214858
    IArray[Single] _68RangeInclusiveFloat;// 5:SampleLerp->2:RangeInclusiveFloat 214855
    Single _69Constant;// 7:CreateArrowMeshDefaults-ext->0:Constant 214925
    Single _70Constant;// 13:DivideBy100Float->0:Constant 214910
    Single _71Divide;// 13:DivideBy100Float->1:Divide 214909
    Single _72Constant;// 7:CreateArrowMeshDefaults-ext->0:Constant 214926
    Single _73Constant;// 4:DivideBy100Float->0:Constant 214914
    Single _74Divide;// 4:DivideBy100Float->1:Divide 214913
    Single _75Multiply;// 0:CreateArrowMesh-ext->17:Multiply 214911
    Single _76Multiply;// 0:CreateArrowMesh-ext->16:Multiply 214907
    Single _77Constant;// 0:Origin->0:Constant 214866
    Vector3 _78Vector3;// 0:Origin->1:Vector3 214865
    Single _79Y;// 12:SetX->3:Y 214863
    Single _80Z;// 12:SetX->4:Z 214864
    Vector3 _81Vector3;// 12:SetX->2:Vector3 214862
    Single _82X;// 11:OffsetY->7:X 214870
    Single _83Constant;// 7:CreateArrowMeshDefaults-ext->0:Constant 214927
    Single _84Constant;// 21:DivideBy100Float->0:Constant 214919
    Single _85Divide;// 21:DivideBy100Float->1:Divide 214918
    Single _86Multiply;// 0:CreateArrowMesh-ext->18:Multiply 214916
    Single _87Subtract;// 0:CreateArrowMesh-ext->19:Subtract 214915
    Single _88Y;// 11:OffsetY->6:Y 214872
    Single _89Add;// 11:OffsetY->3:Add 214871
    Single _90Z;// 11:OffsetY->5:Z 214873
    Vector3 _91Vector3;// 11:OffsetY->1:Vector3 214869
    Func[Single, Vector3] _92Pass-through: function1;// 0:Pass-through: function1 214853
    IArray[Vector3] _93Map;// 5:SampleLerp->3:Map 214854
    Int32 _94One;// 7:CreateArrowMeshDefaults-ext->1:One 214928
    Int32 _95One;// 17:PlusOne->1:One 214884
    Int32 _96Add;// 17:PlusOne->0:Add 214883
    IArray[Single] _97RangeInclusiveFloat;// 5:SampleLerp->2:RangeInclusiveFloat 214880
    Single _98Y;// 7:SetX->3:Y 214888
    Single _99Z;// 7:SetX->4:Z 214889
    Vector3 _100Vector3;// 7:SetX->2:Vector3 214887
    Single _101Constant;// 0:ArrowShape->0:Constant 214895
    Single _102X;// 8:OffsetY->7:X 214899
    Single _103Y;// 8:OffsetY->6:Y 214901
    Single _104Add;// 8:OffsetY->3:Add 214900
    Single _105Z;// 8:OffsetY->5:Z 214902
    Vector3 _106Vector3;// 8:OffsetY->1:Vector3 214898
    Single _107Y;// 14:SetX->3:Y 214893
    Single _108Z;// 14:SetX->4:Z 214894
    Vector3 _109Vector3;// 14:SetX->2:Vector3 214892
    Func[Single, Vector3] _110Pass-through: function1;// 0:Pass-through: function1 214878
    IArray[Vector3] _111Map;// 5:SampleLerp->3:Map 214879
    IArray[Vector3] _112Concatenate;// 0:ArrowShape->10:Concatenate 214848
    IArray[Vector3] _113Prepend;// 0:ArrowShape->18:Prepend 214847
    Vector3 _114YAxis;// 0:Arrow->9:YAxis 214903
    Func[Single, IArray[Vector3]] _115Pass-through: function1;// 0:Pass-through: function1 214817
    IArray[IArray[Vector3]] _116Map;// 10:FlatMap->4:Map 214819
    IArray[Vector3] _117Flatten;// 10:FlatMap->3:Flatten 214818
    Boolean _118True;// 1:LathePointsAroundAxis->5:True 214840
    Boolean _119False;// 2:LathePoints->7:False 214838
    QuadMesh _120QuadMeshStrip;// 2:LathePoints->0:QuadMeshStrip 214815
    IArray[Vector3] _121QuadMeshVertices;// 11:QuadMeshToTriMesh-ext->14:QuadMeshVertices 214764
    IArray[Int32] _122QuadMeshIndices;// 11:QuadMeshToTriMesh-ext->2:QuadMeshIndices 214777
    Int32 _123Count;// 3:Slices->2:Count 214774
    Int32 _124Constant;// 11:QuadMeshToTriMesh-ext->0:Constant 214778
    Int32 _125Divide;// 3:Slices->3:Divide 214773
    IArray[Int32] _126Range;// 3:Slices->4:Range 214772
    IArray[IArray[Int32]] _127Map;// 3:Slices->5:Map 214771
    Int32 _128Constant;// 11:QuadMeshToTriMesh-ext->0:Constant 214793
    IArray[Int32] _129Range;// 11:QuadMeshToTriMesh-ext->6:Range 214792
    Int32 _130Constant;// 11:QuadMeshToTriMesh-ext->0:Constant 214794
    IArray[Int32] _131Append;// 11:QuadMeshToTriMesh-ext->11:Append 214791
    Int32 _132Constant;// 11:QuadMeshToTriMesh-ext->0:Constant 214795
    IArray[Int32] _133Append;// 11:QuadMeshToTriMesh-ext->12:Append 214790
    Int32 _134Constant;// 11:QuadMeshToTriMesh-ext->0:Constant 214796
    IArray[Int32] _135Append;// 11:QuadMeshToTriMesh-ext->17:Append 214789
    IArray[Int32] _136Map;// 23:IntArrayCheck-ext->1:Map 214787
    Func[IArray[Int32], IArray[Int32]] _137Pass-through: function1;// 0:Pass-through: function1 214766
    IArray[IArray[Int32]] _138Map;// 1:FlatMap->4:Map 214768
    IArray[Int32] _139Flatten;// 1:FlatMap->3:Flatten 214767
    TriMesh _140CreateMesh;// 11:QuadMeshToTriMesh-ext->13:CreateMesh 214763
    IArray[Int32] _141MeshIndices;// 16:HideEveryThirdEdge->2:MeshIndices 214754
    IArray[Int32] _142Indices;// 16:HideEveryThirdEdge->8:Indices 214753
    Int32 _143Constant;// 16:HideEveryThirdEdge->0:Constant 214761
    Int32 _144Constant;// 16:HideEveryThirdEdge->0:Constant 214762
    IArray[Boolean] _145Map;// 16:HideEveryThirdEdge->5:Map 214752
    TriMesh _146SetVisibleEdges;// 16:HideEveryThirdEdge->9:SetVisibleEdges 214751
    IArray[Vector3] _147MeshVertices;// 2:DeformMeshPoints->0:MeshVertices 214747
    Vector3 _148XAxis;// 0:CreateArrowMesh-ext->20:XAxis 214921
    Single _149HalfPi;// 0:CreateArrowMesh-ext->12:HalfPi 214922
    Quaternion _150QuaternionFromDirectionAngle;// 0:CreateArrowMesh-ext->8:QuaternionFromDirectionAngle 214920
    Func[Vector3, Vector3] _151Pass-through: function1;// 0:Pass-through: function1 214744
    IArray[Vector3] _152Map;// 2:DeformMeshPoints->1:Map 214746
    TriMesh _153SetMeshVertices;// 2:DeformMeshPoints->4:SetMeshVertices 214745
    IArray[TriMesh] _154Map;// 2:CloneMeshAtTransforms-ext->3:Map 214586
    TriMesh _155CombineAllMeshes;// 9:CombineAllMeshes 214581
    _0One = One();
    _1Add = Add(heightSegments, _0One);
    _2RangeInclusiveFloat = RangeInclusiveFloat(_1Add);
    _3Constant = 0;
    _4Vector3 = Vector3(width, height, _3Constant);
    _5Negate = Negate(_4Vector3);
    _6X = X(_4Vector3);
    _7Y = Y(_5Negate);
    _8Constant = 0;
    _9Vector3 = Vector3(_6X, _7Y, _8Constant);
    _10Line = Line(_5Negate, _9Vector3);
    _11X = X(_5Negate);
    _12Y = Y(_4Vector3);
    _13Constant = 0;
    _14Vector3 = Vector3(_11X, _12Y, _13Constant);
    _15Line = Line(_14Vector3, _4Vector3);
    _16Pass-through: function1 = (Single x0) => 
      {
        Vector3 _0LineA;// 10:LerpLines->2:LineA 214686
        Vector3 _1LineB;// 10:LerpLines->3:LineB 214687
        Vector3 _2Lerp;// 10:LerpLines->4:Lerp 214685
        Vector3 _3LineA;// 10:LerpLines->7:LineA 214689
        Vector3 _4LineB;// 10:LerpLines->8:LineB 214690
        Vector3 _5Lerp;// 10:LerpLines->9:Lerp 214688
        Line _6Line;// 10:LerpLines->10:Line 214684
        _0LineA = LineA(_10Line);
        _1LineB = LineB(_10Line);
        _2Lerp = Lerp(_0LineA, _1LineB, x0);
        _3LineA = LineA(_15Line);
        _4LineB = LineB(_15Line);
        _5Lerp = Lerp(_3LineA, _4LineB, x0);
        _6Line = Line(_2Lerp, _5Lerp);
        _6Line;
        };
    _17Map = Map(_2RangeInclusiveFloat, _16Pass-through: function1);
    _18One = One();
    _19Add = Add(widthSegments, _18One);
    _20Pass-through: function1 = (Line x0) => 
      {
        IArray[Single] _0RangeInclusiveFloat;// 5:SampleLerp->2:RangeInclusiveFloat 214699
        Vector3 _1LineA;// 7:LineToArray->3:LineA 214701
        Vector3 _2LineB;// 7:LineToArray->4:LineB 214702
        Func[Single, Vector3] _3Pass-through: function1;// 0:Pass-through: function1 214697
        IArray[Vector3] _4Map;// 5:SampleLerp->3:Map 214698
        _0RangeInclusiveFloat = RangeInclusiveFloat(_19Add);
        _1LineA = LineA(x0);
        _2LineB = LineB(x0);
        _3Pass-through: function1 = (Single x0) => 
          {
            Vector3 _0Lerp;// 2:ArrayOfLerpedVectors->3:Lerp 214700
            _0Lerp = Lerp(_1LineA, _2LineB, x0);
            _0Lerp;
            };
        _4Map = Map(_0RangeInclusiveFloat, _3Pass-through: function1);
        _4Map;
        };
    _21Map = Map(_17Map, _20Pass-through: function1);
    _22Flatten = Flatten(_21Map);
    _23False = False();
    _24QuadMeshStrip = QuadMeshStrip(_22Flatten, _1Add, _23False, _23False);
    _25IgnoreFirst = IgnoreFirst(widthSegments, _24QuadMeshStrip);
    _26QuadMeshVertices = QuadMeshVertices(_25IgnoreFirst);
    _27QuadMeshIndices = QuadMeshIndices(_25IgnoreFirst);
    _28Count = Count(_27QuadMeshIndices);
    _29Constant = 4;
    _30Divide = Divide(_28Count, _29Constant);
    _31Range = Range(_30Divide);
    _32Map = Map(_31Range, (Int32 x0) => 
      {
        Int32 _0Multiply;// 3:Slices->6:Multiply 214629
        IArray[Int32] _1Slice;// 3:Slices->0:Slice 214628
        _0Multiply = Multiply(_29Constant, x0);
        _1Slice = Slice(_27QuadMeshIndices, _0Multiply, _29Constant);
        _1Slice;
        });
    _33Constant = 3;
    _34Range = Range(_33Constant);
    _35Constant = 2;
    _36Append = Append(_34Range, _35Constant);
    _37Constant = 3;
    _38Append = Append(_36Append, _37Constant);
    _39Constant = 0;
    _40Append = Append(_38Append, _39Constant);
    _41Map = Map(_40Append, (Int32 x0) => 
      {
        x0;
        });
    _42Pass-through: function1 = (IArray[Int32] x0) => 
      {
        IArray[Int32] _0Map;// 5:IntArrayCheck-ext->1:Map 214636
        IArray[Int32] _1Map;// 5:IntArrayCheck-ext->1:Map 214651
        IArray[Int32] _2Map;// 22:ArraySelectByIndex2-ext->2:Map 214634
        _0Map = Map(_41Map, (Int32 x0) => 
          {
            x0;
            });
        _1Map = Map(x0, (Int32 x0) => 
          {
            x0;
            });
        _2Map = Map(_0Map, (Int32 x0) => 
          {
            Int32 _0At;// 22:ArraySelectByIndex2-ext->3:At 214638
            _0At = At(_1Map, x0);
            _0At;
            });
        _2Map;
        };
    _43Map = Map(_32Map, _42Pass-through: function1);
    _44Flatten = Flatten(_43Map);
    _45CreateMesh = CreateMesh(_26QuadMeshVertices, _44Flatten);
    _46MeshIndices = MeshIndices(_45CreateMesh);
    _47Indices = Indices(_46MeshIndices);
    _48Constant = 3;
    _49Constant = 2;
    _50Map = Map(_47Indices, (Int32 x0) => 
      {
        Int32 _0Modulo;// 6:ModuloEquals->3:Modulo 214613
        Boolean _1Equal;// 6:ModuloEquals->4:Equal 214612
        Boolean _2Not;// 16:HideEveryThirdEdge->7:Not 214608
        _0Modulo = Modulo(x0, _48Constant);
        _1Equal = Equal(_0Modulo, _49Constant);
        _2Not = Not(_1Equal);
        _2Not;
        });
    _51SetVisibleEdges = SetVisibleEdges(_45CreateMesh, _50Map);
    _52VertexNormals = VertexNormals(_51SetVisibleEdges);
    _53MeshVertices = MeshVertices(_51SetVisibleEdges);
    _54ZAxis = ZAxis();
    _55Combine = Combine(_52VertexNormals, _53MeshVertices, (Vector3 x0, Vector3 x1) => 
      {
        Quaternion _0RotationBetweenVectors;// 1:VerticesAndNormalsToMatrices->0:RotationBetweenVectors 214600
        Matrix _1RotationTranslationMatrix;// 1:VerticesAndNormalsToMatrices->2:RotationTranslationMatrix 214599
        _0RotationBetweenVectors = RotationBetweenVectors(_54ZAxis, x0);
        _1RotationTranslationMatrix = RotationTranslationMatrix(_0RotationBetweenVectors, x1);
        _1RotationTranslationMatrix;
        });
    _56Constant = 8;
    _57One = One();
    _58Subtract = Subtract(_56Constant, _57One);
    _59One = One();
    _60Add = Add(_58Subtract, _59One);
    _61RangeExclusiveFloat = RangeExclusiveFloat(_60Add);
    _62Constant = 360;
    _63ToRadians = ToRadians(_62Constant);
    _64Map = Map(_61RangeExclusiveFloat, (Single x0) => 
      {
        Single _0Multiply;// 11:RangeExclusiveFloatTo->1:Multiply 214824
        _0Multiply = Multiply(x0, _63ToRadians);
        _0Multiply;
        });
    _65One = One();
    _66One = One();
    _67Add = Add(_65One, _66One);
    _68RangeInclusiveFloat = RangeInclusiveFloat(_67Add);
    _69Constant = 25;
    _70Constant = 100;
    _71Divide = Divide(_69Constant, _70Constant);
    _72Constant = 10;
    _73Constant = 100;
    _74Divide = Divide(_72Constant, _73Constant);
    _75Multiply = Multiply(_74Divide, length);
    _76Multiply = Multiply(_71Divide, _75Multiply);
    _77Constant = 0;
    _78Vector3 = Vector3(_77Constant, _77Constant, _77Constant);
    _79Y = Y(_78Vector3);
    _80Z = Z(_78Vector3);
    _81Vector3 = Vector3(_76Multiply, _79Y, _80Z);
    _82X = X(_81Vector3);
    _83Constant = 25;
    _84Constant = 100;
    _85Divide = Divide(_83Constant, _84Constant);
    _86Multiply = Multiply(length, _85Divide);
    _87Subtract = Subtract(length, _86Multiply);
    _88Y = Y(_81Vector3);
    _89Add = Add(_87Subtract, _88Y);
    _90Z = Z(_81Vector3);
    _91Vector3 = Vector3(_82X, _89Add, _90Z);
    _92Pass-through: function1 = (Single x0) => 
      {
        Vector3 _0Lerp;// 9:ArrayOfLerpedVectors->3:Lerp 214856
        _0Lerp = Lerp(_81Vector3, _91Vector3, x0);
        _0Lerp;
        };
    _93Map = Map(_68RangeInclusiveFloat, _92Pass-through: function1);
    _94One = One();
    _95One = One();
    _96Add = Add(_94One, _95One);
    _97RangeInclusiveFloat = RangeInclusiveFloat(_96Add);
    _98Y = Y(_91Vector3);
    _99Z = Z(_91Vector3);
    _100Vector3 = Vector3(_75Multiply, _98Y, _99Z);
    _101Constant = 0;
    _102X = X(_100Vector3);
    _103Y = Y(_100Vector3);
    _104Add = Add(_86Multiply, _103Y);
    _105Z = Z(_100Vector3);
    _106Vector3 = Vector3(_102X, _104Add, _105Z);
    _107Y = Y(_106Vector3);
    _108Z = Z(_106Vector3);
    _109Vector3 = Vector3(_101Constant, _107Y, _108Z);
    _110Pass-through: function1 = (Single x0) => 
      {
        Vector3 _0Lerp;// 1:ArrayOfLerpedVectors->3:Lerp 214881
        _0Lerp = Lerp(_100Vector3, _109Vector3, x0);
        _0Lerp;
        };
    _111Map = Map(_97RangeInclusiveFloat, _110Pass-through: function1);
    _112Concatenate = Concatenate(_93Map, _111Map);
    _113Prepend = Prepend(_112Concatenate, _78Vector3);
    _114YAxis = YAxis();
    _115Pass-through: function1 = (Single x0) => 
      {
        IArray[Vector3] _0Map;// 8:RotatePoints->2:Map 214832
        _0Map = Map(_113Prepend, (Vector3 x0) => 
          {
            Matrix _0MatrixFromAxisAngle;// 0:RotatePoint->1:MatrixFromAxisAngle 214837
            Vector3 _1Transform;// 0:RotatePoint->2:Transform 214836
            _0MatrixFromAxisAngle = MatrixFromAxisAngle(_114YAxis, x0);
            _1Transform = Transform(x0, _0MatrixFromAxisAngle);
            _1Transform;
            });
        _0Map;
        };
    _116Map = Map(_64Map, _115Pass-through: function1);
    _117Flatten = Flatten(_116Map);
    _118True = True();
    _119False = False();
    _120QuadMeshStrip = QuadMeshStrip(_117Flatten, _60Add, _118True, _119False);
    _121QuadMeshVertices = QuadMeshVertices(_120QuadMeshStrip);
    _122QuadMeshIndices = QuadMeshIndices(_120QuadMeshStrip);
    _123Count = Count(_122QuadMeshIndices);
    _124Constant = 4;
    _125Divide = Divide(_123Count, _124Constant);
    _126Range = Range(_125Divide);
    _127Map = Map(_126Range, (Int32 x0) => 
      {
        Int32 _0Multiply;// 3:Slices->6:Multiply 214776
        IArray[Int32] _1Slice;// 3:Slices->0:Slice 214775
        _0Multiply = Multiply(_124Constant, x0);
        _1Slice = Slice(_122QuadMeshIndices, _0Multiply, _124Constant);
        _1Slice;
        });
    _128Constant = 3;
    _129Range = Range(_128Constant);
    _130Constant = 2;
    _131Append = Append(_129Range, _130Constant);
    _132Constant = 3;
    _133Append = Append(_131Append, _132Constant);
    _134Constant = 0;
    _135Append = Append(_133Append, _134Constant);
    _136Map = Map(_135Append, (Int32 x0) => 
      {
        x0;
        });
    _137Pass-through: function1 = (IArray[Int32] x0) => 
      {
        IArray[Int32] _0Map;// 5:IntArrayCheck-ext->1:Map 214783
        IArray[Int32] _1Map;// 5:IntArrayCheck-ext->1:Map 214798
        IArray[Int32] _2Map;// 22:ArraySelectByIndex2-ext->2:Map 214781
        _0Map = Map(_136Map, (Int32 x0) => 
          {
            x0;
            });
        _1Map = Map(x0, (Int32 x0) => 
          {
            x0;
            });
        _2Map = Map(_0Map, (Int32 x0) => 
          {
            Int32 _0At;// 22:ArraySelectByIndex2-ext->3:At 214785
            _0At = At(_1Map, x0);
            _0At;
            });
        _2Map;
        };
    _138Map = Map(_127Map, _137Pass-through: function1);
    _139Flatten = Flatten(_138Map);
    _140CreateMesh = CreateMesh(_121QuadMeshVertices, _139Flatten);
    _141MeshIndices = MeshIndices(_140CreateMesh);
    _142Indices = Indices(_141MeshIndices);
    _143Constant = 3;
    _144Constant = 2;
    _145Map = Map(_142Indices, (Int32 x0) => 
      {
        Int32 _0Modulo;// 6:ModuloEquals->3:Modulo 214760
        Boolean _1Equal;// 6:ModuloEquals->4:Equal 214759
        Boolean _2Not;// 16:HideEveryThirdEdge->7:Not 214755
        _0Modulo = Modulo(x0, _143Constant);
        _1Equal = Equal(_0Modulo, _144Constant);
        _2Not = Not(_1Equal);
        _2Not;
        });
    _146SetVisibleEdges = SetVisibleEdges(_140CreateMesh, _145Map);
    _147MeshVertices = MeshVertices(_146SetVisibleEdges);
    _148XAxis = XAxis();
    _149HalfPi = HalfPi();
    _150QuaternionFromDirectionAngle = QuaternionFromDirectionAngle(_148XAxis, _149HalfPi);
    _151Pass-through: function1 = (Vector3 x0) => 
      {
        Vector3 _0Rotate;// 10:RotateMesh->3:Rotate 214748
        _0Rotate = Rotate(x0, _150QuaternionFromDirectionAngle);
        _0Rotate;
        };
    _152Map = Map(_147MeshVertices, _151Pass-through: function1);
    _153SetMeshVertices = SetMeshVertices(_146SetVisibleEdges, _152Map);
    _154Map = Map(_55Combine, (Matrix x0) => 
      {
        IArray[Vector3] _0MeshVertices;// 2:DeformMeshPoints->0:MeshVertices 214593
        Func[Vector3, Vector3] _1Pass-through: function1;// 0:Pass-through: function1 214590
        IArray[Vector3] _2Map;// 2:DeformMeshPoints->1:Map 214592
        TriMesh _3SetMeshVertices;// 2:DeformMeshPoints->4:SetMeshVertices 214591
        _0MeshVertices = MeshVertices(_153SetMeshVertices);
        _1Pass-through: function1 = (Vector3 x0) => 
          {
            Vector3 _0Transform;// 1:TransformMesh->0:Transform 214594
            _0Transform = Transform(x0, x0);
            _0Transform;
            };
        _2Map = Map(_0MeshVertices, _1Pass-through: function1);
        _3SetMeshVertices = SetMeshVertices(_153SetMeshVertices, _2Map);
        _3SetMeshVertices;
        });
    _155CombineAllMeshes = CombineAllMeshes(_154Map);
    _155CombineAllMeshes;
    }