(InstanceState state, Int32 segments, Single dimension, Boolean x, Boolean y, Boolean z) => 
  {
    Int32 _0One;// 4:PlusOne->1:One 43750
    Int32 _1Add;// 4:PlusOne->0:Add 43749
    IArray[Single] _2RangeInclusiveFloat;// 8:SampleLerp->2:RangeInclusiveFloat 43724
    Single _3Constant;// 7:Vector3FromXY->0:Constant 43772
    Vector3 _4Vector3;// 7:Vector3FromXY->0:Vector3 43771
    Vector3 _5Negate;// 0:QuadMeshPlaneXY-ext->5:Negate 43768
    Single _6X;// 4:QuadMeshPlane-ext->2:X 43760
    Single _7Y;// 4:QuadMeshPlane-ext->3:Y 43761
    Single _8Constant;// 4:Vector3FromXY->0:Constant 43759
    Vector3 _9Vector3;// 4:Vector3FromXY->0:Vector3 43758
    Line _10Line;// 5:QuadMeshGrid-ext->10:Line 43751
    Single _11X;// 4:QuadMeshPlane-ext->6:X 43766
    Single _12Y;// 4:QuadMeshPlane-ext->8:Y 43767
    Single _13Constant;// 7:Vector3FromXY->0:Constant 43765
    Vector3 _14Vector3;// 7:Vector3FromXY->0:Vector3 43764
    Line _15Line;// 5:QuadMeshGrid-ext->11:Line 43752
    Func[Single, Line] _16Pass-through: function1;// 0:Pass-through: function1 43722
    IArray[Line] _17Map;// 8:SampleLerp->3:Map 43723
    Int32 _18One;// 6:PlusOne->1:One 43755
    Int32 _19Add;// 6:PlusOne->0:Add 43754
    Func[Line, IArray[Vector3]] _20Pass-through: function1;// 0:Pass-through: function1 43718
    IArray[IArray[Vector3]] _21Map;// 9:FlatMap->4:Map 43720
    IArray[Vector3] _22Flatten;// 9:FlatMap->3:Flatten 43719
    Boolean _23False;// 20:QuadPlaneMesh->5:False 43747
    QuadMesh _24QuadMeshStrip;// 20:QuadPlaneMesh->0:QuadMeshStrip 43716
    QuadMesh _25IgnoreFirst;// 5:QuadMeshGrid-ext->1:IgnoreFirst 43711
    TriMesh _64CombineMeshes;// 0:CreateOrthogonalPlanes-ext->14:CombineMeshes 43774
    TriMesh _74CombineMeshes;// 0:CreateOrthogonalPlanes-ext->15:CombineMeshes 43773
    TriMesh _75IgnoreFirst;// 0:CreateOrthogonalPlanes-ext->8:IgnoreFirst 43694
    _0One = One();
    _1Add = Add(segments, _0One);
    _2RangeInclusiveFloat = RangeInclusiveFloat(_1Add);
    _3Constant = 0;
    _4Vector3 = Vector3(dimension, dimension, _3Constant);
    _5Negate = Negate(_4Vector3);
    _6X = X(_4Vector3);
    _7Y = Y(_5Negate);
    _8Constant = 0;
    _9Vector3 = Vector3(_6X, _7Y, _8Constant);
    _10Line = Line(_5Negate, _9Vector3);
    _11X = X(_5Negate);
    _12Y = Y(_4Vector3);
    _13Constant = 0;
    _14Vector3 = Vector3(_11X, _12Y, _13Constant);
    _15Line = Line(_14Vector3, _4Vector3);
    _16Pass-through: function1 = (Single x0) => 
      {
        Vector3 _0LineA;// 10:LerpLines->2:LineA 43730
        Vector3 _1LineB;// 10:LerpLines->3:LineB 43731
        Vector3 _2Lerp;// 10:LerpLines->4:Lerp 43729
        Vector3 _3LineA;// 10:LerpLines->7:LineA 43733
        Vector3 _4LineB;// 10:LerpLines->8:LineB 43734
        Vector3 _5Lerp;// 10:LerpLines->9:Lerp 43732
        Line _6Line;// 10:LerpLines->10:Line 43728
        _0LineA = LineA(_10Line);
        _1LineB = LineB(_10Line);
        _2Lerp = Lerp(_0LineA, _1LineB, x0);
        _3LineA = LineA(_15Line);
        _4LineB = LineB(_15Line);
        _5Lerp = Lerp(_3LineA, _4LineB, x0);
        _6Line = Line(_2Lerp, _5Lerp);
        _6Line;
        };
    _17Map = Map(_2RangeInclusiveFloat, _16Pass-through: function1);
    _18One = One();
    _19Add = Add(segments, _18One);
    _20Pass-through: function1 = (Line x0) => 
      {
        IArray[Single] _0RangeInclusiveFloat;// 5:SampleLerp->2:RangeInclusiveFloat 43743
        Vector3 _1LineA;// 7:LineToArray->3:LineA 43745
        Vector3 _2LineB;// 7:LineToArray->4:LineB 43746
        Func[Single, Vector3] _3Pass-through: function1;// 0:Pass-through: function1 43741
        IArray[Vector3] _4Map;// 5:SampleLerp->3:Map 43742
        _0RangeInclusiveFloat = RangeInclusiveFloat(_19Add);
        _1LineA = LineA(x0);
        _2LineB = LineB(x0);
        _3Pass-through: function1 = (Single x0) => 
          {
            Vector3 _0Lerp;// 2:ArrayOfLerpedVectors->3:Lerp 43744
            _0Lerp = Lerp(_1LineA, _2LineB, x0);
            _0Lerp;
            };
        _4Map = Map(_0RangeInclusiveFloat, _3Pass-through: function1);
        _4Map;
        };
    _21Map = Map(_17Map, _20Pass-through: function1);
    _22Flatten = Flatten(_21Map);
    _23False = False();
    _24QuadMeshStrip = QuadMeshStrip(_22Flatten, _1Add, _23False, _23False);
    _25IgnoreFirst = IgnoreFirst(segments, _24QuadMeshStrip);
    _64CombineMeshes = CombineMeshes(if (x)
      {
        TriMesh _26Triangulate;// 11:QuadToTriMesh-ext->4:Triangulate 43794
        IArray[Int32] _27MeshIndices;// 11:QuadToTriMesh-ext->3:MeshIndices 43797
        IArray[Int32] _28Indices;// 11:QuadToTriMesh-ext->8:Indices 43796
        Int32 _29Constant;// 11:QuadToTriMesh-ext->0:Constant 43802
        Int32 _30Constant;// 11:QuadToTriMesh-ext->0:Constant 43803
        Int32 _31Constant;// 11:QuadToTriMesh-ext->0:Constant 43805
        IArray[Boolean] _32Map;// 11:QuadToTriMesh-ext->5:Map 43795
        TriMesh _33SetVisibleEdges;// 11:QuadToTriMesh-ext->9:SetVisibleEdges 43793
        IArray[Vector3] _34MeshVertices;// 2:DeformMeshPoints->0:MeshVertices 43790
        Vector3 _35YAxis;// 16:RotationAroundYAxis-ext->4:YAxis 43808
        Single _36HalfPi;// 0:CreateOrthogonalPlanes-ext->18:HalfPi 43809
        Quaternion _37QuaternionFromDirectionAngle;// 16:RotationAroundYAxis-ext->0:QuaternionFromDirectionAngle 43807
        Func[Vector3, Vector3] _38Pass-through: function1;// 0:Pass-through: function1 43787
        IArray[Vector3] _39Map;// 2:DeformMeshPoints->1:Map 43789
        TriMesh _40SetMeshVertices;// 2:DeformMeshPoints->4:SetMeshVertices 43788
        IArray[Vector3] _41MeshVertices;// 2:DeformMeshPoints->0:MeshVertices 43782
        Vector3 _42ZAxis;// 17:RotationAroundZAxis-ext->1:ZAxis 43812
        Quaternion _43QuaternionFromDirectionAngle;// 17:RotationAroundZAxis-ext->0:QuaternionFromDirectionAngle 43811
        Func[Vector3, Vector3] _44Pass-through: function1;// 0:Pass-through: function1 43779
        IArray[Vector3] _45Map;// 2:DeformMeshPoints->1:Map 43781
        TriMesh _46SetMeshVertices;// 2:DeformMeshPoints->4:SetMeshVertices 43780
        _26Triangulate = Triangulate(_25IgnoreFirst);
        _27MeshIndices = MeshIndices(_26Triangulate);
        _28Indices = Indices(_27MeshIndices);
        _29Constant = 6;
        _30Constant = 2;
        _31Constant = 3;
        _32Map = Map(_28Indices, (Int32 x0) => 
          {
            Int32 _0Modulo;// 11:QuadToTriMesh-ext->14:Modulo 43801
            Boolean _1Equal;// 11:QuadToTriMesh-ext->7:Equal 43800
            Boolean _2Equal;// 11:QuadToTriMesh-ext->13:Equal 43804
            Boolean _3OrElse;// 11:QuadToTriMesh-ext->12:OrElse 43799
            Boolean _4Not;// 11:QuadToTriMesh-ext->10:Not 43798
            _0Modulo = Modulo(x0, _29Constant);
            _1Equal = Equal(_0Modulo, _30Constant);
            _2Equal = Equal(_0Modulo, _31Constant);
            _3OrElse = OrElse(_1Equal, _2Equal);
            _4Not = Not(_3OrElse);
            _4Not;
            });
        _33SetVisibleEdges = SetVisibleEdges(_26Triangulate, _32Map);
        _34MeshVertices = MeshVertices(_33SetVisibleEdges);
        _35YAxis = YAxis();
        _36HalfPi = HalfPi();
        _37QuaternionFromDirectionAngle = QuaternionFromDirectionAngle(_35YAxis, _36HalfPi);
        _38Pass-through: function1 = (Vector3 x0) => 
          {
            Vector3 _0Rotate;// 20:RotateMesh->3:Rotate 43791
            _0Rotate = Rotate(x0, _37QuaternionFromDirectionAngle);
            _0Rotate;
            };
        _39Map = Map(_34MeshVertices, _38Pass-through: function1);
        _40SetMeshVertices = SetMeshVertices(_33SetVisibleEdges, _39Map);
        _41MeshVertices = MeshVertices(_40SetMeshVertices);
        _42ZAxis = ZAxis();
        _43QuaternionFromDirectionAngle = QuaternionFromDirectionAngle(_42ZAxis, _36HalfPi);
        _44Pass-through: function1 = (Vector3 x0) => 
          {
            Vector3 _0Rotate;// 19:RotateMesh->3:Rotate 43783
            _0Rotate = Rotate(x0, _43QuaternionFromDirectionAngle);
            _0Rotate;
            };
        _45Map = Map(_41MeshVertices, _44Pass-through: function1);
        _46SetMeshVertices = SetMeshVertices(_40SetMeshVertices, _45Map);
        _46SetMeshVertices;
        }else
      {
        TriMesh _47EmptyMesh;// 0:CreateOrthogonalPlanes-ext->9:EmptyMesh 43813
        _47EmptyMesh = EmptyMesh();
        _47EmptyMesh;
        }, if (y)
      {
        TriMesh _48Triangulate;// 11:QuadToTriMesh-ext->4:Triangulate 43794
        IArray[Int32] _49MeshIndices;// 11:QuadToTriMesh-ext->3:MeshIndices 43797
        IArray[Int32] _50Indices;// 11:QuadToTriMesh-ext->8:Indices 43796
        Int32 _51Constant;// 11:QuadToTriMesh-ext->0:Constant 43802
        Int32 _52Constant;// 11:QuadToTriMesh-ext->0:Constant 43803
        Int32 _53Constant;// 11:QuadToTriMesh-ext->0:Constant 43805
        IArray[Boolean] _54Map;// 11:QuadToTriMesh-ext->5:Map 43795
        TriMesh _55SetVisibleEdges;// 11:QuadToTriMesh-ext->9:SetVisibleEdges 43793
        IArray[Vector3] _56MeshVertices;// 2:DeformMeshPoints->0:MeshVertices 43790
        Vector3 _57YAxis;// 16:RotationAroundYAxis-ext->4:YAxis 43808
        Single _58HalfPi;// 0:CreateOrthogonalPlanes-ext->18:HalfPi 43809
        Quaternion _59QuaternionFromDirectionAngle;// 16:RotationAroundYAxis-ext->0:QuaternionFromDirectionAngle 43807
        Func[Vector3, Vector3] _60Pass-through: function1;// 0:Pass-through: function1 43787
        IArray[Vector3] _61Map;// 2:DeformMeshPoints->1:Map 43789
        TriMesh _62SetMeshVertices;// 2:DeformMeshPoints->4:SetMeshVertices 43788
        _48Triangulate = Triangulate(_25IgnoreFirst);
        _49MeshIndices = MeshIndices(_48Triangulate);
        _50Indices = Indices(_49MeshIndices);
        _51Constant = 6;
        _52Constant = 2;
        _53Constant = 3;
        _54Map = Map(_50Indices, (Int32 x0) => 
          {
            Int32 _0Modulo;// 11:QuadToTriMesh-ext->14:Modulo 43801
            Boolean _1Equal;// 11:QuadToTriMesh-ext->7:Equal 43800
            Boolean _2Equal;// 11:QuadToTriMesh-ext->13:Equal 43804
            Boolean _3OrElse;// 11:QuadToTriMesh-ext->12:OrElse 43799
            Boolean _4Not;// 11:QuadToTriMesh-ext->10:Not 43798
            _0Modulo = Modulo(x0, _51Constant);
            _1Equal = Equal(_0Modulo, _52Constant);
            _2Equal = Equal(_0Modulo, _53Constant);
            _3OrElse = OrElse(_1Equal, _2Equal);
            _4Not = Not(_3OrElse);
            _4Not;
            });
        _55SetVisibleEdges = SetVisibleEdges(_48Triangulate, _54Map);
        _56MeshVertices = MeshVertices(_55SetVisibleEdges);
        _57YAxis = YAxis();
        _58HalfPi = HalfPi();
        _59QuaternionFromDirectionAngle = QuaternionFromDirectionAngle(_57YAxis, _58HalfPi);
        _60Pass-through: function1 = (Vector3 x0) => 
          {
            Vector3 _0Rotate;// 20:RotateMesh->3:Rotate 43791
            _0Rotate = Rotate(x0, _59QuaternionFromDirectionAngle);
            _0Rotate;
            };
        _61Map = Map(_56MeshVertices, _60Pass-through: function1);
        _62SetMeshVertices = SetMeshVertices(_55SetVisibleEdges, _61Map);
        _62SetMeshVertices;
        }else
      {
        TriMesh _63EmptyMesh;// 0:CreateOrthogonalPlanes-ext->9:EmptyMesh 43813
        _63EmptyMesh = EmptyMesh();
        _63EmptyMesh;
        });
    _74CombineMeshes = CombineMeshes(_64CombineMeshes, if (z)
      {
        TriMesh _65Triangulate;// 11:QuadToTriMesh-ext->4:Triangulate 43794
        IArray[Int32] _66MeshIndices;// 11:QuadToTriMesh-ext->3:MeshIndices 43797
        IArray[Int32] _67Indices;// 11:QuadToTriMesh-ext->8:Indices 43796
        Int32 _68Constant;// 11:QuadToTriMesh-ext->0:Constant 43802
        Int32 _69Constant;// 11:QuadToTriMesh-ext->0:Constant 43803
        Int32 _70Constant;// 11:QuadToTriMesh-ext->0:Constant 43805
        IArray[Boolean] _71Map;// 11:QuadToTriMesh-ext->5:Map 43795
        TriMesh _72SetVisibleEdges;// 11:QuadToTriMesh-ext->9:SetVisibleEdges 43793
        _65Triangulate = Triangulate(_25IgnoreFirst);
        _66MeshIndices = MeshIndices(_65Triangulate);
        _67Indices = Indices(_66MeshIndices);
        _68Constant = 6;
        _69Constant = 2;
        _70Constant = 3;
        _71Map = Map(_67Indices, (Int32 x0) => 
          {
            Int32 _0Modulo;// 11:QuadToTriMesh-ext->14:Modulo 43801
            Boolean _1Equal;// 11:QuadToTriMesh-ext->7:Equal 43800
            Boolean _2Equal;// 11:QuadToTriMesh-ext->13:Equal 43804
            Boolean _3OrElse;// 11:QuadToTriMesh-ext->12:OrElse 43799
            Boolean _4Not;// 11:QuadToTriMesh-ext->10:Not 43798
            _0Modulo = Modulo(x0, _68Constant);
            _1Equal = Equal(_0Modulo, _69Constant);
            _2Equal = Equal(_0Modulo, _70Constant);
            _3OrElse = OrElse(_1Equal, _2Equal);
            _4Not = Not(_3OrElse);
            _4Not;
            });
        _72SetVisibleEdges = SetVisibleEdges(_65Triangulate, _71Map);
        _72SetVisibleEdges;
        }else
      {
        TriMesh _73EmptyMesh;// 0:CreateOrthogonalPlanes-ext->9:EmptyMesh 43813
        _73EmptyMesh = EmptyMesh();
        _73EmptyMesh;
        });
    _75IgnoreFirst = IgnoreFirst(_25IgnoreFirst, _74CombineMeshes);
    _75IgnoreFirst;
    }