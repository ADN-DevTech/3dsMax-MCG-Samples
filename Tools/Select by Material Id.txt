(InstanceState state, TriMesh mesh, Boolean invert, Boolean match or less than, Int32 materialId, Int32 selectionMethod) => 
  {
    IArray[Int32] _0MaterialIds;// 7:SelectFacesFromMaterialId-ext->3:MaterialIds 106447
    IArray[Boolean] _1Map;// 7:SelectFacesFromMaterialId-ext->4:Map 106446
    IArray[Boolean] _2FaceSelection;// 12:SelectFaces-ext->2:FaceSelection 106429
    IArray[Boolean] _3Combine;// 12:SelectFaces-ext->10:Combine 106428
    TriMesh _4SetFaceSelection;// 12:SelectFaces-ext->11:SetFaceSelection 106427
    _0MaterialIds = MaterialIds(mesh);
    _1Map = Map(_0MaterialIds, (Int32 x0) => 
      {
        Boolean _2Pass-through: Boolean;// 0:Pass-through: Boolean 106449
        _2Pass-through: Boolean = if (match or less than)
          {
            Boolean _0Equal;// 7:SelectFacesFromMaterialId-ext->5:Equal 106453
            _0Equal = Equal(x0, materialId);
            _0Equal;
            }else
          {
            Boolean _1LessThanOrEqual;// 7:SelectFacesFromMaterialId-ext->13:LessThanOrEqual 106455
            _1LessThanOrEqual = LessThanOrEqual(x0, materialId);
            _1LessThanOrEqual;
            };
        if (invert)
          {
            Boolean _5Not;// 9:NegateBooleanConditional-ext->3:Not 106451
            _5Not = Not(_2Pass-through: Boolean);
            _5Not;
            }else
          {
            _2Pass-through: Boolean;
            };
        });
    _2FaceSelection = FaceSelection(mesh);
    _3Combine = Combine(_1Map, _2FaceSelection, (Boolean x0, Boolean x1) => 
      {
        Int32 _0Zero;// 3:Switch3-ext->5:Zero 106439
        Boolean _1Equal;// 3:Switch3-ext->4:Equal 106438
        Boolean _2IfThen;// 3:Switch3-ext->6:IfThen 106437
        _0Zero = Zero();
        _1Equal = Equal(selectionMethod, _0Zero);
        _2IfThen = IfThen(_1Equal, () => 
          {
            x0;
            }, () => 
          {
            Int32 _0One;// 3:Switch3-ext->2:One 106442
            Boolean _1Equal;// 3:Switch3-ext->7:Equal 106441
            Boolean _2IfThen;// 3:Switch3-ext->8:IfThen 106440
            _0One = One();
            _1Equal = Equal(selectionMethod, _0One);
            _2IfThen = IfThen(_1Equal, () => 
              {
                Boolean _0OrElse;// 4:SelectionUpdateFunction-ext->4:OrElse 106443
                _0OrElse = OrElse(x0, x1);
                _0OrElse;
                }, () => 
              {
                Boolean _0Not;// 4:SelectionUpdateFunction-ext->6:Not 106445
                Boolean _1AndAlso;// 4:SelectionUpdateFunction-ext->5:AndAlso 106444
                _0Not = Not(x0);
                _1AndAlso = AndAlso(x1, _0Not);
                _1AndAlso;
                });
            _2IfThen;
            });
        _2IfThen;
        });
    _4SetFaceSelection = SetFaceSelection(mesh, _3Combine);
    _4SetFaceSelection;
    }