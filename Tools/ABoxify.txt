(InstanceState state, TriMesh mesh, BoundingBox boundingBox, Single weight) => 
  {
    IArray[Vector3] _0MeshVertices;// 1:DeformMeshPoints->0:MeshVertices 88398
    Func[Vector3, Vector3] _1Pass-through: function1;// 0:Pass-through: function1 88395
    IArray[Vector3] _2Map;// 1:DeformMeshPoints->1:Map 88397
    TriMesh _3SetMeshVertices;// 1:DeformMeshPoints->4:SetMeshVertices 88396
    _0MeshVertices = MeshVertices(mesh);
    _1Pass-through: function1 = (Vector3 x0) => 
      {
        BoundingSphere _0SphereFromBox;// 10:BoundingBoxCenter->2:SphereFromBox 88415
        Vector3 _1SphereCenter;// 10:BoundingBoxCenter->3:SphereCenter 88414
        Vector3 _2Subtract;// 2:MeshInterpolateToBox-ext->1:Subtract 88412
        Vector3 _3Normalize;// 5:SetVectorLength->1:Normalize 88411
        BoundingSphere _4SphereFromBox;// 4:BoundingBoxRadius->1:SphereFromBox 88418
        Single _5SphereRadius;// 4:BoundingBoxRadius->2:SphereRadius 88417
        Vector3 _6MultiplyByScalar;// 5:SetVectorLength->3:MultiplyByScalar 88410
        Vector3 _7BoxMin;// 3:BoxClamp-ext->5:BoxMin 88406
        Vector3 _8BoxMax;// 3:BoxClamp-ext->3:BoxMax 88407
        Vector3 _9Clamp;// 3:BoxClamp-ext->1:Clamp 88405
        Vector3 _10Lerp;// 2:MeshInterpolateToBox-ext->2:Lerp 88402
        _0SphereFromBox = SphereFromBox(boundingBox);
        _1SphereCenter = SphereCenter(_0SphereFromBox);
        _2Subtract = Subtract(x0, _1SphereCenter);
        _3Normalize = Normalize(_2Subtract);
        _4SphereFromBox = SphereFromBox(boundingBox);
        _5SphereRadius = SphereRadius(_4SphereFromBox);
        _6MultiplyByScalar = MultiplyByScalar(_3Normalize, _5SphereRadius);
        _7BoxMin = BoxMin(boundingBox);
        _8BoxMax = BoxMax(boundingBox);
        _9Clamp = Clamp(_6MultiplyByScalar, _7BoxMin, _8BoxMax);
        _10Lerp = Lerp(x0, _9Clamp, weight);
        _10Lerp;
        };
    _2Map = Map(_0MeshVertices, _1Pass-through: function1);
    _3SetMeshVertices = SetMeshVertices(mesh, _2Map);
    _3SetMeshVertices;
    }