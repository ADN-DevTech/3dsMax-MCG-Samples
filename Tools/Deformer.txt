(InstanceState state, TriMesh mesh, Vector3 gizmo translation, Vector3 gizmo rotation, Vector3 gizmo scale, Int32 axis, Single x translation, Single y translation, Single z translation, Single x rotation, Single y rotation, Single z rotation, Single x scaling, Single y scaling, Single z scaling) => 
  {
    String _0Constant;// 0:HasPerVertexChannel->0:Constant 584500
    Int32 _1Zero;// 4:HasSoftSelection->3:Zero 584502
    String _2ToString;// 0:HasPerVertexChannel->7:ToString 584501
    String _3ConcatenateStrings;// 0:HasPerVertexChannel->3:ConcatenateStrings 584499
    Boolean _4IsChannelAvailable;// 0:HasPerVertexChannel->4:IsChannelAvailable 584498
    TriMesh _5IfThen;// 3:MeshSetVertices-ext->10:IfThen 584494
    _0Constant = per-vertex data channel ;
    _1Zero = Zero();
    _2ToString = ToString(_1Zero);
    _3ConcatenateStrings = ConcatenateStrings(_0Constant, _2ToString);
    _4IsChannelAvailable = IsChannelAvailable(mesh, _3ConcatenateStrings);
    _5IfThen = IfThen(_4IsChannelAvailable, () => 
      {
        IArray[Vector3] _0MeshVertices;// 3:MeshSetVertices-ext->0:MeshVertices 584509
        IArray[Vector3] _1MeshVertices;// 0:MeshDeformVertices-ext->4:MeshVertices 584516
        Matrix _2TranslationMatrix;// 11:MatrixFromPositionRotationScale-ext->3:TranslationMatrix 584620
        Single _3X;// 1:VectorAsArray->1:X 584656
        IArray[Single] _4Unit;// 4:Array3->2:Unit 584655
        Single _5Y;// 1:VectorAsArray->2:Y 584657
        IArray[Single] _6Append;// 4:Array3->3:Append 584654
        Single _7Z;// 1:VectorAsArray->3:Z 584658
        IArray[Single] _8Append;// 4:Array3->6:Append 584653
        Func[Single, Single] _9Pass-through: function1;// 0:Pass-through: function1 584635
        IArray[Single] _10Map;// 1:VectorMapComponents-ext->2:Map 584648
        Int32 _11Zero;// 3:VectorFromArray-ext->5:Zero 584639
        Single _12At;// 3:VectorFromArray-ext->1:At 584638
        Int32 _13One;// 6:PlusOne->1:One 584643
        Int32 _14Add;// 6:PlusOne->0:Add 584642
        Single _15At;// 3:VectorFromArray-ext->2:At 584640
        Int32 _16One;// 7:PlusOne->1:One 584647
        Int32 _17Add;// 7:PlusOne->0:Add 584646
        Single _18At;// 3:VectorFromArray-ext->3:At 584644
        Vector3 _19Vector3;// 3:VectorFromArray-ext->4:Vector3 584637
        Single _20Y;// 2:QuaternionFromVector3-ext->7:Y 584630
        Single _21X;// 2:QuaternionFromVector3-ext->6:X 584631
        Single _22Z;// 2:QuaternionFromVector3-ext->8:Z 584632
        Quaternion _23QuaternionFromYawPitchRoll;// 2:QuaternionFromVector3-ext->3:QuaternionFromYawPitchRoll 584629
        Matrix _24MatrixFromQuaternion;// 11:MatrixFromPositionRotationScale-ext->4:MatrixFromQuaternion 584621
        Matrix _25Multiply;// 6:Multiply3-ext->3:Multiply 584619
        Single _26Constant;// 8:Origin->0:Constant 584625
        Vector3 _27Vector3;// 8:Origin->1:Vector3 584624
        Matrix _28ScalingTranslationMatrix;// 5:MatrixFromScalingVector2-ext->4:ScalingTranslationMatrix 584623
        Matrix _29Multiply;// 6:Multiply3-ext->4:Multiply 584618
        Matrix _30InvertMatrix;// 0:MeshDeformVertices-ext->7:InvertMatrix 584518
        IArray[Vector3] _31ParallelMap;// 0:MeshDeformVertices-ext->6:ParallelMap 584515
        Single _32Constant;// 43:Origin->0:Constant 584664
        Vector3 _33Vector3;// 43:Origin->1:Vector3 584663
        Int32 _34Zero;// 23:AxisChoose-ext->9:Zero 584668
        Boolean _35GreaterThanOrEqual;// 23:AxisChoose-ext->8:GreaterThanOrEqual 584667
        Vector3 _36XAxis;// 23:AxisChoose-ext->3:XAxis 584676
        IArray[Vector3] _37Unit;// 2:Array3->2:Unit 584675
        Vector3 _38YAxis;// 23:AxisChoose-ext->4:YAxis 584677
        IArray[Vector3] _39Append;// 2:Array3->3:Append 584674
        Vector3 _40ZAxis;// 23:AxisChoose-ext->5:ZAxis 584678
        IArray[Vector3] _41Append;// 2:Array3->6:Append 584673
        Ray _48Ray;// 24:Ray 584662
        Single _49Constant;// 15:Origin->0:Constant 584606
        Vector3 _50Vector3;// 15:Origin->1:Vector3 584605
        Vector3 _51Vector3;// 26:Vector3 584686
        Single _52Constant;// 16:Origin->0:Constant 584608
        Vector3 _53Vector3;// 16:Origin->1:Vector3 584607
        Vector3 _54Vector3;// 16:Vector3 584691
        Single _55Constant;// 0:Constant 584695
        Vector3 _56MultiplyByScalar;// 41:MultiplyByScalar 584690
        Single _57Constant;// 17:OnesVector-ext->0:Constant 584610
        Vector3 _58Vector3;// 17:OnesVector-ext->2:Vector3 584609
        Vector3 _59Vector3;// 17:Vector3 584697
        Single _60Constant;// 39:OnesVector-ext->0:Constant 584702
        Vector3 _61Vector3;// 39:OnesVector-ext->2:Vector3 584701
        Vector3 _62Add;// 40:Add 584696
        Func[Vector3, Vector3] _63Pass-through: function1;// 0:Pass-through: function1 584491
        IArray[Vector3] _64ParallelMap;// 0:MeshDeformVertices-ext->5:ParallelMap 584514
        Int32 _65Zero;// 7:SoftSelection->2:Zero 584512
        IArray[Single] _66PerVertexData;// 7:SoftSelection->3:PerVertexData 584511
        IArray[Vector3] _67Combine3;// 1:LerpVectors-ext->10:Combine3 584507
        TriMesh _68SetMeshVertices;// 3:MeshSetVertices-ext->6:SetMeshVertices 584503
        _0MeshVertices = MeshVertices(mesh);
        _1MeshVertices = MeshVertices(mesh);
        _2TranslationMatrix = TranslationMatrix(gizmo translation);
        _3X = X(gizmo rotation);
        _4Unit = Unit(_3X);
        _5Y = Y(gizmo rotation);
        _6Append = Append(_4Unit, _5Y);
        _7Z = Z(gizmo rotation);
        _8Append = Append(_6Append, _7Z);
        _9Pass-through: function1 = (Single x0) => 
          {
            Single _0ToRadians;// 1:EulerDegreesToRadians-ext->2:ToRadians 584659
            _0ToRadians = ToRadians(x0);
            _0ToRadians;
            };
        _10Map = Map(_8Append, _9Pass-through: function1);
        _11Zero = Zero();
        _12At = At(_10Map, _11Zero);
        _13One = One();
        _14Add = Add(_11Zero, _13One);
        _15At = At(_10Map, _14Add);
        _16One = One();
        _17Add = Add(_14Add, _16One);
        _18At = At(_10Map, _17Add);
        _19Vector3 = Vector3(_12At, _15At, _18At);
        _20Y = Y(_19Vector3);
        _21X = X(_19Vector3);
        _22Z = Z(_19Vector3);
        _23QuaternionFromYawPitchRoll = QuaternionFromYawPitchRoll(_20Y, _21X, _22Z);
        _24MatrixFromQuaternion = MatrixFromQuaternion(_23QuaternionFromYawPitchRoll);
        _25Multiply = Multiply(_2TranslationMatrix, _24MatrixFromQuaternion);
        _26Constant = 0;
        _27Vector3 = Vector3(_26Constant, _26Constant, _26Constant);
        _28ScalingTranslationMatrix = ScalingTranslationMatrix(gizmo scale, _27Vector3);
        _29Multiply = Multiply(_25Multiply, _28ScalingTranslationMatrix);
        _30InvertMatrix = InvertMatrix(_29Multiply);
        _31ParallelMap = ParallelMap(_1MeshVertices, (Vector3 x0) => 
          {
            Vector3 _0Transform;// 0:MeshDeformVertices-ext->11:Transform 584517
            _0Transform = Transform(x0, _30InvertMatrix);
            _0Transform;
            });
        _32Constant = 0;
        _33Vector3 = Vector3(_32Constant, _32Constant, _32Constant);
        _34Zero = Zero();
        _35GreaterThanOrEqual = GreaterThanOrEqual(axis, _34Zero);
        _36XAxis = XAxis();
        _37Unit = Unit(_36XAxis);
        _38YAxis = YAxis();
        _39Append = Append(_37Unit, _38YAxis);
        _40ZAxis = ZAxis();
        _41Append = Append(_39Append, _40ZAxis);
        _48Ray = Ray(_33Vector3, if (_35GreaterThanOrEqual)
          {
            Vector3 _42At;// 23:AxisChoose-ext->1:At 584669
            _42At = At(_41Append, axis);
            _42At;
            }else
          {
            Int32 _43One;// 10:PlusOne->1:One 584684
            Int32 _44Add;// 10:PlusOne->0:Add 584683
            Int32 _45Negative;// 23:AxisChoose-ext->11:Negative 584681
            Vector3 _46At;// 23:AxisChoose-ext->12:At 584680
            Vector3 _47Negate;// 23:AxisChoose-ext->13:Negate 584679
            _43One = One();
            _44Add = Add(axis, _43One);
            _45Negative = Negative(_44Add);
            _46At = At(_41Append, _45Negative);
            _47Negate = Negate(_46At);
            _47Negate;
            });
        _49Constant = 0;
        _50Vector3 = Vector3(_49Constant, _49Constant, _49Constant);
        _51Vector3 = Vector3(x translation, y translation, z translation);
        _52Constant = 0;
        _53Vector3 = Vector3(_52Constant, _52Constant, _52Constant);
        _54Vector3 = Vector3(x rotation, y rotation, z rotation);
        _55Constant = 3.6;
        _56MultiplyByScalar = MultiplyByScalar(_54Vector3, _55Constant);
        _57Constant = 1;
        _58Vector3 = Vector3(_57Constant, _57Constant, _57Constant);
        _59Vector3 = Vector3(x scaling, y scaling, z scaling);
        _60Constant = 1;
        _61Vector3 = Vector3(_60Constant, _60Constant, _60Constant);
        _62Add = Add(_59Vector3, _61Vector3);
        _63Pass-through: function1 = (Vector3 x0) => 
          {
            Vector3 _0RayPosition;// 9:PointProjectionAmount-ext->9:RayPosition 584602
            Vector3 _1Subtract;// 9:PointProjectionAmount-ext->3:Subtract 584601
            Vector3 _2RayDirection;// 9:PointProjectionAmount-ext->10:RayDirection 584603
            Single _3Dot;// 7:Projection->3:Dot 584598
            Single _4LengthSquared;// 7:Projection->4:LengthSquared 584599
            Single _5Divide;// 7:Projection->5:Divide 584597
            Vector3 _6MultiplyByScalar;// 7:Projection->2:MultiplyByScalar 584596
            Single _7Length;// 6:VectorProjectionLength-ext->4:Length 584593
            Single _8FloatZero;// 3:FloatNegateIfOther-ext->4:FloatZero 584591
            Boolean _9LessThan;// 3:FloatNegateIfOther-ext->3:LessThan 584590
            Single _10Dot;// 6:VectorProjectionLength-ext->5:Dot 584600
            Single _18IgnoreFirst;// 6:VectorProjectionLength-ext->6:IgnoreFirst 584586
            Single _19Length;// 9:PointProjectionAmount-ext->4:Length 584604
            Single _20Divide;// 9:PointProjectionAmount-ext->5:Divide 584583
            Vector3 _21Lerp;// 10:MatrixFromPRSLerp-ext->10:Lerp 584545
            Matrix _22TranslationMatrix;// 14:MatrixFromPRS-ext->3:TranslationMatrix 584539
            Vector3 _23Lerp;// 10:MatrixFromPRSLerp-ext->9:Lerp 584579
            Single _24X;// 1:VectorAsArray->1:X 584575
            IArray[Single] _25Unit;// 4:Array3->2:Unit 584574
            Single _26Y;// 1:VectorAsArray->2:Y 584576
            IArray[Single] _27Append;// 4:Array3->3:Append 584573
            Single _28Z;// 1:VectorAsArray->3:Z 584577
            IArray[Single] _29Append;// 4:Array3->6:Append 584572
            Func[Single, Single] _30Pass-through: function1;// 0:Pass-through: function1 584554
            IArray[Single] _31Map;// 1:VectorMapComponents-ext->2:Map 584567
            Int32 _32Zero;// 3:VectorFromArray-ext->5:Zero 584558
            Single _33At;// 3:VectorFromArray-ext->1:At 584557
            Int32 _34One;// 6:PlusOne->1:One 584562
            Int32 _35Add;// 6:PlusOne->0:Add 584561
            Single _36At;// 3:VectorFromArray-ext->2:At 584559
            Int32 _37One;// 7:PlusOne->1:One 584566
            Int32 _38Add;// 7:PlusOne->0:Add 584565
            Single _39At;// 3:VectorFromArray-ext->3:At 584563
            Vector3 _40Vector3;// 3:VectorFromArray-ext->4:Vector3 584556
            Single _41Y;// 2:QuaternionFromVector3-ext->7:Y 584549
            Single _42X;// 2:QuaternionFromVector3-ext->6:X 584550
            Single _43Z;// 2:QuaternionFromVector3-ext->8:Z 584551
            Quaternion _44QuaternionFromYawPitchRoll;// 2:QuaternionFromVector3-ext->3:QuaternionFromYawPitchRoll 584548
            Matrix _45MatrixFromQuaternion;// 14:MatrixFromPRS-ext->4:MatrixFromQuaternion 584540
            Matrix _46Multiply;// 6:Multiply3-ext->3:Multiply 584538
            Vector3 _47Lerp;// 10:MatrixFromPRSLerp-ext->8:Lerp 584580
            Single _48Constant;// 8:Origin->0:Constant 584544
            Vector3 _49Vector3;// 8:Origin->1:Vector3 584543
            Matrix _50ScalingTranslationMatrix;// 8:MatrixFromScalingVector-ext->4:ScalingTranslationMatrix 584542
            Matrix _51Multiply;// 6:Multiply3-ext->4:Multiply 584537
            Matrix _52IgnoreFirst;// 10:MatrixFromPRSLerp-ext->12:IgnoreFirst 584530
            Vector3 _53Transform;// 0:MeshTransformVertices-ext->4:Transform 584521
            _0RayPosition = RayPosition(_48Ray);
            _1Subtract = Subtract(x0, _0RayPosition);
            _2RayDirection = RayDirection(_48Ray);
            _3Dot = Dot(_1Subtract, _2RayDirection);
            _4LengthSquared = LengthSquared(_2RayDirection);
            _5Divide = Divide(_3Dot, _4LengthSquared);
            _6MultiplyByScalar = MultiplyByScalar(_2RayDirection, _5Divide);
            _7Length = Length(_6MultiplyByScalar);
            _8FloatZero = FloatZero();
            _9LessThan = LessThan(_7Length, _8FloatZero);
            _10Dot = Dot(_6MultiplyByScalar, _2RayDirection);
            _18IgnoreFirst = IgnoreFirst(_1Subtract, if (_9LessThan)
              {
                Single _17NegativeFloat;// 3:FloatNegateIfOther-ext->7:NegativeFloat 584592
                _17NegativeFloat = NegativeFloat(_10Dot);
                _17NegativeFloat;
                }else
              {
                _10Dot;
                });
            _19Length = Length(_2RayDirection);
            _20Divide = Divide(_18IgnoreFirst, _19Length);
            _21Lerp = Lerp(_50Vector3, _51Vector3, _20Divide);
            _22TranslationMatrix = TranslationMatrix(_21Lerp);
            _23Lerp = Lerp(_53Vector3, _56MultiplyByScalar, _20Divide);
            _24X = X(_23Lerp);
            _25Unit = Unit(_24X);
            _26Y = Y(_23Lerp);
            _27Append = Append(_25Unit, _26Y);
            _28Z = Z(_23Lerp);
            _29Append = Append(_27Append, _28Z);
            _30Pass-through: function1 = (Single x0) => 
              {
                Single _0ToRadians;// 1:EulerDegreesToRadians-ext->2:ToRadians 584578
                _0ToRadians = ToRadians(x0);
                _0ToRadians;
                };
            _31Map = Map(_29Append, _30Pass-through: function1);
            _32Zero = Zero();
            _33At = At(_31Map, _32Zero);
            _34One = One();
            _35Add = Add(_32Zero, _34One);
            _36At = At(_31Map, _35Add);
            _37One = One();
            _38Add = Add(_35Add, _37One);
            _39At = At(_31Map, _38Add);
            _40Vector3 = Vector3(_33At, _36At, _39At);
            _41Y = Y(_40Vector3);
            _42X = X(_40Vector3);
            _43Z = Z(_40Vector3);
            _44QuaternionFromYawPitchRoll = QuaternionFromYawPitchRoll(_41Y, _42X, _43Z);
            _45MatrixFromQuaternion = MatrixFromQuaternion(_44QuaternionFromYawPitchRoll);
            _46Multiply = Multiply(_22TranslationMatrix, _45MatrixFromQuaternion);
            _47Lerp = Lerp(_58Vector3, _62Add, _20Divide);
            _48Constant = 0;
            _49Vector3 = Vector3(_48Constant, _48Constant, _48Constant);
            _50ScalingTranslationMatrix = ScalingTranslationMatrix(_47Lerp, _49Vector3);
            _51Multiply = Multiply(_46Multiply, _50ScalingTranslationMatrix);
            _52IgnoreFirst = IgnoreFirst(_20Divide, _51Multiply);
            _53Transform = Transform(x0, _52IgnoreFirst);
            _53Transform;
            };
        _64ParallelMap = ParallelMap(_31ParallelMap, (Vector3 x0) => 
          {
            Vector3 _0Apply1;// 0:MeshDeformVertices-ext->8:Apply1 584520
            Vector3 _1Transform;// 0:MeshDeformVertices-ext->9:Transform 584519
            _0Apply1 = Apply1(_63Pass-through: function1, x0);
            _1Transform = Transform(_0Apply1, _29Multiply);
            _1Transform;
            });
        _65Zero = Zero();
        _66PerVertexData = PerVertexData(mesh, _65Zero);
        _67Combine3 = Combine3(_0MeshVertices, _64ParallelMap, _66PerVertexData, (Vector3 x0, Vector3 x1, Single x2) => 
          {
            Vector3 _0Lerp;// 1:LerpVectors-ext->8:Lerp 584508
            _0Lerp = Lerp(x0, x1, x2);
            _0Lerp;
            });
        _68SetMeshVertices = SetMeshVertices(mesh, _67Combine3);
        _68SetMeshVertices;
        }, () => 
      {
        IArray[Vector3] _0MeshVertices;// 0:MeshDeformVertices-ext->4:MeshVertices 584516
        Matrix _1TranslationMatrix;// 11:MatrixFromPositionRotationScale-ext->3:TranslationMatrix 584620
        Single _2X;// 1:VectorAsArray->1:X 584656
        IArray[Single] _3Unit;// 4:Array3->2:Unit 584655
        Single _4Y;// 1:VectorAsArray->2:Y 584657
        IArray[Single] _5Append;// 4:Array3->3:Append 584654
        Single _6Z;// 1:VectorAsArray->3:Z 584658
        IArray[Single] _7Append;// 4:Array3->6:Append 584653
        Func[Single, Single] _8Pass-through: function1;// 0:Pass-through: function1 584635
        IArray[Single] _9Map;// 1:VectorMapComponents-ext->2:Map 584648
        Int32 _10Zero;// 3:VectorFromArray-ext->5:Zero 584639
        Single _11At;// 3:VectorFromArray-ext->1:At 584638
        Int32 _12One;// 6:PlusOne->1:One 584643
        Int32 _13Add;// 6:PlusOne->0:Add 584642
        Single _14At;// 3:VectorFromArray-ext->2:At 584640
        Int32 _15One;// 7:PlusOne->1:One 584647
        Int32 _16Add;// 7:PlusOne->0:Add 584646
        Single _17At;// 3:VectorFromArray-ext->3:At 584644
        Vector3 _18Vector3;// 3:VectorFromArray-ext->4:Vector3 584637
        Single _19Y;// 2:QuaternionFromVector3-ext->7:Y 584630
        Single _20X;// 2:QuaternionFromVector3-ext->6:X 584631
        Single _21Z;// 2:QuaternionFromVector3-ext->8:Z 584632
        Quaternion _22QuaternionFromYawPitchRoll;// 2:QuaternionFromVector3-ext->3:QuaternionFromYawPitchRoll 584629
        Matrix _23MatrixFromQuaternion;// 11:MatrixFromPositionRotationScale-ext->4:MatrixFromQuaternion 584621
        Matrix _24Multiply;// 6:Multiply3-ext->3:Multiply 584619
        Single _25Constant;// 8:Origin->0:Constant 584625
        Vector3 _26Vector3;// 8:Origin->1:Vector3 584624
        Matrix _27ScalingTranslationMatrix;// 5:MatrixFromScalingVector2-ext->4:ScalingTranslationMatrix 584623
        Matrix _28Multiply;// 6:Multiply3-ext->4:Multiply 584618
        Matrix _29InvertMatrix;// 0:MeshDeformVertices-ext->7:InvertMatrix 584518
        IArray[Vector3] _30ParallelMap;// 0:MeshDeformVertices-ext->6:ParallelMap 584515
        Single _31Constant;// 43:Origin->0:Constant 584664
        Vector3 _32Vector3;// 43:Origin->1:Vector3 584663
        Int32 _33Zero;// 23:AxisChoose-ext->9:Zero 584668
        Boolean _34GreaterThanOrEqual;// 23:AxisChoose-ext->8:GreaterThanOrEqual 584667
        Vector3 _35XAxis;// 23:AxisChoose-ext->3:XAxis 584676
        Vector3 _36YAxis;// 23:AxisChoose-ext->4:YAxis 584677
        Vector3 _37ZAxis;// 23:AxisChoose-ext->5:ZAxis 584678
        Ray _50Ray;// 24:Ray 584662
        Single _51Constant;// 15:Origin->0:Constant 584606
        Vector3 _52Vector3;// 15:Origin->1:Vector3 584605
        Vector3 _53Vector3;// 26:Vector3 584686
        Single _54Constant;// 16:Origin->0:Constant 584608
        Vector3 _55Vector3;// 16:Origin->1:Vector3 584607
        Vector3 _56Vector3;// 16:Vector3 584691
        Single _57Constant;// 0:Constant 584695
        Vector3 _58MultiplyByScalar;// 41:MultiplyByScalar 584690
        Single _59Constant;// 17:OnesVector-ext->0:Constant 584610
        Vector3 _60Vector3;// 17:OnesVector-ext->2:Vector3 584609
        Vector3 _61Vector3;// 17:Vector3 584697
        Single _62Constant;// 39:OnesVector-ext->0:Constant 584702
        Vector3 _63Vector3;// 39:OnesVector-ext->2:Vector3 584701
        Vector3 _64Add;// 40:Add 584696
        Func[Vector3, Vector3] _65Pass-through: function1;// 0:Pass-through: function1 584491
        IArray[Vector3] _66ParallelMap;// 0:MeshDeformVertices-ext->5:ParallelMap 584514
        TriMesh _67SetMeshVertices;// 3:MeshSetVertices-ext->8:SetMeshVertices 584513
        _0MeshVertices = MeshVertices(mesh);
        _1TranslationMatrix = TranslationMatrix(gizmo translation);
        _2X = X(gizmo rotation);
        _3Unit = Unit(_2X);
        _4Y = Y(gizmo rotation);
        _5Append = Append(_3Unit, _4Y);
        _6Z = Z(gizmo rotation);
        _7Append = Append(_5Append, _6Z);
        _8Pass-through: function1 = (Single x0) => 
          {
            Single _0ToRadians;// 1:EulerDegreesToRadians-ext->2:ToRadians 584659
            _0ToRadians = ToRadians(x0);
            _0ToRadians;
            };
        _9Map = Map(_7Append, _8Pass-through: function1);
        _10Zero = Zero();
        _11At = At(_9Map, _10Zero);
        _12One = One();
        _13Add = Add(_10Zero, _12One);
        _14At = At(_9Map, _13Add);
        _15One = One();
        _16Add = Add(_13Add, _15One);
        _17At = At(_9Map, _16Add);
        _18Vector3 = Vector3(_11At, _14At, _17At);
        _19Y = Y(_18Vector3);
        _20X = X(_18Vector3);
        _21Z = Z(_18Vector3);
        _22QuaternionFromYawPitchRoll = QuaternionFromYawPitchRoll(_19Y, _20X, _21Z);
        _23MatrixFromQuaternion = MatrixFromQuaternion(_22QuaternionFromYawPitchRoll);
        _24Multiply = Multiply(_1TranslationMatrix, _23MatrixFromQuaternion);
        _25Constant = 0;
        _26Vector3 = Vector3(_25Constant, _25Constant, _25Constant);
        _27ScalingTranslationMatrix = ScalingTranslationMatrix(gizmo scale, _26Vector3);
        _28Multiply = Multiply(_24Multiply, _27ScalingTranslationMatrix);
        _29InvertMatrix = InvertMatrix(_28Multiply);
        _30ParallelMap = ParallelMap(_0MeshVertices, (Vector3 x0) => 
          {
            Vector3 _0Transform;// 0:MeshDeformVertices-ext->11:Transform 584517
            _0Transform = Transform(x0, _29InvertMatrix);
            _0Transform;
            });
        _31Constant = 0;
        _32Vector3 = Vector3(_31Constant, _31Constant, _31Constant);
        _33Zero = Zero();
        _34GreaterThanOrEqual = GreaterThanOrEqual(axis, _33Zero);
        _35XAxis = XAxis();
        _36YAxis = YAxis();
        _37ZAxis = ZAxis();
        _50Ray = Ray(_32Vector3, if (_34GreaterThanOrEqual)
          {
            IArray[Vector3] _38Unit;// 2:Array3->2:Unit 584675
            IArray[Vector3] _39Append;// 2:Array3->3:Append 584674
            IArray[Vector3] _40Append;// 2:Array3->6:Append 584673
            Vector3 _41At;// 23:AxisChoose-ext->1:At 584669
            _38Unit = Unit(_35XAxis);
            _39Append = Append(_38Unit, _36YAxis);
            _40Append = Append(_39Append, _37ZAxis);
            _41At = At(_40Append, axis);
            _41At;
            }else
          {
            IArray[Vector3] _42Unit;// 2:Array3->2:Unit 584675
            IArray[Vector3] _43Append;// 2:Array3->3:Append 584674
            IArray[Vector3] _44Append;// 2:Array3->6:Append 584673
            Int32 _45One;// 10:PlusOne->1:One 584684
            Int32 _46Add;// 10:PlusOne->0:Add 584683
            Int32 _47Negative;// 23:AxisChoose-ext->11:Negative 584681
            Vector3 _48At;// 23:AxisChoose-ext->12:At 584680
            Vector3 _49Negate;// 23:AxisChoose-ext->13:Negate 584679
            _42Unit = Unit(_35XAxis);
            _43Append = Append(_42Unit, _36YAxis);
            _44Append = Append(_43Append, _37ZAxis);
            _45One = One();
            _46Add = Add(axis, _45One);
            _47Negative = Negative(_46Add);
            _48At = At(_44Append, _47Negative);
            _49Negate = Negate(_48At);
            _49Negate;
            });
        _51Constant = 0;
        _52Vector3 = Vector3(_51Constant, _51Constant, _51Constant);
        _53Vector3 = Vector3(x translation, y translation, z translation);
        _54Constant = 0;
        _55Vector3 = Vector3(_54Constant, _54Constant, _54Constant);
        _56Vector3 = Vector3(x rotation, y rotation, z rotation);
        _57Constant = 3.6;
        _58MultiplyByScalar = MultiplyByScalar(_56Vector3, _57Constant);
        _59Constant = 1;
        _60Vector3 = Vector3(_59Constant, _59Constant, _59Constant);
        _61Vector3 = Vector3(x scaling, y scaling, z scaling);
        _62Constant = 1;
        _63Vector3 = Vector3(_62Constant, _62Constant, _62Constant);
        _64Add = Add(_61Vector3, _63Vector3);
        _65Pass-through: function1 = (Vector3 x0) => 
          {
            Vector3 _0RayPosition;// 9:PointProjectionAmount-ext->9:RayPosition 584602
            Vector3 _1Subtract;// 9:PointProjectionAmount-ext->3:Subtract 584601
            Vector3 _2RayDirection;// 9:PointProjectionAmount-ext->10:RayDirection 584603
            Single _3Dot;// 7:Projection->3:Dot 584598
            Single _4LengthSquared;// 7:Projection->4:LengthSquared 584599
            Single _5Divide;// 7:Projection->5:Divide 584597
            Vector3 _6MultiplyByScalar;// 7:Projection->2:MultiplyByScalar 584596
            Single _7Length;// 6:VectorProjectionLength-ext->4:Length 584593
            Single _8FloatZero;// 3:FloatNegateIfOther-ext->4:FloatZero 584591
            Boolean _9LessThan;// 3:FloatNegateIfOther-ext->3:LessThan 584590
            Single _10Dot;// 6:VectorProjectionLength-ext->5:Dot 584600
            Single _24IgnoreFirst;// 6:VectorProjectionLength-ext->6:IgnoreFirst 584586
            Single _25Length;// 9:PointProjectionAmount-ext->4:Length 584604
            Single _26Divide;// 9:PointProjectionAmount-ext->5:Divide 584583
            Vector3 _27Lerp;// 10:MatrixFromPRSLerp-ext->10:Lerp 584545
            Matrix _28TranslationMatrix;// 14:MatrixFromPRS-ext->3:TranslationMatrix 584539
            Vector3 _29Lerp;// 10:MatrixFromPRSLerp-ext->9:Lerp 584579
            Single _30X;// 1:VectorAsArray->1:X 584575
            IArray[Single] _31Unit;// 4:Array3->2:Unit 584574
            Single _32Y;// 1:VectorAsArray->2:Y 584576
            IArray[Single] _33Append;// 4:Array3->3:Append 584573
            Single _34Z;// 1:VectorAsArray->3:Z 584577
            IArray[Single] _35Append;// 4:Array3->6:Append 584572
            Func[Single, Single] _36Pass-through: function1;// 0:Pass-through: function1 584554
            IArray[Single] _37Map;// 1:VectorMapComponents-ext->2:Map 584567
            Int32 _38Zero;// 3:VectorFromArray-ext->5:Zero 584558
            Single _39At;// 3:VectorFromArray-ext->1:At 584557
            Int32 _40One;// 6:PlusOne->1:One 584562
            Int32 _41Add;// 6:PlusOne->0:Add 584561
            Single _42At;// 3:VectorFromArray-ext->2:At 584559
            Int32 _43One;// 7:PlusOne->1:One 584566
            Int32 _44Add;// 7:PlusOne->0:Add 584565
            Single _45At;// 3:VectorFromArray-ext->3:At 584563
            Vector3 _46Vector3;// 3:VectorFromArray-ext->4:Vector3 584556
            Single _47Y;// 2:QuaternionFromVector3-ext->7:Y 584549
            Single _48X;// 2:QuaternionFromVector3-ext->6:X 584550
            Single _49Z;// 2:QuaternionFromVector3-ext->8:Z 584551
            Quaternion _50QuaternionFromYawPitchRoll;// 2:QuaternionFromVector3-ext->3:QuaternionFromYawPitchRoll 584548
            Matrix _51MatrixFromQuaternion;// 14:MatrixFromPRS-ext->4:MatrixFromQuaternion 584540
            Matrix _52Multiply;// 6:Multiply3-ext->3:Multiply 584538
            Vector3 _53Lerp;// 10:MatrixFromPRSLerp-ext->8:Lerp 584580
            Single _54Constant;// 8:Origin->0:Constant 584544
            Vector3 _55Vector3;// 8:Origin->1:Vector3 584543
            Matrix _56ScalingTranslationMatrix;// 8:MatrixFromScalingVector-ext->4:ScalingTranslationMatrix 584542
            Matrix _57Multiply;// 6:Multiply3-ext->4:Multiply 584537
            Matrix _58IgnoreFirst;// 10:MatrixFromPRSLerp-ext->12:IgnoreFirst 584530
            Vector3 _59Transform;// 0:MeshTransformVertices-ext->4:Transform 584521
            _0RayPosition = RayPosition(_50Ray);
            _1Subtract = Subtract(x0, _0RayPosition);
            _2RayDirection = RayDirection(_50Ray);
            _3Dot = Dot(_1Subtract, _2RayDirection);
            _4LengthSquared = LengthSquared(_2RayDirection);
            _5Divide = Divide(_3Dot, _4LengthSquared);
            _6MultiplyByScalar = MultiplyByScalar(_2RayDirection, _5Divide);
            _7Length = Length(_6MultiplyByScalar);
            _8FloatZero = FloatZero();
            _9LessThan = LessThan(_7Length, _8FloatZero);
            _10Dot = Dot(_6MultiplyByScalar, _2RayDirection);
            _24IgnoreFirst = IgnoreFirst(_1Subtract, if (_9LessThan)
              {
                Single _23NegativeFloat;// 3:FloatNegateIfOther-ext->7:NegativeFloat 584592
                _23NegativeFloat = NegativeFloat(_10Dot);
                _23NegativeFloat;
                }else
              {
                _10Dot;
                });
            _25Length = Length(_2RayDirection);
            _26Divide = Divide(_24IgnoreFirst, _25Length);
            _27Lerp = Lerp(_52Vector3, _53Vector3, _26Divide);
            _28TranslationMatrix = TranslationMatrix(_27Lerp);
            _29Lerp = Lerp(_55Vector3, _58MultiplyByScalar, _26Divide);
            _30X = X(_29Lerp);
            _31Unit = Unit(_30X);
            _32Y = Y(_29Lerp);
            _33Append = Append(_31Unit, _32Y);
            _34Z = Z(_29Lerp);
            _35Append = Append(_33Append, _34Z);
            _36Pass-through: function1 = (Single x0) => 
              {
                Single _0ToRadians;// 1:EulerDegreesToRadians-ext->2:ToRadians 584578
                _0ToRadians = ToRadians(x0);
                _0ToRadians;
                };
            _37Map = Map(_35Append, _36Pass-through: function1);
            _38Zero = Zero();
            _39At = At(_37Map, _38Zero);
            _40One = One();
            _41Add = Add(_38Zero, _40One);
            _42At = At(_37Map, _41Add);
            _43One = One();
            _44Add = Add(_41Add, _43One);
            _45At = At(_37Map, _44Add);
            _46Vector3 = Vector3(_39At, _42At, _45At);
            _47Y = Y(_46Vector3);
            _48X = X(_46Vector3);
            _49Z = Z(_46Vector3);
            _50QuaternionFromYawPitchRoll = QuaternionFromYawPitchRoll(_47Y, _48X, _49Z);
            _51MatrixFromQuaternion = MatrixFromQuaternion(_50QuaternionFromYawPitchRoll);
            _52Multiply = Multiply(_28TranslationMatrix, _51MatrixFromQuaternion);
            _53Lerp = Lerp(_60Vector3, _64Add, _26Divide);
            _54Constant = 0;
            _55Vector3 = Vector3(_54Constant, _54Constant, _54Constant);
            _56ScalingTranslationMatrix = ScalingTranslationMatrix(_53Lerp, _55Vector3);
            _57Multiply = Multiply(_52Multiply, _56ScalingTranslationMatrix);
            _58IgnoreFirst = IgnoreFirst(_26Divide, _57Multiply);
            _59Transform = Transform(x0, _58IgnoreFirst);
            _59Transform;
            };
        _66ParallelMap = ParallelMap(_30ParallelMap, (Vector3 x0) => 
          {
            Vector3 _0Apply1;// 0:MeshDeformVertices-ext->8:Apply1 584520
            Vector3 _1Transform;// 0:MeshDeformVertices-ext->9:Transform 584519
            _0Apply1 = Apply1(_65Pass-through: function1, x0);
            _1Transform = Transform(_0Apply1, _28Multiply);
            _1Transform;
            });
        _67SetMeshVertices = SetMeshVertices(mesh, _66ParallelMap);
        _67SetMeshVertices;
        });
    _5IfThen;
    }