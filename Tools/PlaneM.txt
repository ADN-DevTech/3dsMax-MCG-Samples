(InstanceState state, Int32 widthSegments, Int32 heightSegments, Single width, Single height) => 
  {
    Int32 _0One;// 4:PlusOne->1:One 709900
    Int32 _1Add;// 4:PlusOne->0:Add 709899
    IArray[Single] _2RangeInclusiveFloat;// 8:SampleLerp->2:RangeInclusiveFloat 709874
    Single _3Constant;// 7:Vector3FromXY->0:Constant 709922
    Vector3 _4Vector3;// 7:Vector3FromXY->0:Vector3 709921
    Vector3 _5Negate;// 0:QuadMeshPlaneXY-ext->5:Negate 709918
    Single _6X;// 4:QuadMeshPlane-ext->2:X 709910
    Single _7Y;// 4:QuadMeshPlane-ext->3:Y 709911
    Single _8Constant;// 4:Vector3FromXY->0:Constant 709909
    Vector3 _9Vector3;// 4:Vector3FromXY->0:Vector3 709908
    Line _10Line;// 5:QuadMeshGrid-ext->10:Line 709901
    Single _11X;// 4:QuadMeshPlane-ext->6:X 709916
    Single _12Y;// 4:QuadMeshPlane-ext->8:Y 709917
    Single _13Constant;// 7:Vector3FromXY->0:Constant 709915
    Vector3 _14Vector3;// 7:Vector3FromXY->0:Vector3 709914
    Line _15Line;// 5:QuadMeshGrid-ext->11:Line 709902
    Func[Single, Line] _16Pass-through: function1;// 0:Pass-through: function1 709872
    IArray[Line] _17Map;// 8:SampleLerp->3:Map 709873
    Int32 _18One;// 6:PlusOne->1:One 709905
    Int32 _19Add;// 6:PlusOne->0:Add 709904
    Func[Line, IArray[Vector3]] _20Pass-through: function1;// 0:Pass-through: function1 709868
    IArray[IArray[Vector3]] _21Map;// 9:FlatMap->4:Map 709870
    IArray[Vector3] _22Flatten;// 9:FlatMap->3:Flatten 709869
    Boolean _23False;// 20:QuadPlaneMesh->5:False 709897
    QuadMesh _24QuadMeshStrip;// 20:QuadPlaneMesh->0:QuadMeshStrip 709866
    QuadMesh _25IgnoreFirst;// 5:QuadMeshGrid-ext->1:IgnoreFirst 709861
    IArray[Vector3] _26QuadMeshVertices;// 5:QuadMeshToTriMesh-ext->14:QuadMeshVertices 709811
    IArray[Int32] _27QuadMeshIndices;// 5:QuadMeshToTriMesh-ext->2:QuadMeshIndices 709824
    Int32 _28Count;// 3:Slices->2:Count 709821
    Int32 _29Constant;// 5:QuadMeshToTriMesh-ext->0:Constant 709825
    Int32 _30Divide;// 3:Slices->3:Divide 709820
    IArray[Int32] _31Range;// 3:Slices->4:Range 709819
    IArray[IArray[Int32]] _32Map;// 3:Slices->5:Map 709818
    Int32 _33Constant;// 5:QuadMeshToTriMesh-ext->0:Constant 709840
    IArray[Int32] _34Range;// 5:QuadMeshToTriMesh-ext->6:Range 709839
    Int32 _35Constant;// 5:QuadMeshToTriMesh-ext->0:Constant 709841
    IArray[Int32] _36Append;// 5:QuadMeshToTriMesh-ext->11:Append 709838
    Int32 _37Constant;// 5:QuadMeshToTriMesh-ext->0:Constant 709842
    IArray[Int32] _38Append;// 5:QuadMeshToTriMesh-ext->12:Append 709837
    Int32 _39Constant;// 5:QuadMeshToTriMesh-ext->0:Constant 709843
    IArray[Int32] _40Append;// 5:QuadMeshToTriMesh-ext->17:Append 709836
    IArray[Int32] _41Map;// 23:IntArrayCheck-ext->1:Map 709834
    Func[IArray[Int32], IArray[Int32]] _42Pass-through: function1;// 0:Pass-through: function1 709813
    IArray[IArray[Int32]] _43Map;// 1:FlatMap->4:Map 709815
    IArray[Int32] _44Flatten;// 1:FlatMap->3:Flatten 709814
    TriMesh _45CreateMesh;// 5:QuadMeshToTriMesh-ext->13:CreateMesh 709810
    IArray[Int32] _46MeshIndices;// 16:HideEveryThirdEdge->2:MeshIndices 709801
    IArray[Int32] _47Indices;// 16:HideEveryThirdEdge->8:Indices 709800
    Int32 _48Constant;// 16:HideEveryThirdEdge->0:Constant 709808
    Int32 _49Constant;// 16:HideEveryThirdEdge->0:Constant 709809
    IArray[Boolean] _50Map;// 16:HideEveryThirdEdge->5:Map 709799
    TriMesh _51SetVisibleEdges;// 16:HideEveryThirdEdge->9:SetVisibleEdges 709798
    _0One = One();
    _1Add = Add(heightSegments, _0One);
    _2RangeInclusiveFloat = RangeInclusiveFloat(_1Add);
    _3Constant = 0;
    _4Vector3 = Vector3(width, height, _3Constant);
    _5Negate = Negate(_4Vector3);
    _6X = X(_4Vector3);
    _7Y = Y(_5Negate);
    _8Constant = 0;
    _9Vector3 = Vector3(_6X, _7Y, _8Constant);
    _10Line = Line(_5Negate, _9Vector3);
    _11X = X(_5Negate);
    _12Y = Y(_4Vector3);
    _13Constant = 0;
    _14Vector3 = Vector3(_11X, _12Y, _13Constant);
    _15Line = Line(_14Vector3, _4Vector3);
    _16Pass-through: function1 = (Single x0) => 
      {
        Vector3 _0LineA;// 10:LerpLines->2:LineA 709880
        Vector3 _1LineB;// 10:LerpLines->3:LineB 709881
        Vector3 _2Lerp;// 10:LerpLines->4:Lerp 709879
        Vector3 _3LineA;// 10:LerpLines->7:LineA 709883
        Vector3 _4LineB;// 10:LerpLines->8:LineB 709884
        Vector3 _5Lerp;// 10:LerpLines->9:Lerp 709882
        Line _6Line;// 10:LerpLines->10:Line 709878
        _0LineA = LineA(_10Line);
        _1LineB = LineB(_10Line);
        _2Lerp = Lerp(_0LineA, _1LineB, x0);
        _3LineA = LineA(_15Line);
        _4LineB = LineB(_15Line);
        _5Lerp = Lerp(_3LineA, _4LineB, x0);
        _6Line = Line(_2Lerp, _5Lerp);
        _6Line;
        };
    _17Map = Map(_2RangeInclusiveFloat, _16Pass-through: function1);
    _18One = One();
    _19Add = Add(widthSegments, _18One);
    _20Pass-through: function1 = (Line x0) => 
      {
        IArray[Single] _0RangeInclusiveFloat;// 5:SampleLerp->2:RangeInclusiveFloat 709893
        Vector3 _1LineA;// 7:LineToArray->3:LineA 709895
        Vector3 _2LineB;// 7:LineToArray->4:LineB 709896
        Func[Single, Vector3] _3Pass-through: function1;// 0:Pass-through: function1 709891
        IArray[Vector3] _4Map;// 5:SampleLerp->3:Map 709892
        _0RangeInclusiveFloat = RangeInclusiveFloat(_19Add);
        _1LineA = LineA(x0);
        _2LineB = LineB(x0);
        _3Pass-through: function1 = (Single x0) => 
          {
            Vector3 _0Lerp;// 2:ArrayOfLerpedVectors->3:Lerp 709894
            _0Lerp = Lerp(_1LineA, _2LineB, x0);
            _0Lerp;
            };
        _4Map = Map(_0RangeInclusiveFloat, _3Pass-through: function1);
        _4Map;
        };
    _21Map = Map(_17Map, _20Pass-through: function1);
    _22Flatten = Flatten(_21Map);
    _23False = False();
    _24QuadMeshStrip = QuadMeshStrip(_22Flatten, _1Add, _23False, _23False);
    _25IgnoreFirst = IgnoreFirst(widthSegments, _24QuadMeshStrip);
    _26QuadMeshVertices = QuadMeshVertices(_25IgnoreFirst);
    _27QuadMeshIndices = QuadMeshIndices(_25IgnoreFirst);
    _28Count = Count(_27QuadMeshIndices);
    _29Constant = 4;
    _30Divide = Divide(_28Count, _29Constant);
    _31Range = Range(_30Divide);
    _32Map = Map(_31Range, (Int32 x0) => 
      {
        Int32 _0Multiply;// 3:Slices->6:Multiply 709823
        IArray[Int32] _1Slice;// 3:Slices->0:Slice 709822
        _0Multiply = Multiply(_29Constant, x0);
        _1Slice = Slice(_27QuadMeshIndices, _0Multiply, _29Constant);
        _1Slice;
        });
    _33Constant = 3;
    _34Range = Range(_33Constant);
    _35Constant = 2;
    _36Append = Append(_34Range, _35Constant);
    _37Constant = 3;
    _38Append = Append(_36Append, _37Constant);
    _39Constant = 0;
    _40Append = Append(_38Append, _39Constant);
    _41Map = Map(_40Append, (Int32 x0) => 
      {
        x0;
        });
    _42Pass-through: function1 = (IArray[Int32] x0) => 
      {
        IArray[Int32] _0Map;// 5:IntArrayCheck-ext->1:Map 709830
        IArray[Int32] _1Map;// 5:IntArrayCheck-ext->1:Map 709845
        IArray[Int32] _2Map;// 22:ArraySelectByIndex2-ext->2:Map 709828
        _0Map = Map(_41Map, (Int32 x0) => 
          {
            x0;
            });
        _1Map = Map(x0, (Int32 x0) => 
          {
            x0;
            });
        _2Map = Map(_0Map, (Int32 x0) => 
          {
            Int32 _0At;// 22:ArraySelectByIndex2-ext->3:At 709832
            _0At = At(_1Map, x0);
            _0At;
            });
        _2Map;
        };
    _43Map = Map(_32Map, _42Pass-through: function1);
    _44Flatten = Flatten(_43Map);
    _45CreateMesh = CreateMesh(_26QuadMeshVertices, _44Flatten);
    _46MeshIndices = MeshIndices(_45CreateMesh);
    _47Indices = Indices(_46MeshIndices);
    _48Constant = 3;
    _49Constant = 2;
    _50Map = Map(_47Indices, (Int32 x0) => 
      {
        Int32 _0Modulo;// 6:ModuloEquals->3:Modulo 709807
        Boolean _1Equal;// 6:ModuloEquals->4:Equal 709806
        Boolean _2Not;// 16:HideEveryThirdEdge->7:Not 709802
        _0Modulo = Modulo(x0, _48Constant);
        _1Equal = Equal(_0Modulo, _49Constant);
        _2Not = Not(_1Equal);
        _2Not;
        });
    _51SetVisibleEdges = SetVisibleEdges(_45CreateMesh, _50Map);
    _51SetVisibleEdges;
    }