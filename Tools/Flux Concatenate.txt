(InstanceState state, TriMesh mesh, Int32 flux channel A, INode source, Int32 flux channel B) => 
  {
    MapChannel _0GetMapChannel;// 19:MatricesFromMapChannel-ext->9:GetMapChannel 98794
    IArray[Vector3] _1MapChannelVertexBuffer;// 19:MatricesFromMapChannel-ext->8:MapChannelVertexBuffer 98793
    Int32 _2Count;// 2:Slices->2:Count 98790
    Int32 _3Constant;// 19:MatricesFromMapChannel-ext->0:Constant 98795
    Int32 _4Divide;// 2:Slices->3:Divide 98789
    IArray[Int32] _5Range;// 2:Slices->4:Range 98788
    IArray[IArray[Vector3]] _6Map;// 2:Slices->5:Map 98787
    IArray[Matrix] _7Map;// 19:MatricesFromMapChannel-ext->5:Map 98784
    Boolean _8IsValidNode;// 13:NodeMeshOrDefault-ext->1:IsValidNode 98865
    TriMesh _10Pass-through: TriMesh;// 0:Pass-through: TriMesh 98822
    MapChannel _11GetMapChannel;// 9:MatricesFromMapChannel-ext->9:GetMapChannel 98834
    IArray[Vector3] _12MapChannelVertexBuffer;// 9:MatricesFromMapChannel-ext->8:MapChannelVertexBuffer 98833
    Int32 _13Count;// 2:Slices->2:Count 98830
    Int32 _14Constant;// 9:MatricesFromMapChannel-ext->0:Constant 98835
    Int32 _15Divide;// 2:Slices->3:Divide 98829
    IArray[Int32] _16Range;// 2:Slices->4:Range 98828
    IArray[IArray[Vector3]] _17Map;// 2:Slices->5:Map 98827
    IArray[Matrix] _18Map;// 9:MatricesFromMapChannel-ext->5:Map 98824
    IArray[Matrix] _19Concatenate;// 0:Concatenate 98781
    Func[Matrix, IArray[Vector3]] _20Pass-through: function1;// 0:Pass-through: function1 98767
    IArray[IArray[Vector3]] _21Map;// 5:FlatMap->4:Map 98769
    IArray[Vector3] _22Flatten;// 5:FlatMap->3:Flatten 98768
    IArray[Int32] _23MeshIndices;// 6:MapChannelStoreMatrices-ext->0:MeshIndices 98778
    TriMesh _24SetMapChannel;// 6:MapChannelStoreMatrices-ext->7:SetMapChannel 98765
    _0GetMapChannel = GetMapChannel(mesh, flux channel A);
    _1MapChannelVertexBuffer = MapChannelVertexBuffer(_0GetMapChannel);
    _2Count = Count(_1MapChannelVertexBuffer);
    _3Constant = 4;
    _4Divide = Divide(_2Count, _3Constant);
    _5Range = Range(_4Divide);
    _6Map = Map(_5Range, (Int32 x0) => 
      {
        Int32 _0Multiply;// 2:Slices->6:Multiply 98792
        IArray[Vector3] _1Slice;// 2:Slices->0:Slice 98791
        _0Multiply = Multiply(_3Constant, x0);
        _1Slice = Slice(_1MapChannelVertexBuffer, _0Multiply, _3Constant);
        _1Slice;
        });
    _7Map = Map(_6Map, (IArray[Vector3] x0) => 
      {
        Matrix _0MatrixIdentity;// 0:SetMatrixFrom3Rows->23:MatrixIdentity 98804
        Int32 _1One;// 0:SetMatrixFrom3Rows->24:One 98805
        Int32 _2Zero;// 6:MatrixFromRows-ext->7:Zero 98809
        Vector3 _3At;// 6:MatrixFromRows-ext->3:At 98808
        Matrix _4SetMatrixRow;// 0:SetMatrixFrom3Rows->22:SetMatrixRow 98803
        Int32 _5Two;// 0:SetMatrixFrom3Rows->26:Two 98806
        Int32 _6One;// 8:PlusOne->1:One 98813
        Int32 _7Add;// 8:PlusOne->0:Add 98812
        Vector3 _8At;// 6:MatrixFromRows-ext->4:At 98810
        Matrix _9SetMatrixRow;// 0:SetMatrixFrom3Rows->27:SetMatrixRow 98802
        Int32 _10Constant;// 25:Three->0:Constant 98807
        Int32 _11One;// 9:PlusOne->1:One 98817
        Int32 _12Add;// 9:PlusOne->0:Add 98816
        Vector3 _13At;// 6:MatrixFromRows-ext->5:At 98814
        Matrix _14SetMatrixRow;// 0:SetMatrixFrom3Rows->28:SetMatrixRow 98801
        Int32 _15One;// 10:PlusOne->1:One 98821
        Int32 _16Add;// 10:PlusOne->0:Add 98820
        Vector3 _17At;// 6:MatrixFromRows-ext->6:At 98818
        Matrix _18SetMatrixTranslation;// 6:MatrixFromRows-ext->2:SetMatrixTranslation 98797
        _0MatrixIdentity = MatrixIdentity();
        _1One = One();
        _2Zero = Zero();
        _3At = At(x0, _2Zero);
        _4SetMatrixRow = SetMatrixRow(_0MatrixIdentity, _1One, _3At);
        _5Two = Two();
        _6One = One();
        _7Add = Add(_2Zero, _6One);
        _8At = At(x0, _7Add);
        _9SetMatrixRow = SetMatrixRow(_4SetMatrixRow, _5Two, _8At);
        _10Constant = 3;
        _11One = One();
        _12Add = Add(_7Add, _11One);
        _13At = At(x0, _12Add);
        _14SetMatrixRow = SetMatrixRow(_9SetMatrixRow, _10Constant, _13At);
        _15One = One();
        _16Add = Add(_12Add, _15One);
        _17At = At(x0, _16Add);
        _18SetMatrixTranslation = SetMatrixTranslation(_14SetMatrixRow, _17At);
        _18SetMatrixTranslation;
        });
    _8IsValidNode = IsValidNode(source);
    _10Pass-through: TriMesh = if (_8IsValidNode)
      {
        TriMesh _9MeshFromNode;// 13:NodeMeshOrDefault-ext->2:MeshFromNode 98866
        _9MeshFromNode = MeshFromNode(source);
        _9MeshFromNode;
        }else
      {
        mesh;
        };
    _11GetMapChannel = GetMapChannel(_10Pass-through: TriMesh, flux channel B);
    _12MapChannelVertexBuffer = MapChannelVertexBuffer(_11GetMapChannel);
    _13Count = Count(_12MapChannelVertexBuffer);
    _14Constant = 4;
    _15Divide = Divide(_13Count, _14Constant);
    _16Range = Range(_15Divide);
    _17Map = Map(_16Range, (Int32 x0) => 
      {
        Int32 _0Multiply;// 2:Slices->6:Multiply 98832
        IArray[Vector3] _1Slice;// 2:Slices->0:Slice 98831
        _0Multiply = Multiply(_14Constant, x0);
        _1Slice = Slice(_12MapChannelVertexBuffer, _0Multiply, _14Constant);
        _1Slice;
        });
    _18Map = Map(_17Map, (IArray[Vector3] x0) => 
      {
        Matrix _0MatrixIdentity;// 0:SetMatrixFrom3Rows->23:MatrixIdentity 98844
        Int32 _1One;// 0:SetMatrixFrom3Rows->24:One 98845
        Int32 _2Zero;// 6:MatrixFromRows-ext->7:Zero 98849
        Vector3 _3At;// 6:MatrixFromRows-ext->3:At 98848
        Matrix _4SetMatrixRow;// 0:SetMatrixFrom3Rows->22:SetMatrixRow 98843
        Int32 _5Two;// 0:SetMatrixFrom3Rows->26:Two 98846
        Int32 _6One;// 8:PlusOne->1:One 98853
        Int32 _7Add;// 8:PlusOne->0:Add 98852
        Vector3 _8At;// 6:MatrixFromRows-ext->4:At 98850
        Matrix _9SetMatrixRow;// 0:SetMatrixFrom3Rows->27:SetMatrixRow 98842
        Int32 _10Constant;// 25:Three->0:Constant 98847
        Int32 _11One;// 9:PlusOne->1:One 98857
        Int32 _12Add;// 9:PlusOne->0:Add 98856
        Vector3 _13At;// 6:MatrixFromRows-ext->5:At 98854
        Matrix _14SetMatrixRow;// 0:SetMatrixFrom3Rows->28:SetMatrixRow 98841
        Int32 _15One;// 10:PlusOne->1:One 98861
        Int32 _16Add;// 10:PlusOne->0:Add 98860
        Vector3 _17At;// 6:MatrixFromRows-ext->6:At 98858
        Matrix _18SetMatrixTranslation;// 6:MatrixFromRows-ext->2:SetMatrixTranslation 98837
        _0MatrixIdentity = MatrixIdentity();
        _1One = One();
        _2Zero = Zero();
        _3At = At(x0, _2Zero);
        _4SetMatrixRow = SetMatrixRow(_0MatrixIdentity, _1One, _3At);
        _5Two = Two();
        _6One = One();
        _7Add = Add(_2Zero, _6One);
        _8At = At(x0, _7Add);
        _9SetMatrixRow = SetMatrixRow(_4SetMatrixRow, _5Two, _8At);
        _10Constant = 3;
        _11One = One();
        _12Add = Add(_7Add, _11One);
        _13At = At(x0, _12Add);
        _14SetMatrixRow = SetMatrixRow(_9SetMatrixRow, _10Constant, _13At);
        _15One = One();
        _16Add = Add(_12Add, _15One);
        _17At = At(x0, _16Add);
        _18SetMatrixTranslation = SetMatrixTranslation(_14SetMatrixRow, _17At);
        _18SetMatrixTranslation;
        });
    _19Concatenate = Concatenate(_7Map, _18Map);
    _20Pass-through: function1 = (Matrix x0) => 
      {
        Int32 _0Constant;// 3:MatrixRows-ext->0:Constant 98773
        IArray[Int32] _1Range;// 3:MatrixRows-ext->1:Range 98772
        IArray[Vector3] _2Map;// 3:MatrixRows-ext->3:Map 98771
        _0Constant = 4;
        _1Range = Range(_0Constant);
        _2Map = Map(_1Range, (Int32 x0) => 
          {
            Int32 _0One;// 5:PlusOne->1:One 98777
            Int32 _1Add;// 5:PlusOne->0:Add 98776
            Vector3 _2MatrixRow;// 3:MatrixRows-ext->4:MatrixRow 98774
            _0One = One();
            _1Add = Add(x0, _0One);
            _2MatrixRow = MatrixRow(_1Add, x0);
            _2MatrixRow;
            });
        _2Map;
        };
    _21Map = Map(_19Concatenate, _20Pass-through: function1);
    _22Flatten = Flatten(_21Map);
    _23MeshIndices = MeshIndices(mesh);
    _24SetMapChannel = SetMapChannel(mesh, flux channel A, _22Flatten, _23MeshIndices);
    _24SetMapChannel;
    }