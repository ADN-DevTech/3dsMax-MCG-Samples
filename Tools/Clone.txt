(InstanceState state, TriMesh mesh, Int32 # Clones, Single X Offset, Single Y Offset, Single Z Offset, Single Y Rotation, Single X Rotation, Single Z Rotation, Single scale) => 
  {
    Vector3 _0Vector3;// 6:Vector3 94928
    Matrix _1TranslationMatrix;// 5:TranslationMatrix 94927
    Single _2ToRadians;// 18:ToRadians 94933
    Single _3ToRadians;// 17:ToRadians 94935
    Single _4ToRadians;// 16:ToRadians 94937
    Matrix _5MatrixFromYawPitchRoll;// 37:MatrixFromYawPitchRoll 94932
    Matrix _6Multiply;// 10:Multiply 94926
    Single _7Constant;// 11:DivideBy100Float->0:Constant 94947
    Single _8Divide;// 11:DivideBy100Float->1:Divide 94946
    Vector3 _9Vector3;// 38:ScalarToVector-ext->1:Vector3 94944
    Single _10Constant;// 8:Origin->0:Constant 94942
    Vector3 _11Vector3;// 8:Origin->1:Vector3 94941
    Matrix _12ScalingTranslationMatrix;// 22:MatrixFromScalingVector2-ext->4:ScalingTranslationMatrix 94940
    Matrix _13Multiply;// 19:Multiply 94925
    IArray[TriMesh] _14GenerateN;// 2:CloneAndTransformMesh->3:GenerateN 94914
    TriMesh _15CombineAllMeshes;// 4:CombineAllMeshes 94910
    _0Vector3 = Vector3(X Offset, Y Offset, Z Offset);
    _1TranslationMatrix = TranslationMatrix(_0Vector3);
    _2ToRadians = ToRadians(Y Rotation);
    _3ToRadians = ToRadians(X Rotation);
    _4ToRadians = ToRadians(Z Rotation);
    _5MatrixFromYawPitchRoll = MatrixFromYawPitchRoll(_2ToRadians, _3ToRadians, _4ToRadians);
    _6Multiply = Multiply(_1TranslationMatrix, _5MatrixFromYawPitchRoll);
    _7Constant = 100;
    _8Divide = Divide(scale, _7Constant);
    _9Vector3 = Vector3(_8Divide, _8Divide, _8Divide);
    _10Constant = 0;
    _11Vector3 = Vector3(_10Constant, _10Constant, _10Constant);
    _12ScalingTranslationMatrix = ScalingTranslationMatrix(_9Vector3, _11Vector3);
    _13Multiply = Multiply(_6Multiply, _12ScalingTranslationMatrix);
    _14GenerateN = GenerateN(mesh, # Clones, (TriMesh x0) => 
      {
        IArray[Vector3] _0MeshVertices;// 2:DeformMeshPoints->0:MeshVertices 94921
        Func[Vector3, Vector3] _1Pass-through: function1;// 0:Pass-through: function1 94918
        IArray[Vector3] _2Map;// 2:DeformMeshPoints->1:Map 94920
        TriMesh _3SetMeshVertices;// 2:DeformMeshPoints->4:SetMeshVertices 94919
        _0MeshVertices = MeshVertices(x0);
        _1Pass-through: function1 = (Vector3 x0) => 
          {
            Vector3 _0Transform;// 4:TransformMesh->0:Transform 94922
            _0Transform = Transform(x0, _13Multiply);
            _0Transform;
            };
        _2Map = Map(_0MeshVertices, _1Pass-through: function1);
        _3SetMeshVertices = SetMeshVertices(x0, _2Map);
        _3SetMeshVertices;
        });
    _15CombineAllMeshes = CombineAllMeshes(_14GenerateN);
    _15CombineAllMeshes;
    }