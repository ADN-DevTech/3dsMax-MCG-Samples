(InstanceState state, TriMesh mesh, Int32 count, Int32 axis, INode target, Single x offset, Single y offset, Single z offset) => 
  {
    IArray[Int32] _0Range;// 13:MapRange-ext->2:Range 53245
    Single _1Constant;// 2:Origin->0:Constant 53266
    Vector3 _2Vector3;// 2:Origin->1:Vector3 53265
    Int32 _3Zero;// 2:AxisChoose-ext->9:Zero 53270
    Boolean _4GreaterThanOrEqual;// 2:AxisChoose-ext->8:GreaterThanOrEqual 53269
    Vector3 _5XAxis;// 2:AxisChoose-ext->3:XAxis 53278
    IArray[Vector3] _6Unit;// 2:Array3->2:Unit 53277
    Vector3 _7YAxis;// 2:AxisChoose-ext->4:YAxis 53279
    IArray[Vector3] _8Append;// 2:Array3->3:Append 53276
    Vector3 _9ZAxis;// 2:AxisChoose-ext->5:ZAxis 53280
    IArray[Vector3] _10Append;// 2:Array3->6:Append 53275
    Vector3 _17Pass-through: Vector3;// 0:Pass-through: Vector3 53263
    Ray _18Ray;// 3:RayFromOrigin-ext->1:Ray 53264
    Vector3 _19RayDirection;// 4:RaySetLGeometry - TriMesh=0--0--ength-ext->4:RayDirection 53262
    Vector3 _20Normalize;// 2:SetVectorLength->1:Normalize 53261
    Boolean _21IsValidNode;// 13:IsValidNode 53312
    TriMesh _23Pass-through: TriMesh;// 0:Pass-through: TriMesh 53223
    IArray[Vector3] _24MeshVertices;// 0:MeshBoundingBox-ext->1:MeshVertices 53308
    BoundingBox _25BoxFromPoints;// 0:MeshBoundingBox-ext->0:BoxFromPoints 53307
    Vector3 _26BoxMax;// 5:BoundingBoxExtent->1:BoxMax 53304
    Vector3 _27BoxMin;// 5:BoundingBoxExtent->2:BoxMin 53305
    Vector3 _28Subtract;// 5:BoundingBoxExtent->3:Subtract 53303
    Single _29X;// 2:VectorAsArray-ext->1:X 53299
    IArray[Single] _30Unit;// 4:Array3-ext->2:Unit 53298
    Single _31Y;// 2:VectorAsArray-ext->2:Y 53300
    IArray[Single] _32Append;// 4:Array3-ext->3:Append 53297
    Single _33Z;// 2:VectorAsArray-ext->3:Z 53301
    IArray[Single] _34Append;// 4:Array3-ext->6:Append 53296
    Single _35At;// 4:VectorElement-ext->3:At 53291
    Vector3 _36MultiplyByScalar;// 2:SetVectorLength->3:MultiplyByScalar 53260
    Ray _37SetRayDirection;// 4:RaySetLGeometry - TriMesh=0--0--ength-ext->3:SetRayDirection 53257
    Vector3 _38RayPosition;// 1:RaySampleWithSpacing-ext->5:RayPosition 53247
    Func[Int32, Vector3] _39Pass-through: function1;// 0:Pass-through: function1 53243
    IArray[Vector3] _40Map;// 13:MapRange-ext->3:Map 53244
    IArray[TriMesh] _41Map;// 0:CloneMeshAtPositions-ext->3:Map 53230
    IArray[Int32] _42Indices;// 2:MapWithIndexes-ext->3:Indices 53210
    Vector3 _43Vector3;// 7:Vector3 53315
    Func[TriMesh, Int32, TriMesh] _44Pass-through: any;// 0:Pass-through: any 53208
    IArray[TriMesh] _45Combine;// 2:MapWithIndexes-ext->2:Combine 53209
    TriMesh _46CombineAllMeshes;// 8:CombineAllMeshes 53204
    IArray[Vector3] _47MeshVertices;// 0:MeshDeformPoints-ext->0:MeshVertices 53167
    IArray[Vector3] _48MeshVertices;// 2:MeshBoundingBox-ext->1:MeshVertices 53199
    BoundingBox _49BoxFromPoints;// 2:MeshBoundingBox-ext->0:BoxFromPoints 53198
    Vector3 _50BoxMax;// 5:BoxAlignmentOffset-ext->5:BoxMax 53195
    IArray[Vector3] _51MeshVertices;// 3:MeshBoundingBox-ext->1:MeshVertices 53202
    BoundingBox _52BoxFromPoints;// 3:MeshBoundingBox-ext->0:BoxFromPoints 53201
    Vector3 _53BoxMin;// 5:BoxAlignmentOffset-ext->6:BoxMin 53196
    Vector3 _54Subtract;// 5:BoxAlignmentOffset-ext->0:Subtract 53194
    Int32 _55Zero;// 3:AxisChoose-ext->9:Zero 53175
    Boolean _56GreaterThanOrEqual;// 3:AxisChoose-ext->8:GreaterThanOrEqual 53174
    Vector3 _57XAxis;// 3:AxisChoose-ext->3:XAxis 53183
    IArray[Vector3] _58Unit;// 2:Array3->2:Unit 53182
    Vector3 _59YAxis;// 3:AxisChoose-ext->4:YAxis 53184
    IArray[Vector3] _60Append;// 2:Array3->3:Append 53181
    Vector3 _61ZAxis;// 3:AxisChoose-ext->5:ZAxis 53185
    IArray[Vector3] _62Append;// 2:Array3->6:Append 53180
    Vector3 _69Multiply;// 4:VectorAlongAxis-ext->2:Multiply 53171
    Func[Vector3, Vector3] _70Pass-through: function1;// 0:Pass-through: function1 53164
    IArray[Vector3] _71Map;// 0:MeshDeformPoints-ext->1:Map 53166
    TriMesh _72SetMeshVertices;// 0:MeshDeformPoints-ext->4:SetMeshVertices 53165
    IArray[Vector3] _73MeshVertices;// 0:MeshDeformPoints-ext->0:MeshVertices 53156
    Func[Vector3, Vector3] _74Pass-through: function1;// 0:Pass-through: function1 53153
    IArray[Vector3] _75Map;// 0:MeshDeformPoints-ext->1:Map 53155
    TriMesh _76SetMeshVertices;// 0:MeshDeformPoints-ext->4:SetMeshVertices 53154
    TriMesh _77CombineMeshes;// 6:MeshAlignAndCombine-ext->5:CombineMeshes 53149
    _0Range = Range(count);
    _1Constant = 0;
    _2Vector3 = Vector3(_1Constant, _1Constant, _1Constant);
    _3Zero = Zero();
    _4GreaterThanOrEqual = GreaterThanOrEqual(axis, _3Zero);
    _5XAxis = XAxis();
    _6Unit = Unit(_5XAxis);
    _7YAxis = YAxis();
    _8Append = Append(_6Unit, _7YAxis);
    _9ZAxis = ZAxis();
    _10Append = Append(_8Append, _9ZAxis);
    _17Pass-through: Vector3 = if (_4GreaterThanOrEqual)
      {
        Vector3 _11At;// 2:AxisChoose-ext->1:At 53271
        _11At = At(_10Append, axis);
        _11At;
        }else
      {
        Int32 _12One;// 10:PlusOne->1:One 53286
        Int32 _13Add;// 10:PlusOne->0:Add 53285
        Int32 _14Negative;// 2:AxisChoose-ext->11:Negative 53283
        Vector3 _15At;// 2:AxisChoose-ext->12:At 53282
        Vector3 _16Negate;// 2:AxisChoose-ext->13:Negate 53281
        _12One = One();
        _13Add = Add(axis, _12One);
        _14Negative = Negative(_13Add);
        _15At = At(_10Append, _14Negative);
        _16Negate = Negate(_15At);
        _16Negate;
        };
    _18Ray = Ray(_2Vector3, _17Pass-through: Vector3);
    _19RayDirection = RayDirection(_18Ray);
    _20Normalize = Normalize(_19RayDirection);
    _21IsValidNode = IsValidNode(target);
    _23Pass-through: TriMesh = if (_21IsValidNode)
      {
        TriMesh _22MeshFromNode;// 14:MeshFromNode 53314
        _22MeshFromNode = MeshFromNode(target);
        _22MeshFromNode;
        }else
      {
        mesh;
        };
    _24MeshVertices = MeshVertices(_23Pass-through: TriMesh);
    _25BoxFromPoints = BoxFromPoints(_24MeshVertices);
    _26BoxMax = BoxMax(_25BoxFromPoints);
    _27BoxMin = BoxMin(_25BoxFromPoints);
    _28Subtract = Subtract(_26BoxMax, _27BoxMin);
    _29X = X(_28Subtract);
    _30Unit = Unit(_29X);
    _31Y = Y(_28Subtract);
    _32Append = Append(_30Unit, _31Y);
    _33Z = Z(_28Subtract);
    _34Append = Append(_32Append, _33Z);
    _35At = At(_34Append, axis);
    _36MultiplyByScalar = MultiplyByScalar(_20Normalize, _35At);
    _37SetRayDirection = SetRayDirection(_18Ray, _36MultiplyByScalar);
    _38RayPosition = RayPosition(_37SetRayDirection);
    _39Pass-through: function1 = (Int32 x0) => 
      {
        Vector3 _0RayDirection;// 1:RaySampleWithSpacing-ext->4:RayDirection 53250
        Vector3 _1Normalize;// 1:RaySampleWithSpacing-ext->10:Normalize 53249
        Single _2IntAsFloat;// 1:RaySampleWithSpacing-ext->12:IntAsFloat 53252
        Single _3Multiply;// 1:RaySampleWithSpacing-ext->11:Multiply 53251
        Vector3 _4MultiplyByScalar;// 1:RaySampleWithSpacing-ext->0:MultiplyByScalar 53248
        Vector3 _5Add;// 1:RaySampleWithSpacing-ext->6:Add 53246
        _0RayDirection = RayDirection(_37SetRayDirection);
        _1Normalize = Normalize(_0RayDirection);
        _2IntAsFloat = IntAsFloat(x0);
        _3Multiply = Multiply(_2IntAsFloat, _35At);
        _4MultiplyByScalar = MultiplyByScalar(_1Normalize, _3Multiply);
        _5Add = Add(_38RayPosition, _4MultiplyByScalar);
        _5Add;
        };
    _40Map = Map(_0Range, _39Pass-through: function1);
    _41Map = Map(_40Map, (Vector3 x0) => 
      {
        IArray[Vector3] _0MeshVertices;// 0:MeshDeformPoints-ext->0:MeshVertices 53237
        Func[Vector3, Vector3] _1Pass-through: function1;// 0:Pass-through: function1 53234
        IArray[Vector3] _2Map;// 0:MeshDeformPoints-ext->1:Map 53236
        TriMesh _3SetMeshVertices;// 0:MeshDeformPoints-ext->4:SetMeshVertices 53235
        _0MeshVertices = MeshVertices(_23Pass-through: TriMesh);
        _1Pass-through: function1 = (Vector3 x0) => 
          {
            Vector3 _0Add;// 2:MeshOffset-ext->2:Add 53238
            _0Add = Add(x0, x0);
            _0Add;
            };
        _2Map = Map(_0MeshVertices, _1Pass-through: function1);
        _3SetMeshVertices = SetMeshVertices(_23Pass-through: TriMesh, _2Map);
        _3SetMeshVertices;
        });
    _42Indices = Indices(_41Map);
    _43Vector3 = Vector3(x offset, y offset, z offset);
    _44Pass-through: any = (TriMesh x0, Int32 x1) => 
      {
        IArray[Vector3] _0MeshVertices;// 0:MeshDeformPoints-ext->0:MeshVertices 53217
        Single _1IntAsFloat;// 5:MeshesOffsetBySingleVector-ext->6:IntAsFloat 53220
        Vector3 _2MultiplyByScalar;// 5:MeshesOffsetBySingleVector-ext->3:MultiplyByScalar 53219
        Func[Vector3, Vector3] _3Pass-through: function1;// 0:Pass-through: function1 53214
        IArray[Vector3] _4Map;// 0:MeshDeformPoints-ext->1:Map 53216
        TriMesh _5SetMeshVertices;// 0:MeshDeformPoints-ext->4:SetMeshVertices 53215
        _0MeshVertices = MeshVertices(x0);
        _1IntAsFloat = IntAsFloat(x1);
        _2MultiplyByScalar = MultiplyByScalar(_43Vector3, _1IntAsFloat);
        _3Pass-through: function1 = (Vector3 x0) => 
          {
            Vector3 _0Add;// 4:MeshOffset-ext->2:Add 53218
            _0Add = Add(x0, _2MultiplyByScalar);
            _0Add;
            };
        _4Map = Map(_0MeshVertices, _3Pass-through: function1);
        _5SetMeshVertices = SetMeshVertices(x0, _4Map);
        _5SetMeshVertices;
        };
    _45Combine = Combine(_41Map, _42Indices, _44Pass-through: any);
    _46CombineAllMeshes = CombineAllMeshes(_45Combine);
    _47MeshVertices = MeshVertices(_46CombineAllMeshes);
    _48MeshVertices = MeshVertices(mesh);
    _49BoxFromPoints = BoxFromPoints(_48MeshVertices);
    _50BoxMax = BoxMax(_49BoxFromPoints);
    _51MeshVertices = MeshVertices(_46CombineAllMeshes);
    _52BoxFromPoints = BoxFromPoints(_51MeshVertices);
    _53BoxMin = BoxMin(_52BoxFromPoints);
    _54Subtract = Subtract(_50BoxMax, _53BoxMin);
    _55Zero = Zero();
    _56GreaterThanOrEqual = GreaterThanOrEqual(axis, _55Zero);
    _57XAxis = XAxis();
    _58Unit = Unit(_57XAxis);
    _59YAxis = YAxis();
    _60Append = Append(_58Unit, _59YAxis);
    _61ZAxis = ZAxis();
    _62Append = Append(_60Append, _61ZAxis);
    _69Multiply = Multiply(_54Subtract, if (_56GreaterThanOrEqual)
        {
          Vector3 _63At;// 3:AxisChoose-ext->1:At 53176
          _63At = At(_62Append, axis);
          _63At;
          }else
        {
          Int32 _64One;// 10:PlusOne->1:One 53191
          Int32 _65Add;// 10:PlusOne->0:Add 53190
          Int32 _66Negative;// 3:AxisChoose-ext->11:Negative 53188
          Vector3 _67At;// 3:AxisChoose-ext->12:At 53187
          Vector3 _68Negate;// 3:AxisChoose-ext->13:Negate 53186
          _64One = One();
          _65Add = Add(axis, _64One);
          _66Negative = Negative(_65Add);
          _67At = At(_62Append, _66Negative);
          _68Negate = Negate(_67At);
          _68Negate;
          });
    _70Pass-through: function1 = (Vector3 x0) => 
      {
        Vector3 _0Add;// 7:MeshOffset-ext->2:Add 53168
        _0Add = Add(x0, _69Multiply);
        _0Add;
        };
    _71Map = Map(_47MeshVertices, _70Pass-through: function1);
    _72SetMeshVertices = SetMeshVertices(_46CombineAllMeshes, _71Map);
    _73MeshVertices = MeshVertices(_72SetMeshVertices);
    _74Pass-through: function1 = (Vector3 x0) => 
      {
        Vector3 _0Add;// 4:MeshOffset-ext->2:Add 53157
        _0Add = Add(x0, _43Vector3);
        _0Add;
        };
    _75Map = Map(_73MeshVertices, _74Pass-through: function1);
    _76SetMeshVertices = SetMeshVertices(_72SetMeshVertices, _75Map);
    _77CombineMeshes = CombineMeshes(mesh, _76SetMeshVertices);
    _77CombineMeshes;
    }