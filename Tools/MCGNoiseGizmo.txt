(InstanceState state, Vector3 minCorner, Vector3 maxCorner, Int32 numSubdivisions, Int32 numIterations, Single roughness, Int32 phase, Single frequency, Single scale, Single strengthX, Single strengthY, Single strengthZ, Int32 seed, Matrix shapeTransform) => 
  {
    IArray[Vector3] _0Unit;// 11:Array2->2:Unit 75039
    IArray[Vector3] _1Append;// 11:Array2->3:Append 75038
    BoundingBox _2BoxFromPoints;// 2:SplineBoxPrimitive->10:BoxFromPoints 75035
    IArray[Vector3] _3BoxCorners;// 2:SplineBoxPrimitive->4:BoxCorners 75034
    Int32 _4Constant;// 2:SplineBoxPrimitive->0:Constant 75040
    IArray[Vector3] _5Take;// 2:SplineBoxPrimitive->20:Take 75033
    IArray[IArray[Vector3]] _6Apply1;// 2:SplineBoxPrimitive->33:Apply1 74976
    IArray[IArray[IArray[Vector3]]] _7Unit;// 37:Array3->2:Unit 74975
    IArray[Vector3] _8Skip;// 2:SplineBoxPrimitive->21:Skip 75042
    IArray[IArray[Vector3]] _9Apply1;// 2:SplineBoxPrimitive->34:Apply1 75041
    IArray[IArray[IArray[Vector3]]] _10Append;// 37:Array3->3:Append 74974
    IArray[IArray[Vector3]] _11Combine;// 35:CombineToSubArray->2:Combine 75045
    IArray[IArray[IArray[Vector3]]] _12Append;// 37:Array3->6:Append 74973
    IArray[IArray[Vector3]] _13Flatten;// 2:SplineBoxPrimitive->38:Flatten 74969
    IArray[Single] _14RangeInclusiveFloat;// 2:SplineBoxPrimitive->9:RangeInclusiveFloat 75052
    Boolean _15False;// 2:SplineBoxPrimitive->6:False 75062
    IArray[Spline] _16Map;// 2:SplineBoxPrimitive->8:Map 74968
    Spline _17CombineSplines;// 2:SplineBoxPrimitive->7:CombineSplines 74967
    IArray[Vector3] _18SplineVerticesBuffer;// 3:SplineDeformKnots->10:SplineVerticesBuffer 74419
    Int32 _19Constant;// 72:NoiseDeformerNoiseInit-ext->0:Constant 74865
    Int32 _20One;// 126:PlusOne->1:One 74863
    Int32 _21Add;// 126:PlusOne->0:Add 74862
    IArray[Int32] _22Range;// 72:NoiseDeformerNoiseInit-ext->93:Range 74860
    Int32 _23Constant;// 72:NoiseDeformerNoiseInit-ext->0:Constant 74887
    IArray[Int32] _24Range;// 72:NoiseDeformerNoiseInit-ext->105:Range 74886
    IArray[IArray[Single]] _25Map;// 72:NoiseDeformerNoiseInit-ext->94:Map 74859
    IArray[IArray[Single]] _26Concatenate;// 72:NoiseDeformerNoiseInit-ext->70:Concatenate 74857
    IArray[Int32] _27Indices;// 72:NoiseDeformerNoiseInit-ext->2:Indices 74911
    Int32 _28Add;// 72:NoiseDeformerNoiseInit-ext->21:Add 74914
    Int32 _29Two;// 72:NoiseDeformerNoiseInit-ext->24:Two 74917
    Int32 _30Add;// 72:NoiseDeformerNoiseInit-ext->22:Add 74913
    IArray[Int32] _31Range;// 72:NoiseDeformerNoiseInit-ext->25:Range 74912
    Int32 _32Count;// 3:LastIndex->2:Count 74943
    Int32 _33One;// 3:MinusOne->2:One 74942
    Int32 _34Subtract;// 3:MinusOne->1:Subtract 74941
    Int32 _35At;// 35:Last->0:At 74938
    IArray[Int32] _36Map;// 72:NoiseDeformerNoiseInit-ext->20:Map 74929
    IArray[Int32] _37Aggregate;// 72:NoiseDeformerNoiseInit-ext->1:Aggregate 74909
    Int32 _38Two;// 72:NoiseDeformerNoiseInit-ext->67:Two 74957
    Int32 _39Add;// 72:NoiseDeformerNoiseInit-ext->66:Add 74955
    IArray[Int32] _40Range;// 72:NoiseDeformerNoiseInit-ext->69:Range 74954
    IArray[Int32] _41Map;// 72:NoiseDeformerNoiseInit-ext->82:Map 74952
    IArray[Int32] _42Map;// 79:SelectByIndex->2:Map 74962
    IArray[Tuple[Int32, Int32]] _43Combine;// 86:ZipToTuple->0:Combine 74950
    IArray[Int32] _44SetValues;// 72:NoiseDeformerNoiseInit-ext->76:SetValues 74906
    Tuple[IArray[IArray[Single]], IArray[Int32]] _45Pair;// 72:NoiseDeformerNoiseInit-ext->87:Pair 74856
    Func[Vector3, Vector3] _46Bind2of2;// 0:NoiseSpline-ext->9:Bind2of2 74424
    IArray[Vector3] _47Map;// 3:SplineDeformKnots->15:Map 74418
    IArray[Int32] _48SplineSegmentIndices;// 3:SplineDeformKnots->11:SplineSegmentIndices 74420
    IArray[Vector3] _49SplineTangentsBuffer;// 3:SplineDeformKnots->12:SplineTangentsBuffer 74421
    IArray[Int32] _50SplineTangentIndices;// 3:SplineDeformKnots->13:SplineTangentIndices 74422
    IArray[Int32] _51SplineSegmentTypes;// 3:SplineDeformKnots->14:SplineSegmentTypes 74423
    Spline _52CreateSplineFromBuffers;// 3:SplineDeformKnots->9:CreateSplineFromBuffers 74417
    Spline _53IgnoreSecond;// 17:IgnoreSecond 74405
    _0Unit = Unit(minCorner);
    _1Append = Append(_0Unit, maxCorner);
    _2BoxFromPoints = BoxFromPoints(_1Append);
    _3BoxCorners = BoxCorners(_2BoxFromPoints);
    _4Constant = 4;
    _5Take = Take(_3BoxCorners, _4Constant);
    _6Apply1 = Apply1((IArray[Vector3] x0) => 
      {
        IArray[Vector3] _0Map;// 42:VectorArrayType-ext->1:Map 75016
        IArray[Vector3] _1IgnoreSecond;// 42:VectorArrayType-ext->2:IgnoreSecond 75015
        IArray[Int32] _2Indices;// 25:ArraySlidingWindow->8:Indices 74985
        Int32 _3Two;// 2:SplineBoxPrimitive->31:Two 75018
        IArray[IArray[Int32]] _4Map;// 25:ArraySlidingWindow->3:Map 74984
        IArray[IArray[Int32]] _5Filter;// 25:ArraySlidingWindow->16:Filter 74982
        IArray[IArray[Vector3]] _6Map;// 25:ArraySlidingWindow->36:Map 74980
        Int32 _7Count;// 3:LastIndex->2:Count 75029
        Int32 _8One;// 3:MinusOne->2:One 75028
        Int32 _9Subtract;// 3:MinusOne->1:Subtract 75027
        Vector3 _10At;// 29:Last->0:At 75024
        IArray[Vector3] _11Unit;// 27:Array2->2:Unit 75022
        Int32 _12Zero;// 28:First->2:Zero 75032
        Vector3 _13At;// 28:First->0:At 75031
        IArray[Vector3] _14Append;// 27:Array2->3:Append 75021
        IArray[IArray[Vector3]] _15Append;// 2:SplineBoxPrimitive->30:Append 74977
        _0Map = Map(x0, (Vector3 x0) => 
          {
            x0;
            });
        _1IgnoreSecond = IgnoreSecond(x0, () => 
          {
            _0Map;
            });
        _2Indices = Indices(_1IgnoreSecond);
        _3Two = Two();
        _4Map = Map(_2Indices, (Int32 x0) => 
          {
            IArray[Int32] _0GenerateN;// 25:ArraySlidingWindow->14:GenerateN 74989
            Int32 _1Count;// 25:ArraySlidingWindow->24:Count 74997
            Int32 _2Zero;// 25:ArraySlidingWindow->23:Zero 74999
            IArray[Int32] _3Filter;// 25:ArraySlidingWindow->15:Filter 74987
            _0GenerateN = GenerateN(x0, _3Two, (Int32 x0) => 
              {
                Int32 _0One;// 2:PlusOne->1:One 74993
                Int32 _1Add;// 2:PlusOne->0:Add 74992
                _0One = One();
                _1Add = Add(x0, _0One);
                _1Add;
                });
            _1Count = Count(_1IgnoreSecond);
            _2Zero = Zero();
            _3Filter = Filter(_0GenerateN, (Int32 x0) => 
              {
                Boolean _0LessThan;// 25:ArraySlidingWindow->20:LessThan 74995
                Boolean _1GreaterThanOrEqual;// 25:ArraySlidingWindow->22:GreaterThanOrEqual 74998
                Boolean _2AndAlso;// 25:ArraySlidingWindow->21:AndAlso 74994
                _0LessThan = LessThan(x0, _1Count);
                _1GreaterThanOrEqual = GreaterThanOrEqual(x0, _2Zero);
                _2AndAlso = AndAlso(_0LessThan, _1GreaterThanOrEqual);
                _2AndAlso;
                });
            _3Filter;
            });
        _5Filter = Filter(_4Map, (IArray[Int32] x0) => 
          {
            IArray[Int32] _0Map;// 39:Int32ArrayType->2:Map 75004
            IArray[Int32] _1IgnoreSecond;// 39:Int32ArrayType->1:IgnoreSecond 75003
            Int32 _2Count;// 25:ArraySlidingWindow->25:Count 75001
            Boolean _3Equal;// 25:ArraySlidingWindow->30:Equal 75000
            _0Map = Map(x0, (Int32 x0) => 
              {
                x0;
                });
            _1IgnoreSecond = IgnoreSecond(x0, () => 
              {
                _0Map;
                });
            _2Count = Count(_1IgnoreSecond);
            _3Equal = Equal(_2Count, _3Two);
            _3Equal;
            });
        _6Map = Map(_5Filter, (IArray[Int32] x0) => 
          {
            IArray[Vector3] _0Map;// 38:SelectByIndex->2:Map 75010
            _0Map = Map(x0, (Int32 x0) => 
              {
                Vector3 _0At;// 38:SelectByIndex->3:At 75011
                _0At = At(_1IgnoreSecond, x0);
                _0At;
                });
            _0Map;
            });
        _7Count = Count(_1IgnoreSecond);
        _8One = One();
        _9Subtract = Subtract(_7Count, _8One);
        _10At = At(_1IgnoreSecond, _9Subtract);
        _11Unit = Unit(_10At);
        _12Zero = Zero();
        _13At = At(_1IgnoreSecond, _12Zero);
        _14Append = Append(_11Unit, _13At);
        _15Append = Append(_6Map, _14Append);
        _15Append;
        }, _5Take);
    _7Unit = Unit(_6Apply1);
    _8Skip = Skip(_3BoxCorners, _4Constant);
    _9Apply1 = Apply1((IArray[Vector3] x0) => 
      {
        IArray[Vector3] _0Map;// 42:VectorArrayType-ext->1:Map 75016
        IArray[Vector3] _1IgnoreSecond;// 42:VectorArrayType-ext->2:IgnoreSecond 75015
        IArray[Int32] _2Indices;// 25:ArraySlidingWindow->8:Indices 74985
        Int32 _3Two;// 2:SplineBoxPrimitive->31:Two 75018
        IArray[IArray[Int32]] _4Map;// 25:ArraySlidingWindow->3:Map 74984
        IArray[IArray[Int32]] _5Filter;// 25:ArraySlidingWindow->16:Filter 74982
        IArray[IArray[Vector3]] _6Map;// 25:ArraySlidingWindow->36:Map 74980
        Int32 _7Count;// 3:LastIndex->2:Count 75029
        Int32 _8One;// 3:MinusOne->2:One 75028
        Int32 _9Subtract;// 3:MinusOne->1:Subtract 75027
        Vector3 _10At;// 29:Last->0:At 75024
        IArray[Vector3] _11Unit;// 27:Array2->2:Unit 75022
        Int32 _12Zero;// 28:First->2:Zero 75032
        Vector3 _13At;// 28:First->0:At 75031
        IArray[Vector3] _14Append;// 27:Array2->3:Append 75021
        IArray[IArray[Vector3]] _15Append;// 2:SplineBoxPrimitive->30:Append 74977
        _0Map = Map(x0, (Vector3 x0) => 
          {
            x0;
            });
        _1IgnoreSecond = IgnoreSecond(x0, () => 
          {
            _0Map;
            });
        _2Indices = Indices(_1IgnoreSecond);
        _3Two = Two();
        _4Map = Map(_2Indices, (Int32 x0) => 
          {
            IArray[Int32] _0GenerateN;// 25:ArraySlidingWindow->14:GenerateN 74989
            Int32 _1Count;// 25:ArraySlidingWindow->24:Count 74997
            Int32 _2Zero;// 25:ArraySlidingWindow->23:Zero 74999
            IArray[Int32] _3Filter;// 25:ArraySlidingWindow->15:Filter 74987
            _0GenerateN = GenerateN(x0, _3Two, (Int32 x0) => 
              {
                Int32 _0One;// 2:PlusOne->1:One 74993
                Int32 _1Add;// 2:PlusOne->0:Add 74992
                _0One = One();
                _1Add = Add(x0, _0One);
                _1Add;
                });
            _1Count = Count(_1IgnoreSecond);
            _2Zero = Zero();
            _3Filter = Filter(_0GenerateN, (Int32 x0) => 
              {
                Boolean _0LessThan;// 25:ArraySlidingWindow->20:LessThan 74995
                Boolean _1GreaterThanOrEqual;// 25:ArraySlidingWindow->22:GreaterThanOrEqual 74998
                Boolean _2AndAlso;// 25:ArraySlidingWindow->21:AndAlso 74994
                _0LessThan = LessThan(x0, _1Count);
                _1GreaterThanOrEqual = GreaterThanOrEqual(x0, _2Zero);
                _2AndAlso = AndAlso(_0LessThan, _1GreaterThanOrEqual);
                _2AndAlso;
                });
            _3Filter;
            });
        _5Filter = Filter(_4Map, (IArray[Int32] x0) => 
          {
            IArray[Int32] _0Map;// 39:Int32ArrayType->2:Map 75004
            IArray[Int32] _1IgnoreSecond;// 39:Int32ArrayType->1:IgnoreSecond 75003
            Int32 _2Count;// 25:ArraySlidingWindow->25:Count 75001
            Boolean _3Equal;// 25:ArraySlidingWindow->30:Equal 75000
            _0Map = Map(x0, (Int32 x0) => 
              {
                x0;
                });
            _1IgnoreSecond = IgnoreSecond(x0, () => 
              {
                _0Map;
                });
            _2Count = Count(_1IgnoreSecond);
            _3Equal = Equal(_2Count, _3Two);
            _3Equal;
            });
        _6Map = Map(_5Filter, (IArray[Int32] x0) => 
          {
            IArray[Vector3] _0Map;// 38:SelectByIndex->2:Map 75010
            _0Map = Map(x0, (Int32 x0) => 
              {
                Vector3 _0At;// 38:SelectByIndex->3:At 75011
                _0At = At(_1IgnoreSecond, x0);
                _0At;
                });
            _0Map;
            });
        _7Count = Count(_1IgnoreSecond);
        _8One = One();
        _9Subtract = Subtract(_7Count, _8One);
        _10At = At(_1IgnoreSecond, _9Subtract);
        _11Unit = Unit(_10At);
        _12Zero = Zero();
        _13At = At(_1IgnoreSecond, _12Zero);
        _14Append = Append(_11Unit, _13At);
        _15Append = Append(_6Map, _14Append);
        _15Append;
        }, _8Skip);
    _10Append = Append(_7Unit, _9Apply1);
    _11Combine = Combine(_5Take, _8Skip, (Vector3 x0, Vector3 x1) => 
      {
        IArray[Vector3] _0Unit;// 3:Array2->2:Unit 75049
        IArray[Vector3] _1Append;// 3:Array2->3:Append 75048
        _0Unit = Unit(x0);
        _1Append = Append(_0Unit, x1);
        _1Append;
        });
    _12Append = Append(_10Append, _11Combine);
    _13Flatten = Flatten(_12Append);
    _14RangeInclusiveFloat = RangeInclusiveFloat(numSubdivisions);
    _15False = False();
    _16Map = Map(_13Flatten, (IArray[Vector3] x0) => 
      {
        Func[Single, Vector3] _0Bind1of2;// 2:SplineBoxPrimitive->15:Bind1of2 75053
        IArray[Vector3] _1Map;// 2:SplineBoxPrimitive->13:Map 75051
        Spline _2CreateSplineFromKnots;// 2:SplineBoxPrimitive->5:CreateSplineFromKnots 75050
        _0Bind1of2 = Bind1of2((IArray[Vector3] x0, Single x1) => 
          {
            Int32 _0Zero;// 18:First->2:Zero 75057
            Vector3 _1At;// 18:First->0:At 75056
            Int32 _2One;// 19:Second->2:One 75061
            Vector3 _3At;// 19:Second->0:At 75060
            Vector3 _4Lerp;// 2:SplineBoxPrimitive->16:Lerp 75054
            _0Zero = Zero();
            _1At = At(x0, _0Zero);
            _2One = One();
            _3At = At(x0, _2One);
            _4Lerp = Lerp(_1At, _3At, x1);
            _4Lerp;
            }, x0);
        _1Map = Map(_14RangeInclusiveFloat, _0Bind1of2);
        _2CreateSplineFromKnots = CreateSplineFromKnots(_1Map, _15False);
        _2CreateSplineFromKnots;
        });
    _17CombineSplines = CombineSplines(_16Map);
    _18SplineVerticesBuffer = SplineVerticesBuffer(_17CombineSplines);
    _19Constant = 256;
    _20One = One();
    _21Add = Add(_19Constant, _20One);
    _22Range = Range(_21Add);
    _23Constant = 3;
    _24Range = Range(_23Constant);
    _25Map = Map(_22Range, (Int32 x0) => 
      {
        Func[Int32, Single] _0Bind1of2;// 72:NoiseDeformerNoiseInit-ext->116:Bind1of2 74888
        IArray[Single] _1Map;// 72:NoiseDeformerNoiseInit-ext->108:Map 74885
        Int32 _2Zero;// 118:ArrayToVector3->2:Zero 74880
        Single _3At;// 118:ArrayToVector3->1:At 74879
        Int32 _4One;// 118:ArrayToVector3->3:One 74882
        Single _5At;// 118:ArrayToVector3->5:At 74881
        Int32 _6Two;// 118:ArrayToVector3->4:Two 74884
        Single _7At;// 118:ArrayToVector3->6:At 74883
        Vector3 _8Vector3;// 118:ArrayToVector3->7:Vector3 74878
        Vector3 _9Normalize;// 72:NoiseDeformerNoiseInit-ext->120:Normalize 74876
        Single _10X;// 117:VectorToArray->1:X 74873
        IArray[Single] _11Unit;// 4:Array3->2:Unit 74872
        Single _12Y;// 117:VectorToArray->2:Y 74874
        IArray[Single] _13Append;// 4:Array3->3:Append 74871
        Single _14Z;// 117:VectorToArray->3:Z 74875
        IArray[Single] _15Append;// 4:Array3->6:Append 74870
        _0Bind1of2 = Bind1of2((Int32 x0, Int32 x1) => 
          {
            Int32 _0Count;// 72:NoiseDeformerNoiseInit-ext->114:Count 74901
            Int32 _1Multiply;// 72:NoiseDeformerNoiseInit-ext->115:Multiply 74900
            Int32 _2Add;// 72:NoiseDeformerNoiseInit-ext->113:Add 74898
            Int32 _3RandInt;// 72:NoiseDeformerNoiseInit-ext->97:RandInt 74896
            Single _4AsFloat;// 72:NoiseDeformerNoiseInit-ext->121:AsFloat 74895
            Single _5Abs;// 72:NoiseDeformerNoiseInit-ext->123:Abs 74894
            Int32 _6AsInt;// 72:NoiseDeformerNoiseInit-ext->122:AsInt 74893
            Int32 _7Add;// 72:NoiseDeformerNoiseInit-ext->99:Add 74903
            Int32 _8Modulo;// 72:NoiseDeformerNoiseInit-ext->98:Modulo 74892
            Int32 _9Subtract;// 72:NoiseDeformerNoiseInit-ext->104:Subtract 74891
            Single _10AsFloat;// 72:NoiseDeformerNoiseInit-ext->100:AsFloat 74890
            Single _11AsFloat;// 72:NoiseDeformerNoiseInit-ext->103:AsFloat 74905
            Single _12Divide;// 72:NoiseDeformerNoiseInit-ext->101:Divide 74889
            _0Count = Count(_22Range);
            _1Multiply = Multiply(_0Count, x1);
            _2Add = Add(x0, _1Multiply);
            _3RandInt = RandInt(seed, _2Add);
            _4AsFloat = AsFloat(_3RandInt);
            _5Abs = Abs(_4AsFloat);
            _6AsInt = AsInt(_5Abs);
            _7Add = Add(_19Constant, _19Constant);
            _8Modulo = Modulo(_6AsInt, _7Add);
            _9Subtract = Subtract(_8Modulo, _19Constant);
            _10AsFloat = AsFloat(_9Subtract);
            _11AsFloat = AsFloat(_19Constant);
            _12Divide = Divide(_10AsFloat, _11AsFloat);
            _12Divide;
            }, x0);
        _1Map = Map(_24Range, _0Bind1of2);
        _2Zero = Zero();
        _3At = At(_1Map, _2Zero);
        _4One = One();
        _5At = At(_1Map, _4One);
        _6Two = Two();
        _7At = At(_1Map, _6Two);
        _8Vector3 = Vector3(_3At, _5At, _7At);
        _9Normalize = Normalize(_8Vector3);
        _10X = X(_9Normalize);
        _11Unit = Unit(_10X);
        _12Y = Y(_9Normalize);
        _13Append = Append(_11Unit, _12Y);
        _14Z = Z(_9Normalize);
        _15Append = Append(_13Append, _14Z);
        _15Append;
        });
    _26Concatenate = Concatenate(_25Map, _25Map);
    _27Indices = Indices(_25Map);
    _28Add = Add(_19Constant, _19Constant);
    _29Two = Two();
    _30Add = Add(_28Add, _29Two);
    _31Range = Range(_30Add);
    _32Count = Count(_27Indices);
    _33One = One();
    _34Subtract = Subtract(_32Count, _33One);
    _35At = At(_27Indices, _34Subtract);
    _36Map = Map(_27Indices, (Int32 x0) => 
      {
        Int32 _0Add;// 72:NoiseDeformerNoiseInit-ext->36:Add 74936
        Int32 _1RandInt;// 72:NoiseDeformerNoiseInit-ext->34:RandInt 74934
        Single _2AsFloat;// 72:NoiseDeformerNoiseInit-ext->92:AsFloat 74933
        Single _3Abs;// 72:NoiseDeformerNoiseInit-ext->90:Abs 74932
        Int32 _4AsInt;// 72:NoiseDeformerNoiseInit-ext->91:AsInt 74931
        Int32 _5Modulo;// 72:NoiseDeformerNoiseInit-ext->40:Modulo 74930
        _0Add = Add(_35At, x0);
        _1RandInt = RandInt(seed, _0Add);
        _2AsFloat = AsFloat(_1RandInt);
        _3Abs = Abs(_2AsFloat);
        _4AsInt = AsInt(_3Abs);
        _5Modulo = Modulo(_4AsInt, _19Constant);
        _5Modulo;
        });
    _37Aggregate = Aggregate(_27Indices, _31Range, (IArray[Int32] x0, Int32 x1) => 
      {
        Int32 _0At;// 72:NoiseDeformerNoiseInit-ext->52:At 74927
        Int32 _1At;// 72:NoiseDeformerNoiseInit-ext->60:At 74926
        Tuple[Int32, Int32] _2Pair;// 72:NoiseDeformerNoiseInit-ext->57:Pair 74924
        IArray[Tuple[Int32, Int32]] _3Unit;// 59:Array2->2:Unit 74923
        Int32 _4At;// 72:NoiseDeformerNoiseInit-ext->30:At 74947
        Tuple[Int32, Int32] _5Pair;// 72:NoiseDeformerNoiseInit-ext->55:Pair 74946
        IArray[Tuple[Int32, Int32]] _6Append;// 59:Array2->3:Append 74922
        IArray[Int32] _7SetValues;// 72:NoiseDeformerNoiseInit-ext->54:SetValues 74918
        _0At = At(_36Map, x1);
        _1At = At(x0, _0At);
        _2Pair = Pair(x1, _1At);
        _3Unit = Unit(_2Pair);
        _4At = At(x0, x1);
        _5Pair = Pair(_0At, _4At);
        _6Append = Append(_3Unit, _5Pair);
        _7SetValues = SetValues(x0, _6Append);
        _7SetValues;
        });
    _38Two = Two();
    _39Add = Add(_19Constant, _38Two);
    _40Range = Range(_39Add);
    _41Map = Map(_40Range, (Int32 x0) => 
      {
        Int32 _0Add;// 72:NoiseDeformerNoiseInit-ext->83:Add 74958
        _0Add = Add(x0, _19Constant);
        _0Add;
        });
    _42Map = Map(_40Range, (Int32 x0) => 
      {
        Int32 _0At;// 79:SelectByIndex->3:At 74963
        _0At = At(_37Aggregate, x0);
        _0At;
        });
    _43Combine = Combine(_41Map, _42Map, (Int32 x0, Int32 x1) => 
      {
        Tuple[Int32, Int32] _0Pair;// 86:ZipToTuple->4:Pair 74951
        _0Pair = Pair(x0, x1);
        _0Pair;
        });
    _44SetValues = SetValues(_37Aggregate, _43Combine);
    _45Pair = Pair(_26Concatenate, _44SetValues);
    _46Bind2of2 = Bind2of2((Vector3 x0, Tuple[IArray[IArray[Single]], IArray[Int32]] x1) => 
      {
        Matrix _0MatrixIdentity;// 29:MatrixIdentity 75066
        Matrix _1InvertMatrix;// 10:NoiseDeformer-ext->79:InvertMatrix 74439
        Vector3 _2Transform;// 10:NoiseDeformer-ext->78:Transform 74438
        Single _3FloatOne;// 10:NoiseDeformer-ext->40:FloatOne 74846
        Single _4Divide;// 10:NoiseDeformer-ext->41:Divide 74845
        Vector3 _5MultiplyByScalar;// 10:NoiseDeformer-ext->16:MultiplyByScalar 74843
        Vector3 _6Constant;// 10:NoiseDeformer-ext->0:Constant 74847
        Vector3 _7Add;// 10:NoiseDeformer-ext->18:Add 74842
        Single _8Y;// 10:NoiseDeformer-ext->6:Y 74840
        Single _9Z;// 10:NoiseDeformer-ext->7:Z 74848
        Single _10Apply2;// 10:NoiseDeformer-ext->4:Apply2 74443
        Single _11X;// 10:NoiseDeformer-ext->5:X 74851
        Single _12Apply2;// 10:NoiseDeformer-ext->2:Apply2 74850
        Single _13Apply2;// 10:NoiseDeformer-ext->15:Apply2 74853
        Vector3 _14Vector3;// 10:NoiseDeformer-ext->14:Vector3 74441
        Vector3 _15Vector3;// 24:Vector3 75072
        Vector3 _16Multiply;// 10:NoiseDeformer-ext->22:Multiply 74440
        Vector3 _17Add;// 10:NoiseDeformer-ext->25:Add 74435
        Vector3 _18Transform;// 10:NoiseDeformer-ext->83:Transform 74434
        _0MatrixIdentity = MatrixIdentity();
        _1InvertMatrix = InvertMatrix(_0MatrixIdentity);
        _2Transform = Transform(x0, _1InvertMatrix);
        _3FloatOne = FloatOne();
        _4Divide = Divide(_3FloatOne, scale);
        _5MultiplyByScalar = MultiplyByScalar(_2Transform, _4Divide);
        _6Constant = new Microsoft.Xna.Framework.Vector3(0.5, 0.5, 0.5);
        _7Add = Add(_5MultiplyByScalar, _6Constant);
        _8Y = Y(_7Add);
        _9Z = Z(_7Add);
        _10Apply2 = Apply2((Single x0, Single x1) => 
          {
            Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 74464
            IArray[Single] _1Unit;// 37:Array2->2:Unit 74463
            Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 74465
            IArray[Single] _3Append;// 37:Array2->3:Append 74462
            Single _4AsFloat;// 10:NoiseDeformer-ext->13:AsFloat 74825
            Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 74466
            Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 74480
            Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 74481
            Single _8Constant;// 10:NoiseDeformer-ext->0:Constant 74826
            IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 74479
            Single _10FloatOne;// 10:NoiseDeformer-ext->46:FloatOne 74828
            Single _11Subtract;// 10:NoiseDeformer-ext->3:Subtract 74827
            Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 74488
            IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 74478
            Single _14AsFloat;// 10:NoiseDeformer-ext->43:AsFloat 74833
            Single _15Constant;// 10:NoiseDeformer-ext->0:Constant 74836
            Single _16Multiply;// 10:NoiseDeformer-ext->30:Multiply 74835
            Single _17Constant;// 10:NoiseDeformer-ext->0:Constant 74838
            Single _18Constant;// 10:NoiseDeformer-ext->0:Constant 74839
            Single _19Divide;// 10:NoiseDeformer-ext->31:Divide 74837
            Single _20Multiply;// 10:NoiseDeformer-ext->39:Multiply 74834
            Single _21Multiply;// 10:NoiseDeformer-ext->38:Multiply 74832
            Vector3 _22Vector3;// 10:NoiseDeformer-ext->0:Vector3 74829
            IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 74813
            IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 74817
            Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 74824
            IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 74459
            Int32 _27Count;// 3:LastIndex->2:Count 74458
            Int32 _28One;// 3:MinusOne->2:One 74457
            Int32 _29Subtract;// 3:MinusOne->1:Subtract 74456
            IArray[Single] _30At;// 68:Last->0:At 74453
            Int32 _31Zero;// 69:First->2:Zero 74451
            Single _32At;// 69:First->0:At 74450
            _0FloatZero = FloatZero();
            _1Unit = Unit(_0FloatZero);
            _2FloatZero = FloatZero();
            _3Append = Append(_1Unit, _2FloatZero);
            _4AsFloat = AsFloat(numIterations);
            _5AsInt = AsInt(_4AsFloat);
            _6FloatOne = FloatOne();
            _7AsInt = AsInt(_4AsFloat);
            _8Constant = 2;
            _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
              {
                Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 74483
                _0Multiply = Multiply(_8Constant, x0);
                _0Multiply;
                });
            _10FloatOne = FloatOne();
            _11Subtract = Subtract(_10FloatOne, roughness);
            _12NegativeFloat = NegativeFloat(_11Subtract);
            _13Map = Map(_9GenerateN, (Single x0) => 
              {
                Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 74486
                _0Pow = Pow(x0, _12NegativeFloat);
                _0Pow;
                });
            _14AsFloat = AsFloat(phase);
            _15Constant = 0.005;
            _16Multiply = Multiply(frequency, _15Constant);
            _17Constant = 1200;
            _18Constant = 4800;
            _19Divide = Divide(_17Constant, _18Constant);
            _20Multiply = Multiply(_16Multiply, _19Divide);
            _21Multiply = Multiply(_14AsFloat, _20Multiply);
            _22Vector3 = Vector3(x0, x1, _21Multiply);
            _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
              {
                Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 74815
                _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                _0MultiplyByScalar;
                });
            _24PairItem1 = PairItem1(x1);
            _25FloatOne = FloatOne();
            _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
              {
                Int32 _0One;// 49:Second->2:One 74493
                Single _1At;// 49:Second->0:At 74492
                Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 74490
                Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 74476
                Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 74531
                Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 74811
                Single _6X;// 2:VectorAsArray->1:X 74542
                IArray[Single] _7Unit;// 4:Array3->2:Unit 74541
                Single _8Y;// 2:VectorAsArray->2:Y 74543
                IArray[Single] _9Append;// 4:Array3->3:Append 74540
                Single _10Z;// 2:VectorAsArray->3:Z 74544
                IArray[Single] _11Append;// 4:Array3->6:Append 74539
                Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 74557
                Single _13At;// 1:VectorComponent-ext->3:At 74534
                Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 74530
                Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 74529
                Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 74545
                Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 74528
                Int32 _18One;// 13:PlusOne->1:One 74549
                Int32 _19Add;// 13:PlusOne->0:Add 74548
                Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 74546
                Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 74527
                Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 74554
                Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 74553
                Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 74551
                Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 74556
                Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 74555
                Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 74550
                Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 74526
                Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 74523
                Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 74522
                IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 74818
                Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 74568
                Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 74567
                Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 74566
                Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 74578
                Single _36X;// 2:VectorAsArray->1:X 74589
                IArray[Single] _37Unit;// 4:Array3->2:Unit 74588
                Single _38Y;// 2:VectorAsArray->2:Y 74590
                IArray[Single] _39Append;// 4:Array3->3:Append 74587
                Single _40Z;// 2:VectorAsArray->3:Z 74591
                IArray[Single] _41Append;// 4:Array3->6:Append 74586
                Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 74604
                Single _43At;// 1:VectorComponent-ext->3:At 74581
                Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 74577
                Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 74576
                Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 74592
                Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 74575
                Int32 _48One;// 13:PlusOne->1:One 74596
                Int32 _49Add;// 13:PlusOne->0:Add 74595
                Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 74593
                Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 74574
                Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 74601
                Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 74600
                Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 74598
                Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 74603
                Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 74602
                Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 74597
                Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 74573
                Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 74570
                Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 74569
                Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 74564
                Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 74562
                Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 74614
                Single _64X;// 2:VectorAsArray->1:X 74625
                IArray[Single] _65Unit;// 4:Array3->2:Unit 74624
                Single _66Y;// 2:VectorAsArray->2:Y 74626
                IArray[Single] _67Append;// 4:Array3->3:Append 74623
                Single _68Z;// 2:VectorAsArray->3:Z 74627
                IArray[Single] _69Append;// 4:Array3->6:Append 74622
                Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 74640
                Single _71At;// 1:VectorComponent-ext->3:At 74617
                Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 74613
                Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 74612
                Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 74628
                Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 74611
                Int32 _76One;// 13:PlusOne->1:One 74632
                Int32 _77Add;// 13:PlusOne->0:Add 74631
                Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 74629
                Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 74610
                Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 74637
                Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 74636
                Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 74634
                Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 74639
                Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 74638
                Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 74633
                Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 74609
                Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 74606
                Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 74605
                Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 74560
                IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 74558
                Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 74515
                Single _92At;// 62:NoiseDeformerAt3-ext->4:At 74514
                Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 74513
                Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 74642
                Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 74641
                Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 74518
                Single _97At;// 62:NoiseDeformerAt3-ext->7:At 74517
                Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 74516
                Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 74512
                Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 74644
                Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 74643
                Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 74521
                Single _103At;// 62:NoiseDeformerAt3-ext->10:At 74520
                Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 74519
                Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 74511
                Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 74660
                Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 74668
                Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 74667
                Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 74665
                Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 74664
                Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 74662
                IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 74661
                Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 74653
                Single _114At;// 66:NoiseDeformerAt3-ext->4:At 74652
                Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 74651
                Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 74656
                Single _117At;// 66:NoiseDeformerAt3-ext->7:At 74655
                Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 74654
                Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 74650
                Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 74659
                Single _121At;// 66:NoiseDeformerAt3-ext->10:At 74658
                Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 74657
                Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 74649
                Single _124Constant;// 42:NoiseDeformerSCurve->0:Constant 74672
                Single _125Constant;// 42:NoiseDeformerSCurve->0:Constant 74674
                Single _126Multiply;// 42:NoiseDeformerSCurve->41:Multiply 74673
                Single _127Subtract;// 42:NoiseDeformerSCurve->39:Subtract 74671
                Single _128Multiply;// 42:NoiseDeformerSCurve->35:Multiply 74676
                Single _129Multiply;// 42:NoiseDeformerSCurve->37:Multiply 74670
                Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 74506
                Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 74698
                Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 74697
                Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 74696
                Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 74694
                IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 74693
                Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 74686
                Single _137At;// 72:NoiseDeformerAt3-ext->4:At 74685
                Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 74684
                Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 74699
                Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 74689
                Single _141At;// 72:NoiseDeformerAt3-ext->7:At 74688
                Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 74687
                Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 74683
                Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 74692
                Single _145At;// 72:NoiseDeformerAt3-ext->10:At 74691
                Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 74690
                Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 74682
                Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 74719
                Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 74718
                Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 74716
                IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 74715
                Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 74708
                Single _153At;// 75:NoiseDeformerAt3-ext->4:At 74707
                Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 74706
                Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 74711
                Single _156At;// 75:NoiseDeformerAt3-ext->7:At 74710
                Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 74709
                Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 74705
                Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 74714
                Single _160At;// 75:NoiseDeformerAt3-ext->10:At 74713
                Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 74712
                Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 74704
                Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 74677
                Single _164Constant;// 56:NoiseDeformerSCurve->0:Constant 74723
                Single _165Constant;// 56:NoiseDeformerSCurve->0:Constant 74725
                Single _166Multiply;// 56:NoiseDeformerSCurve->41:Multiply 74724
                Single _167Subtract;// 56:NoiseDeformerSCurve->39:Subtract 74722
                Single _168Multiply;// 56:NoiseDeformerSCurve->35:Multiply 74727
                Single _169Multiply;// 56:NoiseDeformerSCurve->37:Multiply 74721
                Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 74505
                Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 74747
                Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 74746
                IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 74745
                Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 74738
                Single _175At;// 82:NoiseDeformerAt3-ext->4:At 74737
                Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 74736
                Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 74741
                Single _178At;// 82:NoiseDeformerAt3-ext->7:At 74740
                Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 74739
                Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 74735
                Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 74748
                Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 74744
                Single _183At;// 82:NoiseDeformerAt3-ext->10:At 74743
                Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 74742
                Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 74734
                Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 74765
                IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 74764
                Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 74757
                Single _189At;// 86:NoiseDeformerAt3-ext->4:At 74756
                Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 74755
                Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 74760
                Single _192At;// 86:NoiseDeformerAt3-ext->7:At 74759
                Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 74758
                Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 74754
                Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 74763
                Single _196At;// 86:NoiseDeformerAt3-ext->10:At 74762
                Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 74761
                Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 74753
                Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 74729
                Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 74783
                IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 74782
                Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 74775
                Single _203At;// 92:NoiseDeformerAt3-ext->4:At 74774
                Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 74773
                Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 74778
                Single _206At;// 92:NoiseDeformerAt3-ext->7:At 74777
                Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 74776
                Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 74772
                Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 74781
                Single _210At;// 92:NoiseDeformerAt3-ext->10:At 74780
                Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 74779
                Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 74771
                Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 74800
                IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 74799
                Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 74792
                Single _216At;// 96:NoiseDeformerAt3-ext->4:At 74791
                Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 74790
                Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 74795
                Single _219At;// 96:NoiseDeformerAt3-ext->7:At 74794
                Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 74793
                Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 74789
                Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 74798
                Single _223At;// 96:NoiseDeformerAt3-ext->10:At 74797
                Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 74796
                Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 74788
                Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 74766
                Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 74728
                Single _228Constant;// 58:NoiseDeformerSCurve->0:Constant 74804
                Single _229Constant;// 58:NoiseDeformerSCurve->0:Constant 74806
                Single _230Multiply;// 58:NoiseDeformerSCurve->41:Multiply 74805
                Single _231Subtract;// 58:NoiseDeformerSCurve->39:Subtract 74803
                Single _232Multiply;// 58:NoiseDeformerSCurve->35:Multiply 74808
                Single _233Multiply;// 58:NoiseDeformerSCurve->37:Multiply 74802
                Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 74504
                Single _235NaN;// 118:FloatIsNaN->1:NaN 74502
                Int32 _236Compare;// 118:FloatIsNaN->2:Compare 74501
                Int32 _237Zero;// 118:FloatIsNaN->4:Zero 74503
                Boolean _238Equal;// 118:FloatIsNaN->3:Equal 74500
                Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 74474
                Int32 _241Zero;// 48:First->2:Zero 74821
                Single _242At;// 48:First->0:At 74820
                Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 74473
                IArray[Single] _244Unit;// 43:Array2->2:Unit 74471
                Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 74823
                IArray[Single] _246Append;// 43:Array2->3:Append 74470
                _0One = One();
                _1At = At(x0, _0One);
                _2AsInt = AsInt(_1At);
                _3At = At(_13Map, _2AsInt);
                _4Constant = 4096;
                _5At = At(_23GenerateN, _2AsInt);
                _6X = X(_5At);
                _7Unit = Unit(_6X);
                _8Y = Y(_5At);
                _9Append = Append(_7Unit, _8Y);
                _10Z = Z(_5At);
                _11Append = Append(_9Append, _10Z);
                _12Zero = Zero();
                _13At = At(_11Append, _12Zero);
                _14Add = Add(_4Constant, _13At);
                _15Floor = Floor(_14Add);
                _16Constant = 255;
                _17And = And(_15Floor, _16Constant);
                _18One = One();
                _19Add = Add(_17And, _18One);
                _20And = And(_19Add, _16Constant);
                _21Pair = Pair(_17And, _20And);
                _22Floor = Floor(_14Add);
                _23AsFloat = AsFloat(_22Floor);
                _24Subtract = Subtract(_14Add, _23AsFloat);
                _25FloatOne = FloatOne();
                _26Subtract = Subtract(_24Subtract, _25FloatOne);
                _27Pair = Pair(_24Subtract, _26Subtract);
                _28Pair = Pair(_21Pair, _27Pair);
                _29PairItem2 = PairItem2(_28Pair);
                _30PairItem1 = PairItem1(_29PairItem2);
                _31PairItem2 = PairItem2(x1);
                _32PairItem1 = PairItem1(_28Pair);
                _33PairItem1 = PairItem1(_32PairItem1);
                _34At = At(_31PairItem2, _33PairItem1);
                _35Constant = 4096;
                _36X = X(_5At);
                _37Unit = Unit(_36X);
                _38Y = Y(_5At);
                _39Append = Append(_37Unit, _38Y);
                _40Z = Z(_5At);
                _41Append = Append(_39Append, _40Z);
                _42One = One();
                _43At = At(_41Append, _42One);
                _44Add = Add(_35Constant, _43At);
                _45Floor = Floor(_44Add);
                _46Constant = 255;
                _47And = And(_45Floor, _46Constant);
                _48One = One();
                _49Add = Add(_47And, _48One);
                _50And = And(_49Add, _46Constant);
                _51Pair = Pair(_47And, _50And);
                _52Floor = Floor(_44Add);
                _53AsFloat = AsFloat(_52Floor);
                _54Subtract = Subtract(_44Add, _53AsFloat);
                _55FloatOne = FloatOne();
                _56Subtract = Subtract(_54Subtract, _55FloatOne);
                _57Pair = Pair(_54Subtract, _56Subtract);
                _58Pair = Pair(_51Pair, _57Pair);
                _59PairItem1 = PairItem1(_58Pair);
                _60PairItem1 = PairItem1(_59PairItem1);
                _61Add = Add(_34At, _60PairItem1);
                _62At = At(_31PairItem2, _61Add);
                _63Constant = 4096;
                _64X = X(_5At);
                _65Unit = Unit(_64X);
                _66Y = Y(_5At);
                _67Append = Append(_65Unit, _66Y);
                _68Z = Z(_5At);
                _69Append = Append(_67Append, _68Z);
                _70Two = Two();
                _71At = At(_69Append, _70Two);
                _72Add = Add(_63Constant, _71At);
                _73Floor = Floor(_72Add);
                _74Constant = 255;
                _75And = And(_73Floor, _74Constant);
                _76One = One();
                _77Add = Add(_75And, _76One);
                _78And = And(_77Add, _74Constant);
                _79Pair = Pair(_75And, _78And);
                _80Floor = Floor(_72Add);
                _81AsFloat = AsFloat(_80Floor);
                _82Subtract = Subtract(_72Add, _81AsFloat);
                _83FloatOne = FloatOne();
                _84Subtract = Subtract(_82Subtract, _83FloatOne);
                _85Pair = Pair(_82Subtract, _84Subtract);
                _86Pair = Pair(_79Pair, _85Pair);
                _87PairItem1 = PairItem1(_86Pair);
                _88PairItem1 = PairItem1(_87PairItem1);
                _89Add = Add(_62At, _88PairItem1);
                _90At = At(_24PairItem1, _89Add);
                _91Zero = Zero();
                _92At = At(_90At, _91Zero);
                _93Multiply = Multiply(_30PairItem1, _92At);
                _94PairItem2 = PairItem2(_58Pair);
                _95PairItem1 = PairItem1(_94PairItem2);
                _96One = One();
                _97At = At(_90At, _96One);
                _98Multiply = Multiply(_95PairItem1, _97At);
                _99Add = Add(_93Multiply, _98Multiply);
                _100PairItem2 = PairItem2(_86Pair);
                _101PairItem1 = PairItem1(_100PairItem2);
                _102Two = Two();
                _103At = At(_90At, _102Two);
                _104Multiply = Multiply(_101PairItem1, _103At);
                _105Add = Add(_99Add, _104Multiply);
                _106PairItem2 = PairItem2(_29PairItem2);
                _107PairItem2 = PairItem2(_32PairItem1);
                _108At = At(_31PairItem2, _107PairItem2);
                _109Add = Add(_108At, _60PairItem1);
                _110At = At(_31PairItem2, _109Add);
                _111Add = Add(_110At, _88PairItem1);
                _112At = At(_24PairItem1, _111Add);
                _113Zero = Zero();
                _114At = At(_112At, _113Zero);
                _115Multiply = Multiply(_106PairItem2, _114At);
                _116One = One();
                _117At = At(_112At, _116One);
                _118Multiply = Multiply(_95PairItem1, _117At);
                _119Add = Add(_115Multiply, _118Multiply);
                _120Two = Two();
                _121At = At(_112At, _120Two);
                _122Multiply = Multiply(_101PairItem1, _121At);
                _123Add = Add(_119Add, _122Multiply);
                _124Constant = 3;
                _125Constant = 2;
                _126Multiply = Multiply(_125Constant, _30PairItem1);
                _127Subtract = Subtract(_124Constant, _126Multiply);
                _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                _129Multiply = Multiply(_127Subtract, _128Multiply);
                _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                _131PairItem2 = PairItem2(_59PairItem1);
                _132Add = Add(_34At, _131PairItem2);
                _133At = At(_31PairItem2, _132Add);
                _134Add = Add(_133At, _88PairItem1);
                _135At = At(_24PairItem1, _134Add);
                _136Zero = Zero();
                _137At = At(_135At, _136Zero);
                _138Multiply = Multiply(_30PairItem1, _137At);
                _139PairItem2 = PairItem2(_94PairItem2);
                _140One = One();
                _141At = At(_135At, _140One);
                _142Multiply = Multiply(_139PairItem2, _141At);
                _143Add = Add(_138Multiply, _142Multiply);
                _144Two = Two();
                _145At = At(_135At, _144Two);
                _146Multiply = Multiply(_101PairItem1, _145At);
                _147Add = Add(_143Add, _146Multiply);
                _148Add = Add(_108At, _131PairItem2);
                _149At = At(_31PairItem2, _148Add);
                _150Add = Add(_149At, _88PairItem1);
                _151At = At(_24PairItem1, _150Add);
                _152Zero = Zero();
                _153At = At(_151At, _152Zero);
                _154Multiply = Multiply(_106PairItem2, _153At);
                _155One = One();
                _156At = At(_151At, _155One);
                _157Multiply = Multiply(_139PairItem2, _156At);
                _158Add = Add(_154Multiply, _157Multiply);
                _159Two = Two();
                _160At = At(_151At, _159Two);
                _161Multiply = Multiply(_101PairItem1, _160At);
                _162Add = Add(_158Add, _161Multiply);
                _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                _164Constant = 3;
                _165Constant = 2;
                _166Multiply = Multiply(_165Constant, _95PairItem1);
                _167Subtract = Subtract(_164Constant, _166Multiply);
                _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                _169Multiply = Multiply(_167Subtract, _168Multiply);
                _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                _171PairItem2 = PairItem2(_87PairItem1);
                _172Add = Add(_62At, _171PairItem2);
                _173At = At(_24PairItem1, _172Add);
                _174Zero = Zero();
                _175At = At(_173At, _174Zero);
                _176Multiply = Multiply(_30PairItem1, _175At);
                _177One = One();
                _178At = At(_173At, _177One);
                _179Multiply = Multiply(_95PairItem1, _178At);
                _180Add = Add(_176Multiply, _179Multiply);
                _181PairItem2 = PairItem2(_100PairItem2);
                _182Two = Two();
                _183At = At(_173At, _182Two);
                _184Multiply = Multiply(_181PairItem2, _183At);
                _185Add = Add(_180Add, _184Multiply);
                _186Add = Add(_110At, _171PairItem2);
                _187At = At(_24PairItem1, _186Add);
                _188Zero = Zero();
                _189At = At(_187At, _188Zero);
                _190Multiply = Multiply(_106PairItem2, _189At);
                _191One = One();
                _192At = At(_187At, _191One);
                _193Multiply = Multiply(_95PairItem1, _192At);
                _194Add = Add(_190Multiply, _193Multiply);
                _195Two = Two();
                _196At = At(_187At, _195Two);
                _197Multiply = Multiply(_181PairItem2, _196At);
                _198Add = Add(_194Add, _197Multiply);
                _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                _200Add = Add(_133At, _171PairItem2);
                _201At = At(_24PairItem1, _200Add);
                _202Zero = Zero();
                _203At = At(_201At, _202Zero);
                _204Multiply = Multiply(_30PairItem1, _203At);
                _205One = One();
                _206At = At(_201At, _205One);
                _207Multiply = Multiply(_139PairItem2, _206At);
                _208Add = Add(_204Multiply, _207Multiply);
                _209Two = Two();
                _210At = At(_201At, _209Two);
                _211Multiply = Multiply(_181PairItem2, _210At);
                _212Add = Add(_208Add, _211Multiply);
                _213Add = Add(_149At, _171PairItem2);
                _214At = At(_24PairItem1, _213Add);
                _215Zero = Zero();
                _216At = At(_214At, _215Zero);
                _217Multiply = Multiply(_106PairItem2, _216At);
                _218One = One();
                _219At = At(_214At, _218One);
                _220Multiply = Multiply(_139PairItem2, _219At);
                _221Add = Add(_217Multiply, _220Multiply);
                _222Two = Two();
                _223At = At(_214At, _222Two);
                _224Multiply = Multiply(_181PairItem2, _223At);
                _225Add = Add(_221Add, _224Multiply);
                _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                _228Constant = 3;
                _229Constant = 2;
                _230Multiply = Multiply(_229Constant, _101PairItem1);
                _231Subtract = Subtract(_228Constant, _230Multiply);
                _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                _233Multiply = Multiply(_231Subtract, _232Multiply);
                _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                _235NaN = NaN();
                _236Compare = Compare(_234FloatLerp, _235NaN);
                _237Zero = Zero();
                _238Equal = Equal(_236Compare, _237Zero);
                _240Multiply = Multiply(_3At, if (_238Equal)
                    {
                      Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 74809
                      _239FloatZero = FloatZero();
                      _239FloatZero;
                      }else
                    {
                      _234FloatLerp;
                      });
                _241Zero = Zero();
                _242At = At(x0, _241Zero);
                _243Add = Add(_240Multiply, _242At);
                _244Unit = Unit(_243Add);
                _245Add = Add(_1At, _25FloatOne);
                _246Append = Append(_244Unit, _245Add);
                _246Append;
                });
            _27Count = Count(_26GenerateN);
            _28One = One();
            _29Subtract = Subtract(_27Count, _28One);
            _30At = At(_26GenerateN, _29Subtract);
            _31Zero = Zero();
            _32At = At(_30At, _31Zero);
            _32At;
            }, _8Y, _9Z);
        _11X = X(_7Add);
        _12Apply2 = Apply2((Single x0, Single x1) => 
          {
            Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 74464
            IArray[Single] _1Unit;// 37:Array2->2:Unit 74463
            Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 74465
            IArray[Single] _3Append;// 37:Array2->3:Append 74462
            Single _4AsFloat;// 10:NoiseDeformer-ext->13:AsFloat 74825
            Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 74466
            Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 74480
            Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 74481
            Single _8Constant;// 10:NoiseDeformer-ext->0:Constant 74826
            IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 74479
            Single _10FloatOne;// 10:NoiseDeformer-ext->46:FloatOne 74828
            Single _11Subtract;// 10:NoiseDeformer-ext->3:Subtract 74827
            Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 74488
            IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 74478
            Single _14AsFloat;// 10:NoiseDeformer-ext->43:AsFloat 74833
            Single _15Constant;// 10:NoiseDeformer-ext->0:Constant 74836
            Single _16Multiply;// 10:NoiseDeformer-ext->30:Multiply 74835
            Single _17Constant;// 10:NoiseDeformer-ext->0:Constant 74838
            Single _18Constant;// 10:NoiseDeformer-ext->0:Constant 74839
            Single _19Divide;// 10:NoiseDeformer-ext->31:Divide 74837
            Single _20Multiply;// 10:NoiseDeformer-ext->39:Multiply 74834
            Single _21Multiply;// 10:NoiseDeformer-ext->38:Multiply 74832
            Vector3 _22Vector3;// 10:NoiseDeformer-ext->0:Vector3 74829
            IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 74813
            IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 74817
            Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 74824
            IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 74459
            Int32 _27Count;// 3:LastIndex->2:Count 74458
            Int32 _28One;// 3:MinusOne->2:One 74457
            Int32 _29Subtract;// 3:MinusOne->1:Subtract 74456
            IArray[Single] _30At;// 68:Last->0:At 74453
            Int32 _31Zero;// 69:First->2:Zero 74451
            Single _32At;// 69:First->0:At 74450
            _0FloatZero = FloatZero();
            _1Unit = Unit(_0FloatZero);
            _2FloatZero = FloatZero();
            _3Append = Append(_1Unit, _2FloatZero);
            _4AsFloat = AsFloat(numIterations);
            _5AsInt = AsInt(_4AsFloat);
            _6FloatOne = FloatOne();
            _7AsInt = AsInt(_4AsFloat);
            _8Constant = 2;
            _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
              {
                Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 74483
                _0Multiply = Multiply(_8Constant, x0);
                _0Multiply;
                });
            _10FloatOne = FloatOne();
            _11Subtract = Subtract(_10FloatOne, roughness);
            _12NegativeFloat = NegativeFloat(_11Subtract);
            _13Map = Map(_9GenerateN, (Single x0) => 
              {
                Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 74486
                _0Pow = Pow(x0, _12NegativeFloat);
                _0Pow;
                });
            _14AsFloat = AsFloat(phase);
            _15Constant = 0.005;
            _16Multiply = Multiply(frequency, _15Constant);
            _17Constant = 1200;
            _18Constant = 4800;
            _19Divide = Divide(_17Constant, _18Constant);
            _20Multiply = Multiply(_16Multiply, _19Divide);
            _21Multiply = Multiply(_14AsFloat, _20Multiply);
            _22Vector3 = Vector3(x0, x1, _21Multiply);
            _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
              {
                Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 74815
                _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                _0MultiplyByScalar;
                });
            _24PairItem1 = PairItem1(x1);
            _25FloatOne = FloatOne();
            _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
              {
                Int32 _0One;// 49:Second->2:One 74493
                Single _1At;// 49:Second->0:At 74492
                Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 74490
                Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 74476
                Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 74531
                Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 74811
                Single _6X;// 2:VectorAsArray->1:X 74542
                IArray[Single] _7Unit;// 4:Array3->2:Unit 74541
                Single _8Y;// 2:VectorAsArray->2:Y 74543
                IArray[Single] _9Append;// 4:Array3->3:Append 74540
                Single _10Z;// 2:VectorAsArray->3:Z 74544
                IArray[Single] _11Append;// 4:Array3->6:Append 74539
                Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 74557
                Single _13At;// 1:VectorComponent-ext->3:At 74534
                Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 74530
                Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 74529
                Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 74545
                Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 74528
                Int32 _18One;// 13:PlusOne->1:One 74549
                Int32 _19Add;// 13:PlusOne->0:Add 74548
                Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 74546
                Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 74527
                Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 74554
                Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 74553
                Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 74551
                Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 74556
                Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 74555
                Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 74550
                Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 74526
                Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 74523
                Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 74522
                IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 74818
                Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 74568
                Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 74567
                Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 74566
                Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 74578
                Single _36X;// 2:VectorAsArray->1:X 74589
                IArray[Single] _37Unit;// 4:Array3->2:Unit 74588
                Single _38Y;// 2:VectorAsArray->2:Y 74590
                IArray[Single] _39Append;// 4:Array3->3:Append 74587
                Single _40Z;// 2:VectorAsArray->3:Z 74591
                IArray[Single] _41Append;// 4:Array3->6:Append 74586
                Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 74604
                Single _43At;// 1:VectorComponent-ext->3:At 74581
                Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 74577
                Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 74576
                Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 74592
                Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 74575
                Int32 _48One;// 13:PlusOne->1:One 74596
                Int32 _49Add;// 13:PlusOne->0:Add 74595
                Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 74593
                Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 74574
                Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 74601
                Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 74600
                Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 74598
                Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 74603
                Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 74602
                Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 74597
                Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 74573
                Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 74570
                Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 74569
                Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 74564
                Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 74562
                Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 74614
                Single _64X;// 2:VectorAsArray->1:X 74625
                IArray[Single] _65Unit;// 4:Array3->2:Unit 74624
                Single _66Y;// 2:VectorAsArray->2:Y 74626
                IArray[Single] _67Append;// 4:Array3->3:Append 74623
                Single _68Z;// 2:VectorAsArray->3:Z 74627
                IArray[Single] _69Append;// 4:Array3->6:Append 74622
                Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 74640
                Single _71At;// 1:VectorComponent-ext->3:At 74617
                Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 74613
                Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 74612
                Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 74628
                Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 74611
                Int32 _76One;// 13:PlusOne->1:One 74632
                Int32 _77Add;// 13:PlusOne->0:Add 74631
                Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 74629
                Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 74610
                Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 74637
                Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 74636
                Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 74634
                Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 74639
                Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 74638
                Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 74633
                Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 74609
                Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 74606
                Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 74605
                Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 74560
                IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 74558
                Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 74515
                Single _92At;// 62:NoiseDeformerAt3-ext->4:At 74514
                Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 74513
                Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 74642
                Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 74641
                Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 74518
                Single _97At;// 62:NoiseDeformerAt3-ext->7:At 74517
                Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 74516
                Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 74512
                Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 74644
                Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 74643
                Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 74521
                Single _103At;// 62:NoiseDeformerAt3-ext->10:At 74520
                Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 74519
                Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 74511
                Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 74660
                Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 74668
                Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 74667
                Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 74665
                Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 74664
                Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 74662
                IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 74661
                Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 74653
                Single _114At;// 66:NoiseDeformerAt3-ext->4:At 74652
                Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 74651
                Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 74656
                Single _117At;// 66:NoiseDeformerAt3-ext->7:At 74655
                Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 74654
                Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 74650
                Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 74659
                Single _121At;// 66:NoiseDeformerAt3-ext->10:At 74658
                Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 74657
                Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 74649
                Single _124Constant;// 42:NoiseDeformerSCurve->0:Constant 74672
                Single _125Constant;// 42:NoiseDeformerSCurve->0:Constant 74674
                Single _126Multiply;// 42:NoiseDeformerSCurve->41:Multiply 74673
                Single _127Subtract;// 42:NoiseDeformerSCurve->39:Subtract 74671
                Single _128Multiply;// 42:NoiseDeformerSCurve->35:Multiply 74676
                Single _129Multiply;// 42:NoiseDeformerSCurve->37:Multiply 74670
                Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 74506
                Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 74698
                Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 74697
                Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 74696
                Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 74694
                IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 74693
                Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 74686
                Single _137At;// 72:NoiseDeformerAt3-ext->4:At 74685
                Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 74684
                Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 74699
                Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 74689
                Single _141At;// 72:NoiseDeformerAt3-ext->7:At 74688
                Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 74687
                Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 74683
                Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 74692
                Single _145At;// 72:NoiseDeformerAt3-ext->10:At 74691
                Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 74690
                Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 74682
                Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 74719
                Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 74718
                Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 74716
                IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 74715
                Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 74708
                Single _153At;// 75:NoiseDeformerAt3-ext->4:At 74707
                Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 74706
                Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 74711
                Single _156At;// 75:NoiseDeformerAt3-ext->7:At 74710
                Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 74709
                Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 74705
                Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 74714
                Single _160At;// 75:NoiseDeformerAt3-ext->10:At 74713
                Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 74712
                Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 74704
                Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 74677
                Single _164Constant;// 56:NoiseDeformerSCurve->0:Constant 74723
                Single _165Constant;// 56:NoiseDeformerSCurve->0:Constant 74725
                Single _166Multiply;// 56:NoiseDeformerSCurve->41:Multiply 74724
                Single _167Subtract;// 56:NoiseDeformerSCurve->39:Subtract 74722
                Single _168Multiply;// 56:NoiseDeformerSCurve->35:Multiply 74727
                Single _169Multiply;// 56:NoiseDeformerSCurve->37:Multiply 74721
                Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 74505
                Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 74747
                Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 74746
                IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 74745
                Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 74738
                Single _175At;// 82:NoiseDeformerAt3-ext->4:At 74737
                Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 74736
                Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 74741
                Single _178At;// 82:NoiseDeformerAt3-ext->7:At 74740
                Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 74739
                Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 74735
                Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 74748
                Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 74744
                Single _183At;// 82:NoiseDeformerAt3-ext->10:At 74743
                Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 74742
                Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 74734
                Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 74765
                IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 74764
                Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 74757
                Single _189At;// 86:NoiseDeformerAt3-ext->4:At 74756
                Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 74755
                Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 74760
                Single _192At;// 86:NoiseDeformerAt3-ext->7:At 74759
                Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 74758
                Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 74754
                Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 74763
                Single _196At;// 86:NoiseDeformerAt3-ext->10:At 74762
                Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 74761
                Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 74753
                Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 74729
                Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 74783
                IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 74782
                Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 74775
                Single _203At;// 92:NoiseDeformerAt3-ext->4:At 74774
                Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 74773
                Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 74778
                Single _206At;// 92:NoiseDeformerAt3-ext->7:At 74777
                Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 74776
                Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 74772
                Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 74781
                Single _210At;// 92:NoiseDeformerAt3-ext->10:At 74780
                Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 74779
                Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 74771
                Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 74800
                IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 74799
                Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 74792
                Single _216At;// 96:NoiseDeformerAt3-ext->4:At 74791
                Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 74790
                Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 74795
                Single _219At;// 96:NoiseDeformerAt3-ext->7:At 74794
                Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 74793
                Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 74789
                Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 74798
                Single _223At;// 96:NoiseDeformerAt3-ext->10:At 74797
                Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 74796
                Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 74788
                Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 74766
                Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 74728
                Single _228Constant;// 58:NoiseDeformerSCurve->0:Constant 74804
                Single _229Constant;// 58:NoiseDeformerSCurve->0:Constant 74806
                Single _230Multiply;// 58:NoiseDeformerSCurve->41:Multiply 74805
                Single _231Subtract;// 58:NoiseDeformerSCurve->39:Subtract 74803
                Single _232Multiply;// 58:NoiseDeformerSCurve->35:Multiply 74808
                Single _233Multiply;// 58:NoiseDeformerSCurve->37:Multiply 74802
                Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 74504
                Single _235NaN;// 118:FloatIsNaN->1:NaN 74502
                Int32 _236Compare;// 118:FloatIsNaN->2:Compare 74501
                Int32 _237Zero;// 118:FloatIsNaN->4:Zero 74503
                Boolean _238Equal;// 118:FloatIsNaN->3:Equal 74500
                Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 74474
                Int32 _241Zero;// 48:First->2:Zero 74821
                Single _242At;// 48:First->0:At 74820
                Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 74473
                IArray[Single] _244Unit;// 43:Array2->2:Unit 74471
                Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 74823
                IArray[Single] _246Append;// 43:Array2->3:Append 74470
                _0One = One();
                _1At = At(x0, _0One);
                _2AsInt = AsInt(_1At);
                _3At = At(_13Map, _2AsInt);
                _4Constant = 4096;
                _5At = At(_23GenerateN, _2AsInt);
                _6X = X(_5At);
                _7Unit = Unit(_6X);
                _8Y = Y(_5At);
                _9Append = Append(_7Unit, _8Y);
                _10Z = Z(_5At);
                _11Append = Append(_9Append, _10Z);
                _12Zero = Zero();
                _13At = At(_11Append, _12Zero);
                _14Add = Add(_4Constant, _13At);
                _15Floor = Floor(_14Add);
                _16Constant = 255;
                _17And = And(_15Floor, _16Constant);
                _18One = One();
                _19Add = Add(_17And, _18One);
                _20And = And(_19Add, _16Constant);
                _21Pair = Pair(_17And, _20And);
                _22Floor = Floor(_14Add);
                _23AsFloat = AsFloat(_22Floor);
                _24Subtract = Subtract(_14Add, _23AsFloat);
                _25FloatOne = FloatOne();
                _26Subtract = Subtract(_24Subtract, _25FloatOne);
                _27Pair = Pair(_24Subtract, _26Subtract);
                _28Pair = Pair(_21Pair, _27Pair);
                _29PairItem2 = PairItem2(_28Pair);
                _30PairItem1 = PairItem1(_29PairItem2);
                _31PairItem2 = PairItem2(x1);
                _32PairItem1 = PairItem1(_28Pair);
                _33PairItem1 = PairItem1(_32PairItem1);
                _34At = At(_31PairItem2, _33PairItem1);
                _35Constant = 4096;
                _36X = X(_5At);
                _37Unit = Unit(_36X);
                _38Y = Y(_5At);
                _39Append = Append(_37Unit, _38Y);
                _40Z = Z(_5At);
                _41Append = Append(_39Append, _40Z);
                _42One = One();
                _43At = At(_41Append, _42One);
                _44Add = Add(_35Constant, _43At);
                _45Floor = Floor(_44Add);
                _46Constant = 255;
                _47And = And(_45Floor, _46Constant);
                _48One = One();
                _49Add = Add(_47And, _48One);
                _50And = And(_49Add, _46Constant);
                _51Pair = Pair(_47And, _50And);
                _52Floor = Floor(_44Add);
                _53AsFloat = AsFloat(_52Floor);
                _54Subtract = Subtract(_44Add, _53AsFloat);
                _55FloatOne = FloatOne();
                _56Subtract = Subtract(_54Subtract, _55FloatOne);
                _57Pair = Pair(_54Subtract, _56Subtract);
                _58Pair = Pair(_51Pair, _57Pair);
                _59PairItem1 = PairItem1(_58Pair);
                _60PairItem1 = PairItem1(_59PairItem1);
                _61Add = Add(_34At, _60PairItem1);
                _62At = At(_31PairItem2, _61Add);
                _63Constant = 4096;
                _64X = X(_5At);
                _65Unit = Unit(_64X);
                _66Y = Y(_5At);
                _67Append = Append(_65Unit, _66Y);
                _68Z = Z(_5At);
                _69Append = Append(_67Append, _68Z);
                _70Two = Two();
                _71At = At(_69Append, _70Two);
                _72Add = Add(_63Constant, _71At);
                _73Floor = Floor(_72Add);
                _74Constant = 255;
                _75And = And(_73Floor, _74Constant);
                _76One = One();
                _77Add = Add(_75And, _76One);
                _78And = And(_77Add, _74Constant);
                _79Pair = Pair(_75And, _78And);
                _80Floor = Floor(_72Add);
                _81AsFloat = AsFloat(_80Floor);
                _82Subtract = Subtract(_72Add, _81AsFloat);
                _83FloatOne = FloatOne();
                _84Subtract = Subtract(_82Subtract, _83FloatOne);
                _85Pair = Pair(_82Subtract, _84Subtract);
                _86Pair = Pair(_79Pair, _85Pair);
                _87PairItem1 = PairItem1(_86Pair);
                _88PairItem1 = PairItem1(_87PairItem1);
                _89Add = Add(_62At, _88PairItem1);
                _90At = At(_24PairItem1, _89Add);
                _91Zero = Zero();
                _92At = At(_90At, _91Zero);
                _93Multiply = Multiply(_30PairItem1, _92At);
                _94PairItem2 = PairItem2(_58Pair);
                _95PairItem1 = PairItem1(_94PairItem2);
                _96One = One();
                _97At = At(_90At, _96One);
                _98Multiply = Multiply(_95PairItem1, _97At);
                _99Add = Add(_93Multiply, _98Multiply);
                _100PairItem2 = PairItem2(_86Pair);
                _101PairItem1 = PairItem1(_100PairItem2);
                _102Two = Two();
                _103At = At(_90At, _102Two);
                _104Multiply = Multiply(_101PairItem1, _103At);
                _105Add = Add(_99Add, _104Multiply);
                _106PairItem2 = PairItem2(_29PairItem2);
                _107PairItem2 = PairItem2(_32PairItem1);
                _108At = At(_31PairItem2, _107PairItem2);
                _109Add = Add(_108At, _60PairItem1);
                _110At = At(_31PairItem2, _109Add);
                _111Add = Add(_110At, _88PairItem1);
                _112At = At(_24PairItem1, _111Add);
                _113Zero = Zero();
                _114At = At(_112At, _113Zero);
                _115Multiply = Multiply(_106PairItem2, _114At);
                _116One = One();
                _117At = At(_112At, _116One);
                _118Multiply = Multiply(_95PairItem1, _117At);
                _119Add = Add(_115Multiply, _118Multiply);
                _120Two = Two();
                _121At = At(_112At, _120Two);
                _122Multiply = Multiply(_101PairItem1, _121At);
                _123Add = Add(_119Add, _122Multiply);
                _124Constant = 3;
                _125Constant = 2;
                _126Multiply = Multiply(_125Constant, _30PairItem1);
                _127Subtract = Subtract(_124Constant, _126Multiply);
                _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                _129Multiply = Multiply(_127Subtract, _128Multiply);
                _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                _131PairItem2 = PairItem2(_59PairItem1);
                _132Add = Add(_34At, _131PairItem2);
                _133At = At(_31PairItem2, _132Add);
                _134Add = Add(_133At, _88PairItem1);
                _135At = At(_24PairItem1, _134Add);
                _136Zero = Zero();
                _137At = At(_135At, _136Zero);
                _138Multiply = Multiply(_30PairItem1, _137At);
                _139PairItem2 = PairItem2(_94PairItem2);
                _140One = One();
                _141At = At(_135At, _140One);
                _142Multiply = Multiply(_139PairItem2, _141At);
                _143Add = Add(_138Multiply, _142Multiply);
                _144Two = Two();
                _145At = At(_135At, _144Two);
                _146Multiply = Multiply(_101PairItem1, _145At);
                _147Add = Add(_143Add, _146Multiply);
                _148Add = Add(_108At, _131PairItem2);
                _149At = At(_31PairItem2, _148Add);
                _150Add = Add(_149At, _88PairItem1);
                _151At = At(_24PairItem1, _150Add);
                _152Zero = Zero();
                _153At = At(_151At, _152Zero);
                _154Multiply = Multiply(_106PairItem2, _153At);
                _155One = One();
                _156At = At(_151At, _155One);
                _157Multiply = Multiply(_139PairItem2, _156At);
                _158Add = Add(_154Multiply, _157Multiply);
                _159Two = Two();
                _160At = At(_151At, _159Two);
                _161Multiply = Multiply(_101PairItem1, _160At);
                _162Add = Add(_158Add, _161Multiply);
                _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                _164Constant = 3;
                _165Constant = 2;
                _166Multiply = Multiply(_165Constant, _95PairItem1);
                _167Subtract = Subtract(_164Constant, _166Multiply);
                _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                _169Multiply = Multiply(_167Subtract, _168Multiply);
                _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                _171PairItem2 = PairItem2(_87PairItem1);
                _172Add = Add(_62At, _171PairItem2);
                _173At = At(_24PairItem1, _172Add);
                _174Zero = Zero();
                _175At = At(_173At, _174Zero);
                _176Multiply = Multiply(_30PairItem1, _175At);
                _177One = One();
                _178At = At(_173At, _177One);
                _179Multiply = Multiply(_95PairItem1, _178At);
                _180Add = Add(_176Multiply, _179Multiply);
                _181PairItem2 = PairItem2(_100PairItem2);
                _182Two = Two();
                _183At = At(_173At, _182Two);
                _184Multiply = Multiply(_181PairItem2, _183At);
                _185Add = Add(_180Add, _184Multiply);
                _186Add = Add(_110At, _171PairItem2);
                _187At = At(_24PairItem1, _186Add);
                _188Zero = Zero();
                _189At = At(_187At, _188Zero);
                _190Multiply = Multiply(_106PairItem2, _189At);
                _191One = One();
                _192At = At(_187At, _191One);
                _193Multiply = Multiply(_95PairItem1, _192At);
                _194Add = Add(_190Multiply, _193Multiply);
                _195Two = Two();
                _196At = At(_187At, _195Two);
                _197Multiply = Multiply(_181PairItem2, _196At);
                _198Add = Add(_194Add, _197Multiply);
                _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                _200Add = Add(_133At, _171PairItem2);
                _201At = At(_24PairItem1, _200Add);
                _202Zero = Zero();
                _203At = At(_201At, _202Zero);
                _204Multiply = Multiply(_30PairItem1, _203At);
                _205One = One();
                _206At = At(_201At, _205One);
                _207Multiply = Multiply(_139PairItem2, _206At);
                _208Add = Add(_204Multiply, _207Multiply);
                _209Two = Two();
                _210At = At(_201At, _209Two);
                _211Multiply = Multiply(_181PairItem2, _210At);
                _212Add = Add(_208Add, _211Multiply);
                _213Add = Add(_149At, _171PairItem2);
                _214At = At(_24PairItem1, _213Add);
                _215Zero = Zero();
                _216At = At(_214At, _215Zero);
                _217Multiply = Multiply(_106PairItem2, _216At);
                _218One = One();
                _219At = At(_214At, _218One);
                _220Multiply = Multiply(_139PairItem2, _219At);
                _221Add = Add(_217Multiply, _220Multiply);
                _222Two = Two();
                _223At = At(_214At, _222Two);
                _224Multiply = Multiply(_181PairItem2, _223At);
                _225Add = Add(_221Add, _224Multiply);
                _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                _228Constant = 3;
                _229Constant = 2;
                _230Multiply = Multiply(_229Constant, _101PairItem1);
                _231Subtract = Subtract(_228Constant, _230Multiply);
                _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                _233Multiply = Multiply(_231Subtract, _232Multiply);
                _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                _235NaN = NaN();
                _236Compare = Compare(_234FloatLerp, _235NaN);
                _237Zero = Zero();
                _238Equal = Equal(_236Compare, _237Zero);
                _240Multiply = Multiply(_3At, if (_238Equal)
                    {
                      Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 74809
                      _239FloatZero = FloatZero();
                      _239FloatZero;
                      }else
                    {
                      _234FloatLerp;
                      });
                _241Zero = Zero();
                _242At = At(x0, _241Zero);
                _243Add = Add(_240Multiply, _242At);
                _244Unit = Unit(_243Add);
                _245Add = Add(_1At, _25FloatOne);
                _246Append = Append(_244Unit, _245Add);
                _246Append;
                });
            _27Count = Count(_26GenerateN);
            _28One = One();
            _29Subtract = Subtract(_27Count, _28One);
            _30At = At(_26GenerateN, _29Subtract);
            _31Zero = Zero();
            _32At = At(_30At, _31Zero);
            _32At;
            }, _11X, _9Z);
        _13Apply2 = Apply2((Single x0, Single x1) => 
          {
            Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 74464
            IArray[Single] _1Unit;// 37:Array2->2:Unit 74463
            Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 74465
            IArray[Single] _3Append;// 37:Array2->3:Append 74462
            Single _4AsFloat;// 10:NoiseDeformer-ext->13:AsFloat 74825
            Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 74466
            Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 74480
            Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 74481
            Single _8Constant;// 10:NoiseDeformer-ext->0:Constant 74826
            IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 74479
            Single _10FloatOne;// 10:NoiseDeformer-ext->46:FloatOne 74828
            Single _11Subtract;// 10:NoiseDeformer-ext->3:Subtract 74827
            Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 74488
            IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 74478
            Single _14AsFloat;// 10:NoiseDeformer-ext->43:AsFloat 74833
            Single _15Constant;// 10:NoiseDeformer-ext->0:Constant 74836
            Single _16Multiply;// 10:NoiseDeformer-ext->30:Multiply 74835
            Single _17Constant;// 10:NoiseDeformer-ext->0:Constant 74838
            Single _18Constant;// 10:NoiseDeformer-ext->0:Constant 74839
            Single _19Divide;// 10:NoiseDeformer-ext->31:Divide 74837
            Single _20Multiply;// 10:NoiseDeformer-ext->39:Multiply 74834
            Single _21Multiply;// 10:NoiseDeformer-ext->38:Multiply 74832
            Vector3 _22Vector3;// 10:NoiseDeformer-ext->0:Vector3 74829
            IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 74813
            IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 74817
            Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 74824
            IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 74459
            Int32 _27Count;// 3:LastIndex->2:Count 74458
            Int32 _28One;// 3:MinusOne->2:One 74457
            Int32 _29Subtract;// 3:MinusOne->1:Subtract 74456
            IArray[Single] _30At;// 68:Last->0:At 74453
            Int32 _31Zero;// 69:First->2:Zero 74451
            Single _32At;// 69:First->0:At 74450
            _0FloatZero = FloatZero();
            _1Unit = Unit(_0FloatZero);
            _2FloatZero = FloatZero();
            _3Append = Append(_1Unit, _2FloatZero);
            _4AsFloat = AsFloat(numIterations);
            _5AsInt = AsInt(_4AsFloat);
            _6FloatOne = FloatOne();
            _7AsInt = AsInt(_4AsFloat);
            _8Constant = 2;
            _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
              {
                Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 74483
                _0Multiply = Multiply(_8Constant, x0);
                _0Multiply;
                });
            _10FloatOne = FloatOne();
            _11Subtract = Subtract(_10FloatOne, roughness);
            _12NegativeFloat = NegativeFloat(_11Subtract);
            _13Map = Map(_9GenerateN, (Single x0) => 
              {
                Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 74486
                _0Pow = Pow(x0, _12NegativeFloat);
                _0Pow;
                });
            _14AsFloat = AsFloat(phase);
            _15Constant = 0.005;
            _16Multiply = Multiply(frequency, _15Constant);
            _17Constant = 1200;
            _18Constant = 4800;
            _19Divide = Divide(_17Constant, _18Constant);
            _20Multiply = Multiply(_16Multiply, _19Divide);
            _21Multiply = Multiply(_14AsFloat, _20Multiply);
            _22Vector3 = Vector3(x0, x1, _21Multiply);
            _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
              {
                Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 74815
                _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                _0MultiplyByScalar;
                });
            _24PairItem1 = PairItem1(x1);
            _25FloatOne = FloatOne();
            _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
              {
                Int32 _0One;// 49:Second->2:One 74493
                Single _1At;// 49:Second->0:At 74492
                Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 74490
                Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 74476
                Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 74531
                Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 74811
                Single _6X;// 2:VectorAsArray->1:X 74542
                IArray[Single] _7Unit;// 4:Array3->2:Unit 74541
                Single _8Y;// 2:VectorAsArray->2:Y 74543
                IArray[Single] _9Append;// 4:Array3->3:Append 74540
                Single _10Z;// 2:VectorAsArray->3:Z 74544
                IArray[Single] _11Append;// 4:Array3->6:Append 74539
                Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 74557
                Single _13At;// 1:VectorComponent-ext->3:At 74534
                Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 74530
                Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 74529
                Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 74545
                Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 74528
                Int32 _18One;// 13:PlusOne->1:One 74549
                Int32 _19Add;// 13:PlusOne->0:Add 74548
                Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 74546
                Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 74527
                Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 74554
                Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 74553
                Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 74551
                Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 74556
                Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 74555
                Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 74550
                Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 74526
                Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 74523
                Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 74522
                IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 74818
                Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 74568
                Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 74567
                Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 74566
                Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 74578
                Single _36X;// 2:VectorAsArray->1:X 74589
                IArray[Single] _37Unit;// 4:Array3->2:Unit 74588
                Single _38Y;// 2:VectorAsArray->2:Y 74590
                IArray[Single] _39Append;// 4:Array3->3:Append 74587
                Single _40Z;// 2:VectorAsArray->3:Z 74591
                IArray[Single] _41Append;// 4:Array3->6:Append 74586
                Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 74604
                Single _43At;// 1:VectorComponent-ext->3:At 74581
                Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 74577
                Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 74576
                Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 74592
                Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 74575
                Int32 _48One;// 13:PlusOne->1:One 74596
                Int32 _49Add;// 13:PlusOne->0:Add 74595
                Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 74593
                Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 74574
                Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 74601
                Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 74600
                Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 74598
                Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 74603
                Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 74602
                Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 74597
                Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 74573
                Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 74570
                Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 74569
                Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 74564
                Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 74562
                Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 74614
                Single _64X;// 2:VectorAsArray->1:X 74625
                IArray[Single] _65Unit;// 4:Array3->2:Unit 74624
                Single _66Y;// 2:VectorAsArray->2:Y 74626
                IArray[Single] _67Append;// 4:Array3->3:Append 74623
                Single _68Z;// 2:VectorAsArray->3:Z 74627
                IArray[Single] _69Append;// 4:Array3->6:Append 74622
                Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 74640
                Single _71At;// 1:VectorComponent-ext->3:At 74617
                Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 74613
                Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 74612
                Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 74628
                Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 74611
                Int32 _76One;// 13:PlusOne->1:One 74632
                Int32 _77Add;// 13:PlusOne->0:Add 74631
                Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 74629
                Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 74610
                Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 74637
                Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 74636
                Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 74634
                Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 74639
                Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 74638
                Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 74633
                Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 74609
                Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 74606
                Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 74605
                Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 74560
                IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 74558
                Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 74515
                Single _92At;// 62:NoiseDeformerAt3-ext->4:At 74514
                Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 74513
                Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 74642
                Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 74641
                Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 74518
                Single _97At;// 62:NoiseDeformerAt3-ext->7:At 74517
                Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 74516
                Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 74512
                Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 74644
                Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 74643
                Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 74521
                Single _103At;// 62:NoiseDeformerAt3-ext->10:At 74520
                Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 74519
                Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 74511
                Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 74660
                Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 74668
                Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 74667
                Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 74665
                Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 74664
                Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 74662
                IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 74661
                Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 74653
                Single _114At;// 66:NoiseDeformerAt3-ext->4:At 74652
                Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 74651
                Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 74656
                Single _117At;// 66:NoiseDeformerAt3-ext->7:At 74655
                Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 74654
                Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 74650
                Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 74659
                Single _121At;// 66:NoiseDeformerAt3-ext->10:At 74658
                Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 74657
                Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 74649
                Single _124Constant;// 42:NoiseDeformerSCurve->0:Constant 74672
                Single _125Constant;// 42:NoiseDeformerSCurve->0:Constant 74674
                Single _126Multiply;// 42:NoiseDeformerSCurve->41:Multiply 74673
                Single _127Subtract;// 42:NoiseDeformerSCurve->39:Subtract 74671
                Single _128Multiply;// 42:NoiseDeformerSCurve->35:Multiply 74676
                Single _129Multiply;// 42:NoiseDeformerSCurve->37:Multiply 74670
                Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 74506
                Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 74698
                Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 74697
                Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 74696
                Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 74694
                IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 74693
                Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 74686
                Single _137At;// 72:NoiseDeformerAt3-ext->4:At 74685
                Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 74684
                Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 74699
                Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 74689
                Single _141At;// 72:NoiseDeformerAt3-ext->7:At 74688
                Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 74687
                Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 74683
                Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 74692
                Single _145At;// 72:NoiseDeformerAt3-ext->10:At 74691
                Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 74690
                Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 74682
                Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 74719
                Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 74718
                Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 74716
                IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 74715
                Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 74708
                Single _153At;// 75:NoiseDeformerAt3-ext->4:At 74707
                Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 74706
                Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 74711
                Single _156At;// 75:NoiseDeformerAt3-ext->7:At 74710
                Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 74709
                Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 74705
                Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 74714
                Single _160At;// 75:NoiseDeformerAt3-ext->10:At 74713
                Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 74712
                Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 74704
                Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 74677
                Single _164Constant;// 56:NoiseDeformerSCurve->0:Constant 74723
                Single _165Constant;// 56:NoiseDeformerSCurve->0:Constant 74725
                Single _166Multiply;// 56:NoiseDeformerSCurve->41:Multiply 74724
                Single _167Subtract;// 56:NoiseDeformerSCurve->39:Subtract 74722
                Single _168Multiply;// 56:NoiseDeformerSCurve->35:Multiply 74727
                Single _169Multiply;// 56:NoiseDeformerSCurve->37:Multiply 74721
                Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 74505
                Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 74747
                Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 74746
                IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 74745
                Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 74738
                Single _175At;// 82:NoiseDeformerAt3-ext->4:At 74737
                Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 74736
                Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 74741
                Single _178At;// 82:NoiseDeformerAt3-ext->7:At 74740
                Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 74739
                Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 74735
                Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 74748
                Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 74744
                Single _183At;// 82:NoiseDeformerAt3-ext->10:At 74743
                Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 74742
                Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 74734
                Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 74765
                IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 74764
                Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 74757
                Single _189At;// 86:NoiseDeformerAt3-ext->4:At 74756
                Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 74755
                Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 74760
                Single _192At;// 86:NoiseDeformerAt3-ext->7:At 74759
                Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 74758
                Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 74754
                Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 74763
                Single _196At;// 86:NoiseDeformerAt3-ext->10:At 74762
                Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 74761
                Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 74753
                Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 74729
                Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 74783
                IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 74782
                Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 74775
                Single _203At;// 92:NoiseDeformerAt3-ext->4:At 74774
                Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 74773
                Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 74778
                Single _206At;// 92:NoiseDeformerAt3-ext->7:At 74777
                Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 74776
                Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 74772
                Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 74781
                Single _210At;// 92:NoiseDeformerAt3-ext->10:At 74780
                Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 74779
                Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 74771
                Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 74800
                IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 74799
                Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 74792
                Single _216At;// 96:NoiseDeformerAt3-ext->4:At 74791
                Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 74790
                Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 74795
                Single _219At;// 96:NoiseDeformerAt3-ext->7:At 74794
                Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 74793
                Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 74789
                Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 74798
                Single _223At;// 96:NoiseDeformerAt3-ext->10:At 74797
                Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 74796
                Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 74788
                Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 74766
                Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 74728
                Single _228Constant;// 58:NoiseDeformerSCurve->0:Constant 74804
                Single _229Constant;// 58:NoiseDeformerSCurve->0:Constant 74806
                Single _230Multiply;// 58:NoiseDeformerSCurve->41:Multiply 74805
                Single _231Subtract;// 58:NoiseDeformerSCurve->39:Subtract 74803
                Single _232Multiply;// 58:NoiseDeformerSCurve->35:Multiply 74808
                Single _233Multiply;// 58:NoiseDeformerSCurve->37:Multiply 74802
                Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 74504
                Single _235NaN;// 118:FloatIsNaN->1:NaN 74502
                Int32 _236Compare;// 118:FloatIsNaN->2:Compare 74501
                Int32 _237Zero;// 118:FloatIsNaN->4:Zero 74503
                Boolean _238Equal;// 118:FloatIsNaN->3:Equal 74500
                Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 74474
                Int32 _241Zero;// 48:First->2:Zero 74821
                Single _242At;// 48:First->0:At 74820
                Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 74473
                IArray[Single] _244Unit;// 43:Array2->2:Unit 74471
                Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 74823
                IArray[Single] _246Append;// 43:Array2->3:Append 74470
                _0One = One();
                _1At = At(x0, _0One);
                _2AsInt = AsInt(_1At);
                _3At = At(_13Map, _2AsInt);
                _4Constant = 4096;
                _5At = At(_23GenerateN, _2AsInt);
                _6X = X(_5At);
                _7Unit = Unit(_6X);
                _8Y = Y(_5At);
                _9Append = Append(_7Unit, _8Y);
                _10Z = Z(_5At);
                _11Append = Append(_9Append, _10Z);
                _12Zero = Zero();
                _13At = At(_11Append, _12Zero);
                _14Add = Add(_4Constant, _13At);
                _15Floor = Floor(_14Add);
                _16Constant = 255;
                _17And = And(_15Floor, _16Constant);
                _18One = One();
                _19Add = Add(_17And, _18One);
                _20And = And(_19Add, _16Constant);
                _21Pair = Pair(_17And, _20And);
                _22Floor = Floor(_14Add);
                _23AsFloat = AsFloat(_22Floor);
                _24Subtract = Subtract(_14Add, _23AsFloat);
                _25FloatOne = FloatOne();
                _26Subtract = Subtract(_24Subtract, _25FloatOne);
                _27Pair = Pair(_24Subtract, _26Subtract);
                _28Pair = Pair(_21Pair, _27Pair);
                _29PairItem2 = PairItem2(_28Pair);
                _30PairItem1 = PairItem1(_29PairItem2);
                _31PairItem2 = PairItem2(x1);
                _32PairItem1 = PairItem1(_28Pair);
                _33PairItem1 = PairItem1(_32PairItem1);
                _34At = At(_31PairItem2, _33PairItem1);
                _35Constant = 4096;
                _36X = X(_5At);
                _37Unit = Unit(_36X);
                _38Y = Y(_5At);
                _39Append = Append(_37Unit, _38Y);
                _40Z = Z(_5At);
                _41Append = Append(_39Append, _40Z);
                _42One = One();
                _43At = At(_41Append, _42One);
                _44Add = Add(_35Constant, _43At);
                _45Floor = Floor(_44Add);
                _46Constant = 255;
                _47And = And(_45Floor, _46Constant);
                _48One = One();
                _49Add = Add(_47And, _48One);
                _50And = And(_49Add, _46Constant);
                _51Pair = Pair(_47And, _50And);
                _52Floor = Floor(_44Add);
                _53AsFloat = AsFloat(_52Floor);
                _54Subtract = Subtract(_44Add, _53AsFloat);
                _55FloatOne = FloatOne();
                _56Subtract = Subtract(_54Subtract, _55FloatOne);
                _57Pair = Pair(_54Subtract, _56Subtract);
                _58Pair = Pair(_51Pair, _57Pair);
                _59PairItem1 = PairItem1(_58Pair);
                _60PairItem1 = PairItem1(_59PairItem1);
                _61Add = Add(_34At, _60PairItem1);
                _62At = At(_31PairItem2, _61Add);
                _63Constant = 4096;
                _64X = X(_5At);
                _65Unit = Unit(_64X);
                _66Y = Y(_5At);
                _67Append = Append(_65Unit, _66Y);
                _68Z = Z(_5At);
                _69Append = Append(_67Append, _68Z);
                _70Two = Two();
                _71At = At(_69Append, _70Two);
                _72Add = Add(_63Constant, _71At);
                _73Floor = Floor(_72Add);
                _74Constant = 255;
                _75And = And(_73Floor, _74Constant);
                _76One = One();
                _77Add = Add(_75And, _76One);
                _78And = And(_77Add, _74Constant);
                _79Pair = Pair(_75And, _78And);
                _80Floor = Floor(_72Add);
                _81AsFloat = AsFloat(_80Floor);
                _82Subtract = Subtract(_72Add, _81AsFloat);
                _83FloatOne = FloatOne();
                _84Subtract = Subtract(_82Subtract, _83FloatOne);
                _85Pair = Pair(_82Subtract, _84Subtract);
                _86Pair = Pair(_79Pair, _85Pair);
                _87PairItem1 = PairItem1(_86Pair);
                _88PairItem1 = PairItem1(_87PairItem1);
                _89Add = Add(_62At, _88PairItem1);
                _90At = At(_24PairItem1, _89Add);
                _91Zero = Zero();
                _92At = At(_90At, _91Zero);
                _93Multiply = Multiply(_30PairItem1, _92At);
                _94PairItem2 = PairItem2(_58Pair);
                _95PairItem1 = PairItem1(_94PairItem2);
                _96One = One();
                _97At = At(_90At, _96One);
                _98Multiply = Multiply(_95PairItem1, _97At);
                _99Add = Add(_93Multiply, _98Multiply);
                _100PairItem2 = PairItem2(_86Pair);
                _101PairItem1 = PairItem1(_100PairItem2);
                _102Two = Two();
                _103At = At(_90At, _102Two);
                _104Multiply = Multiply(_101PairItem1, _103At);
                _105Add = Add(_99Add, _104Multiply);
                _106PairItem2 = PairItem2(_29PairItem2);
                _107PairItem2 = PairItem2(_32PairItem1);
                _108At = At(_31PairItem2, _107PairItem2);
                _109Add = Add(_108At, _60PairItem1);
                _110At = At(_31PairItem2, _109Add);
                _111Add = Add(_110At, _88PairItem1);
                _112At = At(_24PairItem1, _111Add);
                _113Zero = Zero();
                _114At = At(_112At, _113Zero);
                _115Multiply = Multiply(_106PairItem2, _114At);
                _116One = One();
                _117At = At(_112At, _116One);
                _118Multiply = Multiply(_95PairItem1, _117At);
                _119Add = Add(_115Multiply, _118Multiply);
                _120Two = Two();
                _121At = At(_112At, _120Two);
                _122Multiply = Multiply(_101PairItem1, _121At);
                _123Add = Add(_119Add, _122Multiply);
                _124Constant = 3;
                _125Constant = 2;
                _126Multiply = Multiply(_125Constant, _30PairItem1);
                _127Subtract = Subtract(_124Constant, _126Multiply);
                _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                _129Multiply = Multiply(_127Subtract, _128Multiply);
                _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                _131PairItem2 = PairItem2(_59PairItem1);
                _132Add = Add(_34At, _131PairItem2);
                _133At = At(_31PairItem2, _132Add);
                _134Add = Add(_133At, _88PairItem1);
                _135At = At(_24PairItem1, _134Add);
                _136Zero = Zero();
                _137At = At(_135At, _136Zero);
                _138Multiply = Multiply(_30PairItem1, _137At);
                _139PairItem2 = PairItem2(_94PairItem2);
                _140One = One();
                _141At = At(_135At, _140One);
                _142Multiply = Multiply(_139PairItem2, _141At);
                _143Add = Add(_138Multiply, _142Multiply);
                _144Two = Two();
                _145At = At(_135At, _144Two);
                _146Multiply = Multiply(_101PairItem1, _145At);
                _147Add = Add(_143Add, _146Multiply);
                _148Add = Add(_108At, _131PairItem2);
                _149At = At(_31PairItem2, _148Add);
                _150Add = Add(_149At, _88PairItem1);
                _151At = At(_24PairItem1, _150Add);
                _152Zero = Zero();
                _153At = At(_151At, _152Zero);
                _154Multiply = Multiply(_106PairItem2, _153At);
                _155One = One();
                _156At = At(_151At, _155One);
                _157Multiply = Multiply(_139PairItem2, _156At);
                _158Add = Add(_154Multiply, _157Multiply);
                _159Two = Two();
                _160At = At(_151At, _159Two);
                _161Multiply = Multiply(_101PairItem1, _160At);
                _162Add = Add(_158Add, _161Multiply);
                _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                _164Constant = 3;
                _165Constant = 2;
                _166Multiply = Multiply(_165Constant, _95PairItem1);
                _167Subtract = Subtract(_164Constant, _166Multiply);
                _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                _169Multiply = Multiply(_167Subtract, _168Multiply);
                _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                _171PairItem2 = PairItem2(_87PairItem1);
                _172Add = Add(_62At, _171PairItem2);
                _173At = At(_24PairItem1, _172Add);
                _174Zero = Zero();
                _175At = At(_173At, _174Zero);
                _176Multiply = Multiply(_30PairItem1, _175At);
                _177One = One();
                _178At = At(_173At, _177One);
                _179Multiply = Multiply(_95PairItem1, _178At);
                _180Add = Add(_176Multiply, _179Multiply);
                _181PairItem2 = PairItem2(_100PairItem2);
                _182Two = Two();
                _183At = At(_173At, _182Two);
                _184Multiply = Multiply(_181PairItem2, _183At);
                _185Add = Add(_180Add, _184Multiply);
                _186Add = Add(_110At, _171PairItem2);
                _187At = At(_24PairItem1, _186Add);
                _188Zero = Zero();
                _189At = At(_187At, _188Zero);
                _190Multiply = Multiply(_106PairItem2, _189At);
                _191One = One();
                _192At = At(_187At, _191One);
                _193Multiply = Multiply(_95PairItem1, _192At);
                _194Add = Add(_190Multiply, _193Multiply);
                _195Two = Two();
                _196At = At(_187At, _195Two);
                _197Multiply = Multiply(_181PairItem2, _196At);
                _198Add = Add(_194Add, _197Multiply);
                _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                _200Add = Add(_133At, _171PairItem2);
                _201At = At(_24PairItem1, _200Add);
                _202Zero = Zero();
                _203At = At(_201At, _202Zero);
                _204Multiply = Multiply(_30PairItem1, _203At);
                _205One = One();
                _206At = At(_201At, _205One);
                _207Multiply = Multiply(_139PairItem2, _206At);
                _208Add = Add(_204Multiply, _207Multiply);
                _209Two = Two();
                _210At = At(_201At, _209Two);
                _211Multiply = Multiply(_181PairItem2, _210At);
                _212Add = Add(_208Add, _211Multiply);
                _213Add = Add(_149At, _171PairItem2);
                _214At = At(_24PairItem1, _213Add);
                _215Zero = Zero();
                _216At = At(_214At, _215Zero);
                _217Multiply = Multiply(_106PairItem2, _216At);
                _218One = One();
                _219At = At(_214At, _218One);
                _220Multiply = Multiply(_139PairItem2, _219At);
                _221Add = Add(_217Multiply, _220Multiply);
                _222Two = Two();
                _223At = At(_214At, _222Two);
                _224Multiply = Multiply(_181PairItem2, _223At);
                _225Add = Add(_221Add, _224Multiply);
                _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                _228Constant = 3;
                _229Constant = 2;
                _230Multiply = Multiply(_229Constant, _101PairItem1);
                _231Subtract = Subtract(_228Constant, _230Multiply);
                _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                _233Multiply = Multiply(_231Subtract, _232Multiply);
                _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                _235NaN = NaN();
                _236Compare = Compare(_234FloatLerp, _235NaN);
                _237Zero = Zero();
                _238Equal = Equal(_236Compare, _237Zero);
                _240Multiply = Multiply(_3At, if (_238Equal)
                    {
                      Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 74809
                      _239FloatZero = FloatZero();
                      _239FloatZero;
                      }else
                    {
                      _234FloatLerp;
                      });
                _241Zero = Zero();
                _242At = At(x0, _241Zero);
                _243Add = Add(_240Multiply, _242At);
                _244Unit = Unit(_243Add);
                _245Add = Add(_1At, _25FloatOne);
                _246Append = Append(_244Unit, _245Add);
                _246Append;
                });
            _27Count = Count(_26GenerateN);
            _28One = One();
            _29Subtract = Subtract(_27Count, _28One);
            _30At = At(_26GenerateN, _29Subtract);
            _31Zero = Zero();
            _32At = At(_30At, _31Zero);
            _32At;
            }, _11X, _8Y);
        _14Vector3 = Vector3(_10Apply2, _12Apply2, _13Apply2);
        _15Vector3 = Vector3(strengthX, strengthY, strengthZ);
        _16Multiply = Multiply(_14Vector3, _15Vector3);
        _17Add = Add(_2Transform, _16Multiply);
        _18Transform = Transform(_17Add, _0MatrixIdentity);
        _18Transform;
        }, _45Pair);
    _47Map = Map(_18SplineVerticesBuffer, _46Bind2of2);
    _48SplineSegmentIndices = SplineSegmentIndices(_17CombineSplines);
    _49SplineTangentsBuffer = SplineTangentsBuffer(_17CombineSplines);
    _50SplineTangentIndices = SplineTangentIndices(_17CombineSplines);
    _51SplineSegmentTypes = SplineSegmentTypes(_17CombineSplines);
    _52CreateSplineFromBuffers = CreateSplineFromBuffers(_47Map, _48SplineSegmentIndices, _49SplineTangentsBuffer, _50SplineTangentIndices, _51SplineSegmentTypes);
    _53IgnoreSecond = IgnoreSecond(_52CreateSplineFromBuffers, shapeTransform);
    _53IgnoreSecond;
    }