(InstanceState state, TriMesh mesh, Boolean additive, Boolean invert, BoundingBox boundingBox, Single box percentage, Single falloff, Single bubble, Single pinch) => 
  {
    Int32 _0Zero;// 1:SetSoftSelection->2:Zero 108137
    IArray[Vector3] _1MeshVertices;// 1:SoftSelectionFromBox-ext->5:MeshVertices 108177
    BoundingSphere _2SphereFromBox;// 9:BoundingBoxCenter->2:SphereFromBox 108196
    Vector3 _3SphereCenter;// 9:BoundingBoxCenter->3:SphereCenter 108195
    Vector3 _4BoxMax;// 1:BoundingBoxExtent->1:BoxMax 108201
    Vector3 _5BoxMin;// 1:BoundingBoxExtent->2:BoxMin 108202
    Vector3 _6Subtract;// 1:BoundingBoxExtent->3:Subtract 108200
    Single _7Constant;// 4:DivideBy100Float->0:Constant 108208
    Single _8Divide;// 4:DivideBy100Float->1:Divide 108207
    Vector3 _9MultiplyByScalar;// 3:BoxScaleBy-ext->2:MultiplyByScalar 108198
    Single _10Constant;// 3:BoxScaleBy-ext->0:Constant 108203
    Vector3 _11DivideByScalar;// 3:BoxScaleBy-ext->5:DivideByScalar 108197
    Vector3 _12Subtract;// 3:BoxScaleBy-ext->4:Subtract 108193
    Vector3 _13Add;// 3:BoxScaleBy-ext->10:Add 108204
    BoundingBox _14Box;// 3:BoxScaleBy-ext->3:Box 108192
    IArray[Single] _15Map;// 1:SoftSelectionFromBox-ext->6:Map 108176
    IArray[Single] _35Map;// 7:SoftSelectionUpdate-ext->11:Map 108138
    TriMesh _36SetPerVertexData;// 1:SetSoftSelection->3:SetPerVertexData 108136
    _0Zero = Zero();
    _1MeshVertices = MeshVertices(mesh);
    _2SphereFromBox = SphereFromBox(boundingBox);
    _3SphereCenter = SphereCenter(_2SphereFromBox);
    _4BoxMax = BoxMax(boundingBox);
    _5BoxMin = BoxMin(boundingBox);
    _6Subtract = Subtract(_4BoxMax, _5BoxMin);
    _7Constant = 100;
    _8Divide = Divide(box percentage, _7Constant);
    _9MultiplyByScalar = MultiplyByScalar(_6Subtract, _8Divide);
    _10Constant = 2;
    _11DivideByScalar = DivideByScalar(_9MultiplyByScalar, _10Constant);
    _12Subtract = Subtract(_3SphereCenter, _11DivideByScalar);
    _13Add = Add(_3SphereCenter, _11DivideByScalar);
    _14Box = Box(_12Subtract, _13Add);
    _15Map = Map(_1MeshVertices, (Vector3 x0) => 
      {
        Vector3 _0BoxMin;// 3:BoxClamp-ext->5:BoxMin 108185
        Vector3 _1BoxMax;// 3:BoxClamp-ext->3:BoxMax 108186
        Vector3 _2Clamp;// 3:BoxClamp-ext->1:Clamp 108184
        Single _3Distance;// 2:DistancePointBox-ext->2:Distance 108181
        Single _4AffectRegion;// 1:SoftSelectionFromBox-ext->1:AffectRegion 108178
        _0BoxMin = BoxMin(_14Box);
        _1BoxMax = BoxMax(_14Box);
        _2Clamp = Clamp(x0, _0BoxMin, _1BoxMax);
        _3Distance = Distance(x0, _2Clamp);
        _4AffectRegion = AffectRegion(_3Distance, falloff, bubble, pinch);
        _4AffectRegion;
        });
    _35Map = Map(if (additive)
      {
        String _18Constant;// 0:HasPerVertexChannel->0:Constant 108151
        Int32 _19Zero;// 2:HasSoftSelection->3:Zero 108153
        String _20ToString;// 0:HasPerVertexChannel->7:ToString 108152
        String _21ConcatenateStrings;// 0:HasPerVertexChannel->3:ConcatenateStrings 108150
        Boolean _22IsChannelAvailable;// 0:HasPerVertexChannel->4:IsChannelAvailable 108149
        IArray[Single] _28Pass-through: array;// 0:Pass-through: array 108140
        IArray[Single] _31Pass-through: array;// 0:Pass-through: array 108141
        IArray[Single] _32Combine;// 7:ArrayAdd-ext->2:Combine 108142
        _18Constant = per-vertex data channel ;
        _19Zero = Zero();
        _20ToString = ToString(_19Zero);
        _21ConcatenateStrings = ConcatenateStrings(_18Constant, _20ToString);
        _22IsChannelAvailable = IsChannelAvailable(mesh, _21ConcatenateStrings);
        _28Pass-through: array = if (_22IsChannelAvailable)
          {
            Int32 _23Zero;// 1:SoftSelection->2:Zero 108156
            IArray[Single] _24PerVertexData;// 1:SoftSelection->3:PerVertexData 108155
            _23Zero = Zero();
            _24PerVertexData = PerVertexData(mesh, _23Zero);
            _24PerVertexData;
            }else
          {
            IArray[Vector3] _25MeshVertices;// 3:SoftSelectionOrZeros-ext->4:MeshVertices 108161
            Single _26FloatZero;// 3:SoftSelectionOrZeros-ext->5:FloatZero 108162
            IArray[Single] _27Map;// 6:MapIgnore-ext->3:Map 108159
            _25MeshVertices = MeshVertices(mesh);
            _26FloatZero = FloatZero();
            _27Map = Map(_25MeshVertices, (Vector3 x0) => 
              {
                Single _0IgnoreSecond;// 6:MapIgnore-ext->5:IgnoreSecond 108160
                _0IgnoreSecond = IgnoreSecond(_26FloatZero, x0);
                _0IgnoreSecond;
                });
            _27Map;
            };
        _31Pass-through: array = if (invert)
          {
            Func[Single, Single] _29Pass-through: function1;// 0:Pass-through: function1 108165
            IArray[Single] _30Map;// 8:MapConditional-ext->4:Map 108167
            _29Pass-through: function1 = (Single x0) => 
              {
                Single _0Constant;// 6:OneMinus->0:Constant 108170
                Single _1Subtract;// 6:OneMinus->2:Subtract 108169
                _0Constant = 1;
                _1Subtract = Subtract(_0Constant, x0);
                _1Subtract;
                };
            _30Map = Map(_15Map, _29Pass-through: function1);
            _30Map;
            }else
          {
            _15Map;
            };
        _32Combine = Combine(_28Pass-through: array, _31Pass-through: array, (Single x0, Single x1) => 
          {
            Single _0Add;// 7:ArrayAdd-ext->5:Add 108143
            _0Add = Add(x0, x1);
            _0Add;
            });
        _32Combine;
        }else
      {
        if (invert)
          {
            Func[Single, Single] _33Pass-through: function1;// 0:Pass-through: function1 108165
            IArray[Single] _34Map;// 8:MapConditional-ext->4:Map 108167
            _33Pass-through: function1 = (Single x0) => 
              {
                Single _0Constant;// 6:OneMinus->0:Constant 108170
                Single _1Subtract;// 6:OneMinus->2:Subtract 108169
                _0Constant = 1;
                _1Subtract = Subtract(_0Constant, x0);
                _1Subtract;
                };
            _34Map = Map(_15Map, _33Pass-through: function1);
            _34Map;
            }else
          {
            _15Map;
            };
        }, (Single x0) => 
      {
        Single _0Constant;// 10:ClampFloatToOne->0:Constant 108173
        Single _1Constant;// 10:ClampFloatToOne->0:Constant 108175
        Single _2GreaterFloat;// 10:ClampFloatToOne->1:GreaterFloat 108174
        Single _3LesserFloat;// 10:ClampFloatToOne->2:LesserFloat 108172
        _0Constant = 1;
        _1Constant = 0;
        _2GreaterFloat = GreaterFloat(_1Constant, x0);
        _3LesserFloat = LesserFloat(_0Constant, _2GreaterFloat);
        _3LesserFloat;
        });
    _36SetPerVertexData = SetPerVertexData(mesh, _0Zero, _35Map);
    _36SetPerVertexData;
    }