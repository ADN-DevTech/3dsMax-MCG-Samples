(InstanceState state, INode cloneSource, INode fluxSource, Int32 channel) => 
  {
    Func[INode] _0Bind;// 0:ClonerInstanceNodeWithController.ext->6:Bind 53803
    Boolean _1IsValidNode;// 1:CheckNodeValidity->0:IsValidNode 53850
    Boolean _2Not;// 1:CheckNodeValidity->1:Not 53849
    INode _3ExitIf;// 1:CheckNodeValidity->2:ExitIf 53848
    TriMesh _4MeshFromNode;// 0:ClonerInstanceNodeWithController.ext->2:MeshFromNode 53846
    MapChannel _5GetMapChannel;// 3:MatricesFromMapChannel.ext->9:GetMapChannel 53818
    IArray[Vector3] _6MapChannelVertexBuffer;// 3:MatricesFromMapChannel.ext->8:MapChannelVertexBuffer 53817
    Int32 _7Count;// 2:Slices->2:Count 53814
    Int32 _8Constant;// 3:MatricesFromMapChannel.ext->0:Constant 53819
    Int32 _9Divide;// 2:Slices->3:Divide 53813
    IArray[Int32] _10Range;// 2:Slices->4:Range 53812
    IArray[IArray[Vector3]] _11Map;// 2:Slices->5:Map 53811
    IArray[Matrix] _12Map;// 3:MatricesFromMapChannel.ext->5:Map 53808
    Int32 _13Count;// 0:ClonerInstanceNodeWithController.ext->7:Count 53805
    IArray[INode] _14ArrayOfFunction;// 0:ClonerInstanceNodeWithController.ext->34:ArrayOfFunction 53802
    IArray[INode] _15Combine;// 0:ClonerInstanceNodeWithController.ext->13:Combine 53801
    IArray[Int32] _16Indices;// 30:MapWithIndexes->3:Indices 53800
    String _17Constant;// 0:ClonerInstanceNodeWithController.ext->0:Constant 53857
    String _18Constant;// 0:ClonerInstanceNodeWithController.ext->0:Constant 53858
    String _19Constant;// 0:ClonerInstanceNodeWithController.ext->0:Constant 53865
    String _20Constant;// 31:NodeNameToMAXScript.ext->0:Constant 53869
    String _21NodeName;// 0:ClonerInstanceNodeWithController.ext->27:NodeName 53871
    String _22ConcatenateStrings;// 31:NodeNameToMAXScript.ext->1:ConcatenateStrings 53868
    String _23Constant;// 31:NodeNameToMAXScript.ext->0:Constant 53870
    String _24ConcatenateStrings;// 31:NodeNameToMAXScript.ext->5:ConcatenateStrings 53867
    String _25Constant;// 0:ClonerInstanceNodeWithController.ext->0:Constant 53872
    String _26ToString;// 0:ClonerInstanceNodeWithController.ext->28:ToString 53873
    String _27Constant;// 0:ClonerInstanceNodeWithController.ext->0:Constant 53874
    Func[INode, Int32, FPValue] _28Pass-through: any;// 0:Pass-through: any 53798
    IArray[FPValue] _29Combine;// 30:MapWithIndexes->2:Combine 53799
    _0Bind = Bind((INode x0) => 
      {
        INode _0CloneAsInstance;// 0:ClonerInstanceNodeWithController.ext->33:CloneAsInstance 53804
        _0CloneAsInstance = CloneAsInstance(x0);
        _0CloneAsInstance;
        }, cloneSource);
    _1IsValidNode = IsValidNode(fluxSource);
    _2Not = Not(_1IsValidNode);
    _3ExitIf = ExitIf(fluxSource, _2Not);
    _4MeshFromNode = MeshFromNode(_3ExitIf);
    _5GetMapChannel = GetMapChannel(_4MeshFromNode, channel);
    _6MapChannelVertexBuffer = MapChannelVertexBuffer(_5GetMapChannel);
    _7Count = Count(_6MapChannelVertexBuffer);
    _8Constant = 4;
    _9Divide = Divide(_7Count, _8Constant);
    _10Range = Range(_9Divide);
    _11Map = Map(_10Range, (Int32 x0) => 
      {
        Int32 _0Multiply;// 2:Slices->6:Multiply 53816
        IArray[Vector3] _1Slice;// 2:Slices->0:Slice 53815
        _0Multiply = Multiply(_8Constant, x0);
        _1Slice = Slice(_6MapChannelVertexBuffer, _0Multiply, _8Constant);
        _1Slice;
        });
    _12Map = Map(_11Map, (IArray[Vector3] x0) => 
      {
        Matrix _0MatrixIdentity;// 0:SetMatrixFrom3Rows->23:MatrixIdentity 53828
        Int32 _1One;// 0:SetMatrixFrom3Rows->24:One 53829
        Int32 _2Zero;// 6:MatrixFromRows.ext->7:Zero 53833
        Vector3 _3At;// 6:MatrixFromRows.ext->3:At 53832
        Matrix _4SetMatrixRow;// 0:SetMatrixFrom3Rows->22:SetMatrixRow 53827
        Int32 _5Two;// 0:SetMatrixFrom3Rows->26:Two 53830
        Int32 _6One;// 8:PlusOne->1:One 53837
        Int32 _7Add;// 8:PlusOne->0:Add 53836
        Vector3 _8At;// 6:MatrixFromRows.ext->4:At 53834
        Matrix _9SetMatrixRow;// 0:SetMatrixFrom3Rows->27:SetMatrixRow 53826
        Int32 _10Constant;// 25:Three->0:Constant 53831
        Int32 _11One;// 9:PlusOne->1:One 53841
        Int32 _12Add;// 9:PlusOne->0:Add 53840
        Vector3 _13At;// 6:MatrixFromRows.ext->5:At 53838
        Matrix _14SetMatrixRow;// 0:SetMatrixFrom3Rows->28:SetMatrixRow 53825
        Int32 _15One;// 10:PlusOne->1:One 53845
        Int32 _16Add;// 10:PlusOne->0:Add 53844
        Vector3 _17At;// 6:MatrixFromRows.ext->6:At 53842
        Matrix _18SetMatrixTranslation;// 6:MatrixFromRows.ext->2:SetMatrixTranslation 53821
        _0MatrixIdentity = MatrixIdentity();
        _1One = One();
        _2Zero = Zero();
        _3At = At(x0, _2Zero);
        _4SetMatrixRow = SetMatrixRow(_0MatrixIdentity, _1One, _3At);
        _5Two = Two();
        _6One = One();
        _7Add = Add(_2Zero, _6One);
        _8At = At(x0, _7Add);
        _9SetMatrixRow = SetMatrixRow(_4SetMatrixRow, _5Two, _8At);
        _10Constant = 3;
        _11One = One();
        _12Add = Add(_7Add, _11One);
        _13At = At(x0, _12Add);
        _14SetMatrixRow = SetMatrixRow(_9SetMatrixRow, _10Constant, _13At);
        _15One = One();
        _16Add = Add(_12Add, _15One);
        _17At = At(x0, _16Add);
        _18SetMatrixTranslation = SetMatrixTranslation(_14SetMatrixRow, _17At);
        _18SetMatrixTranslation;
        });
    _13Count = Count(_12Map);
    _14ArrayOfFunction = ArrayOfFunction(_0Bind, _13Count);
    _15Combine = Combine(_14ArrayOfFunction, _12Map, (INode x0, Matrix x1) => 
      {
        INode _0SetNodeTransform;// 0:ClonerInstanceNodeWithController.ext->5:SetNodeTransform 53851
        _0SetNodeTransform = SetNodeTransform(x0, x1);
        _0SetNodeTransform;
        });
    _16Indices = Indices(_15Combine);
    _17Constant = $current.transform.controller = Flux2_Controller source:$source channel:$channel n:$n;
    _18Constant = $current;
    _19Constant = $source;
    _20Constant = $';
    _21NodeName = NodeName(fluxSource);
    _22ConcatenateStrings = ConcatenateStrings(_20Constant, _21NodeName);
    _23Constant = ';
    _24ConcatenateStrings = ConcatenateStrings(_22ConcatenateStrings, _23Constant);
    _25Constant = $channel;
    _26ToString = ToString(channel);
    _27Constant = $n;
    _28Pass-through: any = (INode x0, Int32 x1) => 
      {
        String _0Constant;// 14:NodeNameToMAXScript.ext->0:Constant 53862
        String _1NodeName;// 0:ClonerInstanceNodeWithController.ext->15:NodeName 53864
        String _2ConcatenateStrings;// 14:NodeNameToMAXScript.ext->1:ConcatenateStrings 53861
        String _3Constant;// 14:NodeNameToMAXScript.ext->0:Constant 53863
        String _4ConcatenateStrings;// 14:NodeNameToMAXScript.ext->5:ConcatenateStrings 53860
        String _5ReplaceString;// 0:ClonerInstanceNodeWithController.ext->20:ReplaceString 53856
        String _6ReplaceString;// 0:ClonerInstanceNodeWithController.ext->16:ReplaceString 53855
        String _7ReplaceString;// 0:ClonerInstanceNodeWithController.ext->18:ReplaceString 53854
        String _8ToString;// 0:ClonerInstanceNodeWithController.ext->26:ToString 53875
        String _9ReplaceString;// 0:ClonerInstanceNodeWithController.ext->22:ReplaceString 53853
        FPValue _10EvalMAXScript;// 0:ClonerInstanceNodeWithController.ext->29:EvalMAXScript 53852
        _0Constant = $';
        _1NodeName = NodeName(x0);
        _2ConcatenateStrings = ConcatenateStrings(_0Constant, _1NodeName);
        _3Constant = ';
        _4ConcatenateStrings = ConcatenateStrings(_2ConcatenateStrings, _3Constant);
        _5ReplaceString = ReplaceString(_17Constant, _18Constant, _4ConcatenateStrings);
        _6ReplaceString = ReplaceString(_5ReplaceString, _19Constant, _24ConcatenateStrings);
        _7ReplaceString = ReplaceString(_6ReplaceString, _25Constant, _26ToString);
        _8ToString = ToString(x1);
        _9ReplaceString = ReplaceString(_7ReplaceString, _27Constant, _8ToString);
        _10EvalMAXScript = EvalMAXScript(_9ReplaceString);
        _10EvalMAXScript;
        };
    _29Combine = Combine(_15Combine, _16Indices, _28Pass-through: any);
    _29Combine;
    }