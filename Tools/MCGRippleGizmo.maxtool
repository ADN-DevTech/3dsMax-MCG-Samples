<graph version="0.50" uuid="c26b1ec7-c249-4bcd-b3e4-b8002adf3fd2">
    <meta_info>
        <graph_version guid="80e59ee5-cdc3-406c-b260-413e4778fbd4" number="0.0.7" />
        <customui>--*****************************************************************************************************************&#x0A;-- MCG Ripple Gizmo Rollout&#x0A;-----------------------------------&#x0A;-- The following rollout template is intended to be copied into the Custom UI definition of an MCG .maxtool file:&#x0A;-- Edit &gt; Edit Graph Properties &gt; Custom UI &gt; Paste this code.&#x0A;-- &#x0A;-- To adapt this template to your own needs, modify the code contained within the &quot;Modifier Creation and Parameter Wiring&quot;&#x0A;-- section below. This rollout template assumes the parameters exposed by your gizmo match the ones defined on the &#x0A;-- modifier (so that they may be wired correctly).&#x0A;--*****************************************************************************************************************&#x0A;rollout params &quot;Parameters&quot; width:160 height:128&#x0A;(&#x09;&#x0A;&#x09;-- Define a  filter function to ensure the pick buttons below can only select geometry.&#x0A;&#x09;fn IsGeometry obj = (superclassof obj == GeometryClass)&#x0A;&#x09;&#x0A;&#x09;-- The string below will be replaced by the auto-generated UI definitions from MCG.&#x0A;&#x09;-- This way, we do not have to redefine the spinners and other UI elements expected by the plugin&apos;s parameter block.&#x0A;&#x09;&lt;&lt;ParamUIDefs&gt;&gt;&#x0A;&#x09;&#x0A;&#x09;-- Add the custom UI elements after the MCG UI definitions.&#x0A;&#x09;pickbutton &apos;updatePickBtn&apos; &quot;Update Box from Object&quot; width:155 height:16 message:&quot;Pick a Mesh&quot; filter:IsGeometry align:#left&#x0A;&#x09;pickbutton &apos;applyPickBtn&apos; &quot;Apply to Object&quot; width:155 height:16 message:&quot;Pick a Mesh&quot; filter:IsGeometry align:#left&#x0A;&#x09;&#x0A;&#x09;-- The string below will be replaced by the auto-generated UI element event handlers from MCG.&#x0A;&#x09;&lt;&lt;RolloutParamsHandlers&gt;&gt;&#x0A;&#x09;&#x0A;&#x09;-- Update the box corners with the given object&apos;s bounding box. This affects how the spline is generated within MCG.&#x0A;&#x09;fn UpdateBoundingBoxParams obj = (&#x0A;&#x09;&#x09;bb = nodeGetBoundingBox obj obj.transform&#x0A;&#x09;&#x09;min_point = bb[1]&#x0A;&#x09;&#x09;max_point = bb[2]&#x0A;&#x09;&#x09;&#x0A;&#x09;&#x09;minCorner.X = min_point[1]&#x0A;&#x09;&#x09;minCorner.Y = min_point[2]&#x0A;&#x09;&#x09;minCorner.Z = min_point[3]&#x0A;&#x09;&#x09;&#x0A;&#x09;&#x09;maxCorner.X = max_point[1]&#x0A;&#x09;&#x09;maxCorner.Y = max_point[2]&#x0A;&#x09;&#x09;maxCorner.Z = max_point[3]&#x0A;&#x09;)&#x0A;&#x09;&#x0A;&#x09;-- Apply the modifier to the given object.&#x0A;&#x09;fn ApplyMCGModifier obj = (&#x0A;&#x09;&#x09;&#x0A;&#x09;&#x09;-- Update the local bounding box parameters.&#x0A;&#x09;&#x09;UpdateBoundingBoxParams obj&#x0A;&#x09;&#x09;&#x0A;&#x09;&#x09;--*****************************************************************************************************************&#x0A;&#x09;&#x09;-- Modifier Creation and Parameter Wiring                                                                                                               *&#x0A;&#x09;&#x09;--*****************************************************************************************************************&#x0A;&#x09;&#x09;-- Create an instance of the associated modifier.&#x0A;&#x09;&#x09;-- If you are using this file as a template, change this to an instance of your custom modifier&#x0A;&#x09;&#x09;newMod = MCGRipple() &#x0A;&#x09;&#x09;&#x0A;&#x09;&#x09;-- Wire the current gizmo&apos;s parameters to the modifier&apos;s parameters.&#x0A;&#x09;&#x09;-- If you are using this file as a template, change the parameter wiring below to suit the parameters on your own modifier.&#x0A;&#x09;&#x09;--&#x0A;&#x09;&#x09;-- (!) Note: Due to a recently discovered issue (from Max 2014 through 2017),  paramWire.connect2way causes a crash&#x0A;&#x09;&#x09;-- when a wired object is cloned (this applies to non-MCG objects as well). As a workaround, we&apos;re using the more stable &#x0A;&#x09;&#x09;-- paramWire.connect instead. The limitation is that the modifier&apos;s parameters will now be driven by the gizmo exclusively.&#x0A; &#x09;&#x09;paramWire.connect owningNode.baseObject[#amplitude1] newMod[#amplitude1] &quot;amplitude1&quot;&#x0A;&#x09;&#x09;paramWire.connect owningNode.baseObject[#amplitude2] newMod[#amplitude2] &quot;amplitude2&quot;&#x0A;&#x09;&#x09;paramWire.connect owningNode.baseObject[#waveLength] newMod[#waveLength] &quot;waveLength&quot;&#x0A;&#x09;&#x09;paramWire.connect owningNode.baseObject[#phase] newMod[#phase] &quot;phase&quot;&#x0A;&#x09;&#x09;paramWire.connect owningNode.baseObject[#decay] newMod[#decay] &quot;decay&quot;&#x0A;&#x09;&#x09;--*****************************************************************************************************************&#x0A;&#x09;&#x09;&#x0A;&#x09;&#x09;-- Add the instance of the modifier&#x0A;&#x09;&#x09;addModifier obj newMod&#x0A;&#x09;&#x09;&#x0A;&#x09;&#x09;newMod.gizmo = owningNode&#x0A;&#x09;)&#x0A;&#x09;&#x0A;&#x09;-- Apply pick button event handler.&#x0A;&#x09;on applyPickBtn picked obj do&#x0A;&#x09;(&#x0A;&#x09;&#x09;ApplyMCGModifier obj&#x0A;&#x09;)&#x0A;&#x09;&#x0A;&#x09;-- Update pick button event handler.&#x0A;&#x09;on updatePickBtn picked obj do&#x0A;&#x09;(&#x0A;&#x09;&#x09;UpdateBoundingBoxParams obj&#x0A;&#x09;)&#x0A;)&#x0A;</customui>
    </meta_info>
    <nodes>
        <node operator="Shape: Matrix" id="3" position="1329:769" size="140:91" />
        <node operator="Parameter: Int32" id="14" name="numSubdivisions" min_value="2" max_value="100" default_value="20" position="560:540" size="140:175" />
        <node operator="SplineBoxPrimitive" id="2" position="820:380" size="140:154" />
        <node operator="IgnoreSecond" id="17" position="1520:580" size="140:133" />
        <node operator="Output: shape" id="1" position="1700:620" size="140:70" />
        <node operator="SinWaveSpline" id="4" position="1320:440" size="140:238" />
        <node operator="Parameter: Single" id="18" name="waveLength" min_value="-10000" max_value="10000" default_value="10" system_units_value="true" position="820:980" size="140:196" />
        <node operator="Divide" id="19" position="1040:1420" size="140:133" />
        <node operator="Parameter: Single" id="20" name="amplitude1" min_value="-10000" max_value="10000" default_value="0" system_units_value="true" position="820:620" size="140:196" />
        <node operator="Constant" id="21" value="1000.0" position="820:1540" size="140:91" />
        <node operator="Parameter: Single" id="23" name="decay" min_value="-10000" max_value="10000" default_value="0" system_units_value="false" position="820:1360" size="140:196" />
        <node operator="Parameter: Single" id="27" name="phase" min_value="-10000" max_value="10000" default_value="0" system_units_value="false" position="820:1180" size="140:196" />
        <node operator="Parameter: Single" id="28" name="amplitude2" min_value="-10000" max_value="10000" default_value="2" system_units_value="true" position="820:800" size="140:196" />
        <node operator="MatrixIdentity" id="29" position="820:540" size="140:91" />
        <node operator="Parameter: Vector3" id="15" name="minCorner" min_value="[-1000000,-1000000,-1000000]" max_value="[1000000,1000000,1000000]" default_value="[-10,-10,0]" position="560:180" size="140:175" />
        <node operator="Parameter: Vector3" id="0" name="maxCorner" min_value="[-1000000,-1000000,-1000000]" max_value="[1000000,1000000,1000000]" default_value="[10,10,40]" position="560:360" size="140:175" />
        <node groupnode="Required" id="22" position="1320:680" size="158:189" bg_color="#ffc0c0c0">
            <comment>We need this node to ensure the plugin&apos;s owningNode variable gets instantiated.</comment>
            <nodes>3</nodes>
        </node>
    </nodes>
    <connections>
        <connection sourcenode="15" sourceport="0" destnode="2" destport="0" />
        <connection sourcenode="0" sourceport="0" destnode="2" destport="1" />
        <connection sourcenode="14" sourceport="0" destnode="2" destport="2" />
        <connection sourcenode="4" sourceport="0" destnode="17" destport="0" />
        <connection sourcenode="3" sourceport="0" destnode="17" destport="1" />
        <connection sourcenode="17" sourceport="0" destnode="1" destport="0" />
        <connection sourcenode="2" sourceport="0" destnode="4" destport="0" />
        <connection sourcenode="29" sourceport="0" destnode="4" destport="1" />
        <connection sourcenode="20" sourceport="0" destnode="4" destport="2" />
        <connection sourcenode="28" sourceport="0" destnode="4" destport="3" />
        <connection sourcenode="18" sourceport="0" destnode="4" destport="4" />
        <connection sourcenode="27" sourceport="0" destnode="4" destport="5" />
        <connection sourcenode="19" sourceport="0" destnode="4" destport="6" />
        <connection sourcenode="23" sourceport="0" destnode="19" destport="0" />
        <connection sourcenode="21" sourceport="0" destnode="19" destport="1" />
    </connections>
</graph>
