(InstanceState state, TriMesh mesh, Int32 numIterations, Single roughness, Int32 phase, Single frequency, Single scale, Single strengthX, Single strengthY, Single strengthZ, Int32 seed, Boolean use gizmo node, INode gizmo node, Matrix modifierTransform) => 
  {
    String _0Constant;// 0:HasPerVertexChannel->0:Constant 55067
    Int32 _1Zero;// 4:HasSoftSelection->3:Zero 55069
    String _2ToString;// 0:HasPerVertexChannel->7:ToString 55068
    String _3ConcatenateStrings;// 0:HasPerVertexChannel->3:ConcatenateStrings 55066
    Boolean _4IsChannelAvailable;// 0:HasPerVertexChannel->4:IsChannelAvailable 55065
    TriMesh _5IfThen;// 3:MeshSetVertices-ext->10:IfThen 55061
    _0Constant = per-vertex data channel ;
    _1Zero = Zero();
    _2ToString = ToString(_1Zero);
    _3ConcatenateStrings = ConcatenateStrings(_0Constant, _2ToString);
    _4IsChannelAvailable = IsChannelAvailable(mesh, _3ConcatenateStrings);
    _5IfThen = IfThen(_4IsChannelAvailable, () => 
      {
        IArray[Vector3] _0MeshVertices;// 3:MeshSetVertices-ext->0:MeshVertices 55076
        IArray[Vector3] _1MeshVertices;// 2:DeformVertices-ext->4:MeshVertices 55082
        Int32 _2Constant;// 72:NoiseDeformerNoiseInit-ext->0:Constant 55522
        Int32 _3One;// 126:PlusOne->1:One 55520
        Int32 _4Add;// 126:PlusOne->0:Add 55519
        IArray[Int32] _5Range;// 72:NoiseDeformerNoiseInit-ext->93:Range 55517
        Int32 _6Constant;// 72:NoiseDeformerNoiseInit-ext->0:Constant 55544
        IArray[Int32] _7Range;// 72:NoiseDeformerNoiseInit-ext->105:Range 55543
        IArray[IArray[Single]] _8Map;// 72:NoiseDeformerNoiseInit-ext->94:Map 55516
        IArray[IArray[Single]] _9Concatenate;// 72:NoiseDeformerNoiseInit-ext->70:Concatenate 55514
        IArray[Int32] _10Indices;// 72:NoiseDeformerNoiseInit-ext->2:Indices 55568
        Int32 _11Add;// 72:NoiseDeformerNoiseInit-ext->21:Add 55571
        Int32 _12Two;// 72:NoiseDeformerNoiseInit-ext->24:Two 55574
        Int32 _13Add;// 72:NoiseDeformerNoiseInit-ext->22:Add 55570
        IArray[Int32] _14Range;// 72:NoiseDeformerNoiseInit-ext->25:Range 55569
        Int32 _15Count;// 3:LastIndex->2:Count 55600
        Int32 _16One;// 3:MinusOne->2:One 55599
        Int32 _17Subtract;// 3:MinusOne->1:Subtract 55598
        Int32 _18At;// 35:Last->0:At 55595
        IArray[Int32] _19Map;// 72:NoiseDeformerNoiseInit-ext->20:Map 55586
        IArray[Int32] _20Aggregate;// 72:NoiseDeformerNoiseInit-ext->1:Aggregate 55566
        Int32 _21Two;// 72:NoiseDeformerNoiseInit-ext->67:Two 55614
        Int32 _22Add;// 72:NoiseDeformerNoiseInit-ext->66:Add 55612
        IArray[Int32] _23Range;// 72:NoiseDeformerNoiseInit-ext->69:Range 55611
        IArray[Int32] _24Map;// 72:NoiseDeformerNoiseInit-ext->82:Map 55609
        IArray[Int32] _25Map;// 79:SelectByIndex->2:Map 55619
        IArray[Tuple[Int32, Int32]] _26Combine;// 86:ZipToTuple->0:Combine 55607
        IArray[Int32] _27SetValues;// 72:NoiseDeformerNoiseInit-ext->76:SetValues 55563
        Tuple[IArray[IArray[Single]], IArray[Int32]] _28Pair;// 72:NoiseDeformerNoiseInit-ext->87:Pair 55513
        Func[Vector3, Vector3] _29Bind2of2;// 0:Noise-ext->5:Bind2of2 55088
        Matrix _36Pass-through: Matrix;// 0:Pass-through: Matrix 55055
        Matrix _37InvertMatrix;// 2:DeformVertices-ext->7:InvertMatrix 55087
        IArray[Vector3] _38ParallelMap;// 2:DeformVertices-ext->5:ParallelMap 55081
        Int32 _39Zero;// 7:SoftSelection->2:Zero 55079
        IArray[Single] _40PerVertexData;// 7:SoftSelection->3:PerVertexData 55078
        IArray[Vector3] _41Combine3;// 1:LerpVectors-ext->10:Combine3 55074
        TriMesh _42SetMeshVertices;// 3:MeshSetVertices-ext->6:SetMeshVertices 55070
        _0MeshVertices = MeshVertices(mesh);
        _1MeshVertices = MeshVertices(mesh);
        _2Constant = 256;
        _3One = One();
        _4Add = Add(_2Constant, _3One);
        _5Range = Range(_4Add);
        _6Constant = 3;
        _7Range = Range(_6Constant);
        _8Map = Map(_5Range, (Int32 x0) => 
          {
            Func[Int32, Single] _0Bind1of2;// 72:NoiseDeformerNoiseInit-ext->116:Bind1of2 55545
            IArray[Single] _1Map;// 72:NoiseDeformerNoiseInit-ext->108:Map 55542
            Int32 _2Zero;// 118:ArrayToVector3->2:Zero 55537
            Single _3At;// 118:ArrayToVector3->1:At 55536
            Int32 _4One;// 118:ArrayToVector3->3:One 55539
            Single _5At;// 118:ArrayToVector3->5:At 55538
            Int32 _6Two;// 118:ArrayToVector3->4:Two 55541
            Single _7At;// 118:ArrayToVector3->6:At 55540
            Vector3 _8Vector3;// 118:ArrayToVector3->7:Vector3 55535
            Vector3 _9Normalize;// 72:NoiseDeformerNoiseInit-ext->120:Normalize 55533
            Single _10X;// 117:VectorToArray->1:X 55530
            IArray[Single] _11Unit;// 4:Array3->2:Unit 55529
            Single _12Y;// 117:VectorToArray->2:Y 55531
            IArray[Single] _13Append;// 4:Array3->3:Append 55528
            Single _14Z;// 117:VectorToArray->3:Z 55532
            IArray[Single] _15Append;// 4:Array3->6:Append 55527
            _0Bind1of2 = Bind1of2((Int32 x0, Int32 x1) => 
              {
                Int32 _0Count;// 72:NoiseDeformerNoiseInit-ext->114:Count 55558
                Int32 _1Multiply;// 72:NoiseDeformerNoiseInit-ext->115:Multiply 55557
                Int32 _2Add;// 72:NoiseDeformerNoiseInit-ext->113:Add 55555
                Int32 _3RandInt;// 72:NoiseDeformerNoiseInit-ext->97:RandInt 55553
                Single _4AsFloat;// 72:NoiseDeformerNoiseInit-ext->121:AsFloat 55552
                Single _5Abs;// 72:NoiseDeformerNoiseInit-ext->123:Abs 55551
                Int32 _6AsInt;// 72:NoiseDeformerNoiseInit-ext->122:AsInt 55550
                Int32 _7Add;// 72:NoiseDeformerNoiseInit-ext->99:Add 55560
                Int32 _8Modulo;// 72:NoiseDeformerNoiseInit-ext->98:Modulo 55549
                Int32 _9Subtract;// 72:NoiseDeformerNoiseInit-ext->104:Subtract 55548
                Single _10AsFloat;// 72:NoiseDeformerNoiseInit-ext->100:AsFloat 55547
                Single _11AsFloat;// 72:NoiseDeformerNoiseInit-ext->103:AsFloat 55562
                Single _12Divide;// 72:NoiseDeformerNoiseInit-ext->101:Divide 55546
                _0Count = Count(_5Range);
                _1Multiply = Multiply(_0Count, x1);
                _2Add = Add(x0, _1Multiply);
                _3RandInt = RandInt(seed, _2Add);
                _4AsFloat = AsFloat(_3RandInt);
                _5Abs = Abs(_4AsFloat);
                _6AsInt = AsInt(_5Abs);
                _7Add = Add(_2Constant, _2Constant);
                _8Modulo = Modulo(_6AsInt, _7Add);
                _9Subtract = Subtract(_8Modulo, _2Constant);
                _10AsFloat = AsFloat(_9Subtract);
                _11AsFloat = AsFloat(_2Constant);
                _12Divide = Divide(_10AsFloat, _11AsFloat);
                _12Divide;
                }, x0);
            _1Map = Map(_7Range, _0Bind1of2);
            _2Zero = Zero();
            _3At = At(_1Map, _2Zero);
            _4One = One();
            _5At = At(_1Map, _4One);
            _6Two = Two();
            _7At = At(_1Map, _6Two);
            _8Vector3 = Vector3(_3At, _5At, _7At);
            _9Normalize = Normalize(_8Vector3);
            _10X = X(_9Normalize);
            _11Unit = Unit(_10X);
            _12Y = Y(_9Normalize);
            _13Append = Append(_11Unit, _12Y);
            _14Z = Z(_9Normalize);
            _15Append = Append(_13Append, _14Z);
            _15Append;
            });
        _9Concatenate = Concatenate(_8Map, _8Map);
        _10Indices = Indices(_8Map);
        _11Add = Add(_2Constant, _2Constant);
        _12Two = Two();
        _13Add = Add(_11Add, _12Two);
        _14Range = Range(_13Add);
        _15Count = Count(_10Indices);
        _16One = One();
        _17Subtract = Subtract(_15Count, _16One);
        _18At = At(_10Indices, _17Subtract);
        _19Map = Map(_10Indices, (Int32 x0) => 
          {
            Int32 _0Add;// 72:NoiseDeformerNoiseInit-ext->36:Add 55593
            Int32 _1RandInt;// 72:NoiseDeformerNoiseInit-ext->34:RandInt 55591
            Single _2AsFloat;// 72:NoiseDeformerNoiseInit-ext->92:AsFloat 55590
            Single _3Abs;// 72:NoiseDeformerNoiseInit-ext->90:Abs 55589
            Int32 _4AsInt;// 72:NoiseDeformerNoiseInit-ext->91:AsInt 55588
            Int32 _5Modulo;// 72:NoiseDeformerNoiseInit-ext->40:Modulo 55587
            _0Add = Add(_18At, x0);
            _1RandInt = RandInt(seed, _0Add);
            _2AsFloat = AsFloat(_1RandInt);
            _3Abs = Abs(_2AsFloat);
            _4AsInt = AsInt(_3Abs);
            _5Modulo = Modulo(_4AsInt, _2Constant);
            _5Modulo;
            });
        _20Aggregate = Aggregate(_10Indices, _14Range, (IArray[Int32] x0, Int32 x1) => 
          {
            Int32 _0At;// 72:NoiseDeformerNoiseInit-ext->52:At 55584
            Int32 _1At;// 72:NoiseDeformerNoiseInit-ext->60:At 55583
            Tuple[Int32, Int32] _2Pair;// 72:NoiseDeformerNoiseInit-ext->57:Pair 55581
            IArray[Tuple[Int32, Int32]] _3Unit;// 59:Array2->2:Unit 55580
            Int32 _4At;// 72:NoiseDeformerNoiseInit-ext->30:At 55604
            Tuple[Int32, Int32] _5Pair;// 72:NoiseDeformerNoiseInit-ext->55:Pair 55603
            IArray[Tuple[Int32, Int32]] _6Append;// 59:Array2->3:Append 55579
            IArray[Int32] _7SetValues;// 72:NoiseDeformerNoiseInit-ext->54:SetValues 55575
            _0At = At(_19Map, x1);
            _1At = At(x0, _0At);
            _2Pair = Pair(x1, _1At);
            _3Unit = Unit(_2Pair);
            _4At = At(x0, x1);
            _5Pair = Pair(_0At, _4At);
            _6Append = Append(_3Unit, _5Pair);
            _7SetValues = SetValues(x0, _6Append);
            _7SetValues;
            });
        _21Two = Two();
        _22Add = Add(_2Constant, _21Two);
        _23Range = Range(_22Add);
        _24Map = Map(_23Range, (Int32 x0) => 
          {
            Int32 _0Add;// 72:NoiseDeformerNoiseInit-ext->83:Add 55615
            _0Add = Add(x0, _2Constant);
            _0Add;
            });
        _25Map = Map(_23Range, (Int32 x0) => 
          {
            Int32 _0At;// 79:SelectByIndex->3:At 55620
            _0At = At(_20Aggregate, x0);
            _0At;
            });
        _26Combine = Combine(_24Map, _25Map, (Int32 x0, Int32 x1) => 
          {
            Tuple[Int32, Int32] _0Pair;// 86:ZipToTuple->4:Pair 55608
            _0Pair = Pair(x0, x1);
            _0Pair;
            });
        _27SetValues = SetValues(_20Aggregate, _26Combine);
        _28Pair = Pair(_9Concatenate, _27SetValues);
        _29Bind2of2 = Bind2of2((Vector3 x0, Tuple[IArray[IArray[Single]], IArray[Int32]] x1) => 
          {
            Single _0FloatOne;// 0:NoiseDeformer-ext->40:FloatOne 55504
            Single _1Divide;// 0:NoiseDeformer-ext->41:Divide 55503
            Vector3 _2MultiplyByScalar;// 0:NoiseDeformer-ext->16:MultiplyByScalar 55501
            Vector3 _3Constant;// 0:NoiseDeformer-ext->0:Constant 55505
            Vector3 _4Add;// 0:NoiseDeformer-ext->18:Add 55500
            Single _5Y;// 0:NoiseDeformer-ext->6:Y 55498
            Single _6Z;// 0:NoiseDeformer-ext->7:Z 55506
            Single _7Apply2;// 0:NoiseDeformer-ext->4:Apply2 55101
            Single _8X;// 0:NoiseDeformer-ext->5:X 55509
            Single _9Apply2;// 0:NoiseDeformer-ext->2:Apply2 55508
            Single _10Apply2;// 0:NoiseDeformer-ext->15:Apply2 55511
            Vector3 _11Vector3;// 0:NoiseDeformer-ext->14:Vector3 55099
            Vector3 _12Vector3;// 13:Vector3 55627
            Vector3 _13Multiply;// 0:NoiseDeformer-ext->22:Multiply 55098
            Vector3 _14Add;// 0:NoiseDeformer-ext->25:Add 55097
            _0FloatOne = FloatOne();
            _1Divide = Divide(_0FloatOne, scale);
            _2MultiplyByScalar = MultiplyByScalar(x0, _1Divide);
            _3Constant = new Microsoft.Xna.Framework.Vector3(0.5, 0.5, 0.5);
            _4Add = Add(_2MultiplyByScalar, _3Constant);
            _5Y = Y(_4Add);
            _6Z = Z(_4Add);
            _7Apply2 = Apply2((Single x0, Single x1) => 
              {
                Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 55122
                IArray[Single] _1Unit;// 37:Array2->2:Unit 55121
                Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 55123
                IArray[Single] _3Append;// 37:Array2->3:Append 55120
                Single _4AsFloat;// 0:NoiseDeformer-ext->13:AsFloat 55483
                Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 55124
                Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 55138
                Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 55139
                Single _8Constant;// 0:NoiseDeformer-ext->0:Constant 55484
                IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 55137
                Single _10FloatOne;// 0:NoiseDeformer-ext->46:FloatOne 55486
                Single _11Subtract;// 0:NoiseDeformer-ext->3:Subtract 55485
                Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 55146
                IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 55136
                Single _14AsFloat;// 0:NoiseDeformer-ext->43:AsFloat 55491
                Single _15Constant;// 0:NoiseDeformer-ext->0:Constant 55494
                Single _16Multiply;// 0:NoiseDeformer-ext->30:Multiply 55493
                Single _17Constant;// 0:NoiseDeformer-ext->0:Constant 55496
                Single _18Constant;// 0:NoiseDeformer-ext->0:Constant 55497
                Single _19Divide;// 0:NoiseDeformer-ext->31:Divide 55495
                Single _20Multiply;// 0:NoiseDeformer-ext->39:Multiply 55492
                Single _21Multiply;// 0:NoiseDeformer-ext->38:Multiply 55490
                Vector3 _22Vector3;// 0:NoiseDeformer-ext->0:Vector3 55487
                IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 55471
                IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 55475
                Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 55482
                IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 55117
                Int32 _27Count;// 3:LastIndex->2:Count 55116
                Int32 _28One;// 3:MinusOne->2:One 55115
                Int32 _29Subtract;// 3:MinusOne->1:Subtract 55114
                IArray[Single] _30At;// 68:Last->0:At 55111
                Int32 _31Zero;// 69:First->2:Zero 55109
                Single _32At;// 69:First->0:At 55108
                _0FloatZero = FloatZero();
                _1Unit = Unit(_0FloatZero);
                _2FloatZero = FloatZero();
                _3Append = Append(_1Unit, _2FloatZero);
                _4AsFloat = AsFloat(numIterations);
                _5AsInt = AsInt(_4AsFloat);
                _6FloatOne = FloatOne();
                _7AsInt = AsInt(_4AsFloat);
                _8Constant = 2;
                _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
                  {
                    Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 55141
                    _0Multiply = Multiply(_8Constant, x0);
                    _0Multiply;
                    });
                _10FloatOne = FloatOne();
                _11Subtract = Subtract(_10FloatOne, roughness);
                _12NegativeFloat = NegativeFloat(_11Subtract);
                _13Map = Map(_9GenerateN, (Single x0) => 
                  {
                    Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 55144
                    _0Pow = Pow(x0, _12NegativeFloat);
                    _0Pow;
                    });
                _14AsFloat = AsFloat(phase);
                _15Constant = 0.005;
                _16Multiply = Multiply(frequency, _15Constant);
                _17Constant = 1200;
                _18Constant = 4800;
                _19Divide = Divide(_17Constant, _18Constant);
                _20Multiply = Multiply(_16Multiply, _19Divide);
                _21Multiply = Multiply(_14AsFloat, _20Multiply);
                _22Vector3 = Vector3(x0, x1, _21Multiply);
                _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
                  {
                    Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 55473
                    _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                    _0MultiplyByScalar;
                    });
                _24PairItem1 = PairItem1(x1);
                _25FloatOne = FloatOne();
                _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
                  {
                    Int32 _0One;// 49:Second->2:One 55151
                    Single _1At;// 49:Second->0:At 55150
                    Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 55148
                    Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 55134
                    Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 55189
                    Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 55469
                    Single _6X;// 2:VectorAsArray->1:X 55200
                    IArray[Single] _7Unit;// 4:Array3->2:Unit 55199
                    Single _8Y;// 2:VectorAsArray->2:Y 55201
                    IArray[Single] _9Append;// 4:Array3->3:Append 55198
                    Single _10Z;// 2:VectorAsArray->3:Z 55202
                    IArray[Single] _11Append;// 4:Array3->6:Append 55197
                    Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 55215
                    Single _13At;// 1:VectorComponent-ext->3:At 55192
                    Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 55188
                    Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 55187
                    Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 55203
                    Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 55186
                    Int32 _18One;// 13:PlusOne->1:One 55207
                    Int32 _19Add;// 13:PlusOne->0:Add 55206
                    Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 55204
                    Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 55185
                    Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 55212
                    Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55211
                    Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55209
                    Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55214
                    Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55213
                    Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 55208
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 55184
                    Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 55181
                    Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 55180
                    IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 55476
                    Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 55226
                    Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 55225
                    Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 55224
                    Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 55236
                    Single _36X;// 2:VectorAsArray->1:X 55247
                    IArray[Single] _37Unit;// 4:Array3->2:Unit 55246
                    Single _38Y;// 2:VectorAsArray->2:Y 55248
                    IArray[Single] _39Append;// 4:Array3->3:Append 55245
                    Single _40Z;// 2:VectorAsArray->3:Z 55249
                    IArray[Single] _41Append;// 4:Array3->6:Append 55244
                    Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 55262
                    Single _43At;// 1:VectorComponent-ext->3:At 55239
                    Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 55235
                    Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 55234
                    Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 55250
                    Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 55233
                    Int32 _48One;// 13:PlusOne->1:One 55254
                    Int32 _49Add;// 13:PlusOne->0:Add 55253
                    Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 55251
                    Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 55232
                    Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 55259
                    Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55258
                    Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55256
                    Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55261
                    Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55260
                    Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 55255
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 55231
                    Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 55228
                    Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 55227
                    Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 55222
                    Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 55220
                    Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 55272
                    Single _64X;// 2:VectorAsArray->1:X 55283
                    IArray[Single] _65Unit;// 4:Array3->2:Unit 55282
                    Single _66Y;// 2:VectorAsArray->2:Y 55284
                    IArray[Single] _67Append;// 4:Array3->3:Append 55281
                    Single _68Z;// 2:VectorAsArray->3:Z 55285
                    IArray[Single] _69Append;// 4:Array3->6:Append 55280
                    Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 55298
                    Single _71At;// 1:VectorComponent-ext->3:At 55275
                    Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 55271
                    Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 55270
                    Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 55286
                    Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 55269
                    Int32 _76One;// 13:PlusOne->1:One 55290
                    Int32 _77Add;// 13:PlusOne->0:Add 55289
                    Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 55287
                    Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 55268
                    Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 55295
                    Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55294
                    Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55292
                    Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55297
                    Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55296
                    Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 55291
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 55267
                    Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 55264
                    Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 55263
                    Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 55218
                    IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 55216
                    Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 55173
                    Single _92At;// 62:NoiseDeformerAt3-ext->4:At 55172
                    Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 55171
                    Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 55300
                    Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 55299
                    Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 55176
                    Single _97At;// 62:NoiseDeformerAt3-ext->7:At 55175
                    Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 55174
                    Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 55170
                    Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 55302
                    Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 55301
                    Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 55179
                    Single _103At;// 62:NoiseDeformerAt3-ext->10:At 55178
                    Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 55177
                    Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 55169
                    Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 55318
                    Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 55326
                    Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 55325
                    Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 55323
                    Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 55322
                    Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 55320
                    IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 55319
                    Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 55311
                    Single _114At;// 66:NoiseDeformerAt3-ext->4:At 55310
                    Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 55309
                    Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 55314
                    Single _117At;// 66:NoiseDeformerAt3-ext->7:At 55313
                    Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 55312
                    Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 55308
                    Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 55317
                    Single _121At;// 66:NoiseDeformerAt3-ext->10:At 55316
                    Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 55315
                    Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 55307
                    Single _124Constant;// 42:NoiseDeformerSCurve-ext->0:Constant 55330
                    Single _125Constant;// 42:NoiseDeformerSCurve-ext->0:Constant 55332
                    Single _126Multiply;// 42:NoiseDeformerSCurve-ext->41:Multiply 55331
                    Single _127Subtract;// 42:NoiseDeformerSCurve-ext->39:Subtract 55329
                    Single _128Multiply;// 42:NoiseDeformerSCurve-ext->35:Multiply 55334
                    Single _129Multiply;// 42:NoiseDeformerSCurve-ext->37:Multiply 55328
                    Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 55164
                    Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 55356
                    Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 55355
                    Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 55354
                    Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 55352
                    IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 55351
                    Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 55344
                    Single _137At;// 72:NoiseDeformerAt3-ext->4:At 55343
                    Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 55342
                    Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 55357
                    Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 55347
                    Single _141At;// 72:NoiseDeformerAt3-ext->7:At 55346
                    Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 55345
                    Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 55341
                    Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 55350
                    Single _145At;// 72:NoiseDeformerAt3-ext->10:At 55349
                    Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 55348
                    Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 55340
                    Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 55377
                    Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 55376
                    Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 55374
                    IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 55373
                    Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 55366
                    Single _153At;// 75:NoiseDeformerAt3-ext->4:At 55365
                    Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 55364
                    Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 55369
                    Single _156At;// 75:NoiseDeformerAt3-ext->7:At 55368
                    Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 55367
                    Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 55363
                    Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 55372
                    Single _160At;// 75:NoiseDeformerAt3-ext->10:At 55371
                    Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 55370
                    Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 55362
                    Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 55335
                    Single _164Constant;// 56:NoiseDeformerSCurve-ext->0:Constant 55381
                    Single _165Constant;// 56:NoiseDeformerSCurve-ext->0:Constant 55383
                    Single _166Multiply;// 56:NoiseDeformerSCurve-ext->41:Multiply 55382
                    Single _167Subtract;// 56:NoiseDeformerSCurve-ext->39:Subtract 55380
                    Single _168Multiply;// 56:NoiseDeformerSCurve-ext->35:Multiply 55385
                    Single _169Multiply;// 56:NoiseDeformerSCurve-ext->37:Multiply 55379
                    Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 55163
                    Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 55405
                    Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 55404
                    IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 55403
                    Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 55396
                    Single _175At;// 82:NoiseDeformerAt3-ext->4:At 55395
                    Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 55394
                    Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 55399
                    Single _178At;// 82:NoiseDeformerAt3-ext->7:At 55398
                    Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 55397
                    Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 55393
                    Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 55406
                    Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 55402
                    Single _183At;// 82:NoiseDeformerAt3-ext->10:At 55401
                    Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 55400
                    Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 55392
                    Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 55423
                    IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 55422
                    Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 55415
                    Single _189At;// 86:NoiseDeformerAt3-ext->4:At 55414
                    Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 55413
                    Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 55418
                    Single _192At;// 86:NoiseDeformerAt3-ext->7:At 55417
                    Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 55416
                    Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 55412
                    Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 55421
                    Single _196At;// 86:NoiseDeformerAt3-ext->10:At 55420
                    Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 55419
                    Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 55411
                    Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 55387
                    Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 55441
                    IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 55440
                    Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 55433
                    Single _203At;// 92:NoiseDeformerAt3-ext->4:At 55432
                    Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 55431
                    Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 55436
                    Single _206At;// 92:NoiseDeformerAt3-ext->7:At 55435
                    Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 55434
                    Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 55430
                    Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 55439
                    Single _210At;// 92:NoiseDeformerAt3-ext->10:At 55438
                    Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 55437
                    Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 55429
                    Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 55458
                    IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 55457
                    Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 55450
                    Single _216At;// 96:NoiseDeformerAt3-ext->4:At 55449
                    Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 55448
                    Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 55453
                    Single _219At;// 96:NoiseDeformerAt3-ext->7:At 55452
                    Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 55451
                    Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 55447
                    Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 55456
                    Single _223At;// 96:NoiseDeformerAt3-ext->10:At 55455
                    Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 55454
                    Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 55446
                    Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 55424
                    Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 55386
                    Single _228Constant;// 58:NoiseDeformerSCurve-ext->0:Constant 55462
                    Single _229Constant;// 58:NoiseDeformerSCurve-ext->0:Constant 55464
                    Single _230Multiply;// 58:NoiseDeformerSCurve-ext->41:Multiply 55463
                    Single _231Subtract;// 58:NoiseDeformerSCurve-ext->39:Subtract 55461
                    Single _232Multiply;// 58:NoiseDeformerSCurve-ext->35:Multiply 55466
                    Single _233Multiply;// 58:NoiseDeformerSCurve-ext->37:Multiply 55460
                    Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 55162
                    Single _235NaN;// 118:FloatIsNaN->1:NaN 55160
                    Int32 _236Compare;// 118:FloatIsNaN->2:Compare 55159
                    Int32 _237Zero;// 118:FloatIsNaN->4:Zero 55161
                    Boolean _238Equal;// 118:FloatIsNaN->3:Equal 55158
                    Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 55132
                    Int32 _241Zero;// 48:First->2:Zero 55479
                    Single _242At;// 48:First->0:At 55478
                    Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 55131
                    IArray[Single] _244Unit;// 43:Array2->2:Unit 55129
                    Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 55481
                    IArray[Single] _246Append;// 43:Array2->3:Append 55128
                    _0One = One();
                    _1At = At(x0, _0One);
                    _2AsInt = AsInt(_1At);
                    _3At = At(_13Map, _2AsInt);
                    _4Constant = 4096;
                    _5At = At(_23GenerateN, _2AsInt);
                    _6X = X(_5At);
                    _7Unit = Unit(_6X);
                    _8Y = Y(_5At);
                    _9Append = Append(_7Unit, _8Y);
                    _10Z = Z(_5At);
                    _11Append = Append(_9Append, _10Z);
                    _12Zero = Zero();
                    _13At = At(_11Append, _12Zero);
                    _14Add = Add(_4Constant, _13At);
                    _15Floor = Floor(_14Add);
                    _16Constant = 255;
                    _17And = And(_15Floor, _16Constant);
                    _18One = One();
                    _19Add = Add(_17And, _18One);
                    _20And = And(_19Add, _16Constant);
                    _21Pair = Pair(_17And, _20And);
                    _22Floor = Floor(_14Add);
                    _23AsFloat = AsFloat(_22Floor);
                    _24Subtract = Subtract(_14Add, _23AsFloat);
                    _25FloatOne = FloatOne();
                    _26Subtract = Subtract(_24Subtract, _25FloatOne);
                    _27Pair = Pair(_24Subtract, _26Subtract);
                    _28Pair = Pair(_21Pair, _27Pair);
                    _29PairItem2 = PairItem2(_28Pair);
                    _30PairItem1 = PairItem1(_29PairItem2);
                    _31PairItem2 = PairItem2(x1);
                    _32PairItem1 = PairItem1(_28Pair);
                    _33PairItem1 = PairItem1(_32PairItem1);
                    _34At = At(_31PairItem2, _33PairItem1);
                    _35Constant = 4096;
                    _36X = X(_5At);
                    _37Unit = Unit(_36X);
                    _38Y = Y(_5At);
                    _39Append = Append(_37Unit, _38Y);
                    _40Z = Z(_5At);
                    _41Append = Append(_39Append, _40Z);
                    _42One = One();
                    _43At = At(_41Append, _42One);
                    _44Add = Add(_35Constant, _43At);
                    _45Floor = Floor(_44Add);
                    _46Constant = 255;
                    _47And = And(_45Floor, _46Constant);
                    _48One = One();
                    _49Add = Add(_47And, _48One);
                    _50And = And(_49Add, _46Constant);
                    _51Pair = Pair(_47And, _50And);
                    _52Floor = Floor(_44Add);
                    _53AsFloat = AsFloat(_52Floor);
                    _54Subtract = Subtract(_44Add, _53AsFloat);
                    _55FloatOne = FloatOne();
                    _56Subtract = Subtract(_54Subtract, _55FloatOne);
                    _57Pair = Pair(_54Subtract, _56Subtract);
                    _58Pair = Pair(_51Pair, _57Pair);
                    _59PairItem1 = PairItem1(_58Pair);
                    _60PairItem1 = PairItem1(_59PairItem1);
                    _61Add = Add(_34At, _60PairItem1);
                    _62At = At(_31PairItem2, _61Add);
                    _63Constant = 4096;
                    _64X = X(_5At);
                    _65Unit = Unit(_64X);
                    _66Y = Y(_5At);
                    _67Append = Append(_65Unit, _66Y);
                    _68Z = Z(_5At);
                    _69Append = Append(_67Append, _68Z);
                    _70Two = Two();
                    _71At = At(_69Append, _70Two);
                    _72Add = Add(_63Constant, _71At);
                    _73Floor = Floor(_72Add);
                    _74Constant = 255;
                    _75And = And(_73Floor, _74Constant);
                    _76One = One();
                    _77Add = Add(_75And, _76One);
                    _78And = And(_77Add, _74Constant);
                    _79Pair = Pair(_75And, _78And);
                    _80Floor = Floor(_72Add);
                    _81AsFloat = AsFloat(_80Floor);
                    _82Subtract = Subtract(_72Add, _81AsFloat);
                    _83FloatOne = FloatOne();
                    _84Subtract = Subtract(_82Subtract, _83FloatOne);
                    _85Pair = Pair(_82Subtract, _84Subtract);
                    _86Pair = Pair(_79Pair, _85Pair);
                    _87PairItem1 = PairItem1(_86Pair);
                    _88PairItem1 = PairItem1(_87PairItem1);
                    _89Add = Add(_62At, _88PairItem1);
                    _90At = At(_24PairItem1, _89Add);
                    _91Zero = Zero();
                    _92At = At(_90At, _91Zero);
                    _93Multiply = Multiply(_30PairItem1, _92At);
                    _94PairItem2 = PairItem2(_58Pair);
                    _95PairItem1 = PairItem1(_94PairItem2);
                    _96One = One();
                    _97At = At(_90At, _96One);
                    _98Multiply = Multiply(_95PairItem1, _97At);
                    _99Add = Add(_93Multiply, _98Multiply);
                    _100PairItem2 = PairItem2(_86Pair);
                    _101PairItem1 = PairItem1(_100PairItem2);
                    _102Two = Two();
                    _103At = At(_90At, _102Two);
                    _104Multiply = Multiply(_101PairItem1, _103At);
                    _105Add = Add(_99Add, _104Multiply);
                    _106PairItem2 = PairItem2(_29PairItem2);
                    _107PairItem2 = PairItem2(_32PairItem1);
                    _108At = At(_31PairItem2, _107PairItem2);
                    _109Add = Add(_108At, _60PairItem1);
                    _110At = At(_31PairItem2, _109Add);
                    _111Add = Add(_110At, _88PairItem1);
                    _112At = At(_24PairItem1, _111Add);
                    _113Zero = Zero();
                    _114At = At(_112At, _113Zero);
                    _115Multiply = Multiply(_106PairItem2, _114At);
                    _116One = One();
                    _117At = At(_112At, _116One);
                    _118Multiply = Multiply(_95PairItem1, _117At);
                    _119Add = Add(_115Multiply, _118Multiply);
                    _120Two = Two();
                    _121At = At(_112At, _120Two);
                    _122Multiply = Multiply(_101PairItem1, _121At);
                    _123Add = Add(_119Add, _122Multiply);
                    _124Constant = 3;
                    _125Constant = 2;
                    _126Multiply = Multiply(_125Constant, _30PairItem1);
                    _127Subtract = Subtract(_124Constant, _126Multiply);
                    _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                    _129Multiply = Multiply(_127Subtract, _128Multiply);
                    _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                    _131PairItem2 = PairItem2(_59PairItem1);
                    _132Add = Add(_34At, _131PairItem2);
                    _133At = At(_31PairItem2, _132Add);
                    _134Add = Add(_133At, _88PairItem1);
                    _135At = At(_24PairItem1, _134Add);
                    _136Zero = Zero();
                    _137At = At(_135At, _136Zero);
                    _138Multiply = Multiply(_30PairItem1, _137At);
                    _139PairItem2 = PairItem2(_94PairItem2);
                    _140One = One();
                    _141At = At(_135At, _140One);
                    _142Multiply = Multiply(_139PairItem2, _141At);
                    _143Add = Add(_138Multiply, _142Multiply);
                    _144Two = Two();
                    _145At = At(_135At, _144Two);
                    _146Multiply = Multiply(_101PairItem1, _145At);
                    _147Add = Add(_143Add, _146Multiply);
                    _148Add = Add(_108At, _131PairItem2);
                    _149At = At(_31PairItem2, _148Add);
                    _150Add = Add(_149At, _88PairItem1);
                    _151At = At(_24PairItem1, _150Add);
                    _152Zero = Zero();
                    _153At = At(_151At, _152Zero);
                    _154Multiply = Multiply(_106PairItem2, _153At);
                    _155One = One();
                    _156At = At(_151At, _155One);
                    _157Multiply = Multiply(_139PairItem2, _156At);
                    _158Add = Add(_154Multiply, _157Multiply);
                    _159Two = Two();
                    _160At = At(_151At, _159Two);
                    _161Multiply = Multiply(_101PairItem1, _160At);
                    _162Add = Add(_158Add, _161Multiply);
                    _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                    _164Constant = 3;
                    _165Constant = 2;
                    _166Multiply = Multiply(_165Constant, _95PairItem1);
                    _167Subtract = Subtract(_164Constant, _166Multiply);
                    _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                    _169Multiply = Multiply(_167Subtract, _168Multiply);
                    _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                    _171PairItem2 = PairItem2(_87PairItem1);
                    _172Add = Add(_62At, _171PairItem2);
                    _173At = At(_24PairItem1, _172Add);
                    _174Zero = Zero();
                    _175At = At(_173At, _174Zero);
                    _176Multiply = Multiply(_30PairItem1, _175At);
                    _177One = One();
                    _178At = At(_173At, _177One);
                    _179Multiply = Multiply(_95PairItem1, _178At);
                    _180Add = Add(_176Multiply, _179Multiply);
                    _181PairItem2 = PairItem2(_100PairItem2);
                    _182Two = Two();
                    _183At = At(_173At, _182Two);
                    _184Multiply = Multiply(_181PairItem2, _183At);
                    _185Add = Add(_180Add, _184Multiply);
                    _186Add = Add(_110At, _171PairItem2);
                    _187At = At(_24PairItem1, _186Add);
                    _188Zero = Zero();
                    _189At = At(_187At, _188Zero);
                    _190Multiply = Multiply(_106PairItem2, _189At);
                    _191One = One();
                    _192At = At(_187At, _191One);
                    _193Multiply = Multiply(_95PairItem1, _192At);
                    _194Add = Add(_190Multiply, _193Multiply);
                    _195Two = Two();
                    _196At = At(_187At, _195Two);
                    _197Multiply = Multiply(_181PairItem2, _196At);
                    _198Add = Add(_194Add, _197Multiply);
                    _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                    _200Add = Add(_133At, _171PairItem2);
                    _201At = At(_24PairItem1, _200Add);
                    _202Zero = Zero();
                    _203At = At(_201At, _202Zero);
                    _204Multiply = Multiply(_30PairItem1, _203At);
                    _205One = One();
                    _206At = At(_201At, _205One);
                    _207Multiply = Multiply(_139PairItem2, _206At);
                    _208Add = Add(_204Multiply, _207Multiply);
                    _209Two = Two();
                    _210At = At(_201At, _209Two);
                    _211Multiply = Multiply(_181PairItem2, _210At);
                    _212Add = Add(_208Add, _211Multiply);
                    _213Add = Add(_149At, _171PairItem2);
                    _214At = At(_24PairItem1, _213Add);
                    _215Zero = Zero();
                    _216At = At(_214At, _215Zero);
                    _217Multiply = Multiply(_106PairItem2, _216At);
                    _218One = One();
                    _219At = At(_214At, _218One);
                    _220Multiply = Multiply(_139PairItem2, _219At);
                    _221Add = Add(_217Multiply, _220Multiply);
                    _222Two = Two();
                    _223At = At(_214At, _222Two);
                    _224Multiply = Multiply(_181PairItem2, _223At);
                    _225Add = Add(_221Add, _224Multiply);
                    _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                    _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                    _228Constant = 3;
                    _229Constant = 2;
                    _230Multiply = Multiply(_229Constant, _101PairItem1);
                    _231Subtract = Subtract(_228Constant, _230Multiply);
                    _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                    _233Multiply = Multiply(_231Subtract, _232Multiply);
                    _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                    _235NaN = NaN();
                    _236Compare = Compare(_234FloatLerp, _235NaN);
                    _237Zero = Zero();
                    _238Equal = Equal(_236Compare, _237Zero);
                    _240Multiply = Multiply(_3At, if (_238Equal)
                        {
                          Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 55467
                          _239FloatZero = FloatZero();
                          _239FloatZero;
                          }else
                        {
                          _234FloatLerp;
                          });
                    _241Zero = Zero();
                    _242At = At(x0, _241Zero);
                    _243Add = Add(_240Multiply, _242At);
                    _244Unit = Unit(_243Add);
                    _245Add = Add(_1At, _25FloatOne);
                    _246Append = Append(_244Unit, _245Add);
                    _246Append;
                    });
                _27Count = Count(_26GenerateN);
                _28One = One();
                _29Subtract = Subtract(_27Count, _28One);
                _30At = At(_26GenerateN, _29Subtract);
                _31Zero = Zero();
                _32At = At(_30At, _31Zero);
                _32At;
                }, _5Y, _6Z);
            _8X = X(_4Add);
            _9Apply2 = Apply2((Single x0, Single x1) => 
              {
                Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 55122
                IArray[Single] _1Unit;// 37:Array2->2:Unit 55121
                Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 55123
                IArray[Single] _3Append;// 37:Array2->3:Append 55120
                Single _4AsFloat;// 0:NoiseDeformer-ext->13:AsFloat 55483
                Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 55124
                Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 55138
                Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 55139
                Single _8Constant;// 0:NoiseDeformer-ext->0:Constant 55484
                IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 55137
                Single _10FloatOne;// 0:NoiseDeformer-ext->46:FloatOne 55486
                Single _11Subtract;// 0:NoiseDeformer-ext->3:Subtract 55485
                Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 55146
                IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 55136
                Single _14AsFloat;// 0:NoiseDeformer-ext->43:AsFloat 55491
                Single _15Constant;// 0:NoiseDeformer-ext->0:Constant 55494
                Single _16Multiply;// 0:NoiseDeformer-ext->30:Multiply 55493
                Single _17Constant;// 0:NoiseDeformer-ext->0:Constant 55496
                Single _18Constant;// 0:NoiseDeformer-ext->0:Constant 55497
                Single _19Divide;// 0:NoiseDeformer-ext->31:Divide 55495
                Single _20Multiply;// 0:NoiseDeformer-ext->39:Multiply 55492
                Single _21Multiply;// 0:NoiseDeformer-ext->38:Multiply 55490
                Vector3 _22Vector3;// 0:NoiseDeformer-ext->0:Vector3 55487
                IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 55471
                IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 55475
                Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 55482
                IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 55117
                Int32 _27Count;// 3:LastIndex->2:Count 55116
                Int32 _28One;// 3:MinusOne->2:One 55115
                Int32 _29Subtract;// 3:MinusOne->1:Subtract 55114
                IArray[Single] _30At;// 68:Last->0:At 55111
                Int32 _31Zero;// 69:First->2:Zero 55109
                Single _32At;// 69:First->0:At 55108
                _0FloatZero = FloatZero();
                _1Unit = Unit(_0FloatZero);
                _2FloatZero = FloatZero();
                _3Append = Append(_1Unit, _2FloatZero);
                _4AsFloat = AsFloat(numIterations);
                _5AsInt = AsInt(_4AsFloat);
                _6FloatOne = FloatOne();
                _7AsInt = AsInt(_4AsFloat);
                _8Constant = 2;
                _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
                  {
                    Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 55141
                    _0Multiply = Multiply(_8Constant, x0);
                    _0Multiply;
                    });
                _10FloatOne = FloatOne();
                _11Subtract = Subtract(_10FloatOne, roughness);
                _12NegativeFloat = NegativeFloat(_11Subtract);
                _13Map = Map(_9GenerateN, (Single x0) => 
                  {
                    Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 55144
                    _0Pow = Pow(x0, _12NegativeFloat);
                    _0Pow;
                    });
                _14AsFloat = AsFloat(phase);
                _15Constant = 0.005;
                _16Multiply = Multiply(frequency, _15Constant);
                _17Constant = 1200;
                _18Constant = 4800;
                _19Divide = Divide(_17Constant, _18Constant);
                _20Multiply = Multiply(_16Multiply, _19Divide);
                _21Multiply = Multiply(_14AsFloat, _20Multiply);
                _22Vector3 = Vector3(x0, x1, _21Multiply);
                _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
                  {
                    Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 55473
                    _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                    _0MultiplyByScalar;
                    });
                _24PairItem1 = PairItem1(x1);
                _25FloatOne = FloatOne();
                _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
                  {
                    Int32 _0One;// 49:Second->2:One 55151
                    Single _1At;// 49:Second->0:At 55150
                    Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 55148
                    Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 55134
                    Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 55189
                    Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 55469
                    Single _6X;// 2:VectorAsArray->1:X 55200
                    IArray[Single] _7Unit;// 4:Array3->2:Unit 55199
                    Single _8Y;// 2:VectorAsArray->2:Y 55201
                    IArray[Single] _9Append;// 4:Array3->3:Append 55198
                    Single _10Z;// 2:VectorAsArray->3:Z 55202
                    IArray[Single] _11Append;// 4:Array3->6:Append 55197
                    Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 55215
                    Single _13At;// 1:VectorComponent-ext->3:At 55192
                    Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 55188
                    Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 55187
                    Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 55203
                    Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 55186
                    Int32 _18One;// 13:PlusOne->1:One 55207
                    Int32 _19Add;// 13:PlusOne->0:Add 55206
                    Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 55204
                    Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 55185
                    Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 55212
                    Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55211
                    Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55209
                    Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55214
                    Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55213
                    Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 55208
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 55184
                    Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 55181
                    Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 55180
                    IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 55476
                    Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 55226
                    Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 55225
                    Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 55224
                    Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 55236
                    Single _36X;// 2:VectorAsArray->1:X 55247
                    IArray[Single] _37Unit;// 4:Array3->2:Unit 55246
                    Single _38Y;// 2:VectorAsArray->2:Y 55248
                    IArray[Single] _39Append;// 4:Array3->3:Append 55245
                    Single _40Z;// 2:VectorAsArray->3:Z 55249
                    IArray[Single] _41Append;// 4:Array3->6:Append 55244
                    Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 55262
                    Single _43At;// 1:VectorComponent-ext->3:At 55239
                    Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 55235
                    Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 55234
                    Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 55250
                    Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 55233
                    Int32 _48One;// 13:PlusOne->1:One 55254
                    Int32 _49Add;// 13:PlusOne->0:Add 55253
                    Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 55251
                    Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 55232
                    Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 55259
                    Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55258
                    Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55256
                    Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55261
                    Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55260
                    Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 55255
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 55231
                    Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 55228
                    Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 55227
                    Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 55222
                    Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 55220
                    Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 55272
                    Single _64X;// 2:VectorAsArray->1:X 55283
                    IArray[Single] _65Unit;// 4:Array3->2:Unit 55282
                    Single _66Y;// 2:VectorAsArray->2:Y 55284
                    IArray[Single] _67Append;// 4:Array3->3:Append 55281
                    Single _68Z;// 2:VectorAsArray->3:Z 55285
                    IArray[Single] _69Append;// 4:Array3->6:Append 55280
                    Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 55298
                    Single _71At;// 1:VectorComponent-ext->3:At 55275
                    Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 55271
                    Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 55270
                    Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 55286
                    Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 55269
                    Int32 _76One;// 13:PlusOne->1:One 55290
                    Int32 _77Add;// 13:PlusOne->0:Add 55289
                    Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 55287
                    Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 55268
                    Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 55295
                    Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55294
                    Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55292
                    Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55297
                    Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55296
                    Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 55291
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 55267
                    Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 55264
                    Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 55263
                    Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 55218
                    IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 55216
                    Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 55173
                    Single _92At;// 62:NoiseDeformerAt3-ext->4:At 55172
                    Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 55171
                    Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 55300
                    Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 55299
                    Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 55176
                    Single _97At;// 62:NoiseDeformerAt3-ext->7:At 55175
                    Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 55174
                    Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 55170
                    Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 55302
                    Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 55301
                    Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 55179
                    Single _103At;// 62:NoiseDeformerAt3-ext->10:At 55178
                    Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 55177
                    Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 55169
                    Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 55318
                    Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 55326
                    Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 55325
                    Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 55323
                    Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 55322
                    Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 55320
                    IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 55319
                    Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 55311
                    Single _114At;// 66:NoiseDeformerAt3-ext->4:At 55310
                    Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 55309
                    Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 55314
                    Single _117At;// 66:NoiseDeformerAt3-ext->7:At 55313
                    Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 55312
                    Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 55308
                    Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 55317
                    Single _121At;// 66:NoiseDeformerAt3-ext->10:At 55316
                    Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 55315
                    Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 55307
                    Single _124Constant;// 42:NoiseDeformerSCurve-ext->0:Constant 55330
                    Single _125Constant;// 42:NoiseDeformerSCurve-ext->0:Constant 55332
                    Single _126Multiply;// 42:NoiseDeformerSCurve-ext->41:Multiply 55331
                    Single _127Subtract;// 42:NoiseDeformerSCurve-ext->39:Subtract 55329
                    Single _128Multiply;// 42:NoiseDeformerSCurve-ext->35:Multiply 55334
                    Single _129Multiply;// 42:NoiseDeformerSCurve-ext->37:Multiply 55328
                    Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 55164
                    Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 55356
                    Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 55355
                    Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 55354
                    Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 55352
                    IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 55351
                    Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 55344
                    Single _137At;// 72:NoiseDeformerAt3-ext->4:At 55343
                    Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 55342
                    Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 55357
                    Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 55347
                    Single _141At;// 72:NoiseDeformerAt3-ext->7:At 55346
                    Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 55345
                    Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 55341
                    Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 55350
                    Single _145At;// 72:NoiseDeformerAt3-ext->10:At 55349
                    Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 55348
                    Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 55340
                    Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 55377
                    Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 55376
                    Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 55374
                    IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 55373
                    Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 55366
                    Single _153At;// 75:NoiseDeformerAt3-ext->4:At 55365
                    Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 55364
                    Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 55369
                    Single _156At;// 75:NoiseDeformerAt3-ext->7:At 55368
                    Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 55367
                    Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 55363
                    Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 55372
                    Single _160At;// 75:NoiseDeformerAt3-ext->10:At 55371
                    Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 55370
                    Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 55362
                    Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 55335
                    Single _164Constant;// 56:NoiseDeformerSCurve-ext->0:Constant 55381
                    Single _165Constant;// 56:NoiseDeformerSCurve-ext->0:Constant 55383
                    Single _166Multiply;// 56:NoiseDeformerSCurve-ext->41:Multiply 55382
                    Single _167Subtract;// 56:NoiseDeformerSCurve-ext->39:Subtract 55380
                    Single _168Multiply;// 56:NoiseDeformerSCurve-ext->35:Multiply 55385
                    Single _169Multiply;// 56:NoiseDeformerSCurve-ext->37:Multiply 55379
                    Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 55163
                    Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 55405
                    Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 55404
                    IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 55403
                    Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 55396
                    Single _175At;// 82:NoiseDeformerAt3-ext->4:At 55395
                    Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 55394
                    Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 55399
                    Single _178At;// 82:NoiseDeformerAt3-ext->7:At 55398
                    Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 55397
                    Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 55393
                    Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 55406
                    Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 55402
                    Single _183At;// 82:NoiseDeformerAt3-ext->10:At 55401
                    Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 55400
                    Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 55392
                    Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 55423
                    IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 55422
                    Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 55415
                    Single _189At;// 86:NoiseDeformerAt3-ext->4:At 55414
                    Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 55413
                    Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 55418
                    Single _192At;// 86:NoiseDeformerAt3-ext->7:At 55417
                    Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 55416
                    Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 55412
                    Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 55421
                    Single _196At;// 86:NoiseDeformerAt3-ext->10:At 55420
                    Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 55419
                    Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 55411
                    Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 55387
                    Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 55441
                    IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 55440
                    Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 55433
                    Single _203At;// 92:NoiseDeformerAt3-ext->4:At 55432
                    Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 55431
                    Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 55436
                    Single _206At;// 92:NoiseDeformerAt3-ext->7:At 55435
                    Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 55434
                    Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 55430
                    Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 55439
                    Single _210At;// 92:NoiseDeformerAt3-ext->10:At 55438
                    Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 55437
                    Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 55429
                    Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 55458
                    IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 55457
                    Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 55450
                    Single _216At;// 96:NoiseDeformerAt3-ext->4:At 55449
                    Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 55448
                    Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 55453
                    Single _219At;// 96:NoiseDeformerAt3-ext->7:At 55452
                    Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 55451
                    Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 55447
                    Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 55456
                    Single _223At;// 96:NoiseDeformerAt3-ext->10:At 55455
                    Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 55454
                    Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 55446
                    Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 55424
                    Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 55386
                    Single _228Constant;// 58:NoiseDeformerSCurve-ext->0:Constant 55462
                    Single _229Constant;// 58:NoiseDeformerSCurve-ext->0:Constant 55464
                    Single _230Multiply;// 58:NoiseDeformerSCurve-ext->41:Multiply 55463
                    Single _231Subtract;// 58:NoiseDeformerSCurve-ext->39:Subtract 55461
                    Single _232Multiply;// 58:NoiseDeformerSCurve-ext->35:Multiply 55466
                    Single _233Multiply;// 58:NoiseDeformerSCurve-ext->37:Multiply 55460
                    Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 55162
                    Single _235NaN;// 118:FloatIsNaN->1:NaN 55160
                    Int32 _236Compare;// 118:FloatIsNaN->2:Compare 55159
                    Int32 _237Zero;// 118:FloatIsNaN->4:Zero 55161
                    Boolean _238Equal;// 118:FloatIsNaN->3:Equal 55158
                    Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 55132
                    Int32 _241Zero;// 48:First->2:Zero 55479
                    Single _242At;// 48:First->0:At 55478
                    Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 55131
                    IArray[Single] _244Unit;// 43:Array2->2:Unit 55129
                    Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 55481
                    IArray[Single] _246Append;// 43:Array2->3:Append 55128
                    _0One = One();
                    _1At = At(x0, _0One);
                    _2AsInt = AsInt(_1At);
                    _3At = At(_13Map, _2AsInt);
                    _4Constant = 4096;
                    _5At = At(_23GenerateN, _2AsInt);
                    _6X = X(_5At);
                    _7Unit = Unit(_6X);
                    _8Y = Y(_5At);
                    _9Append = Append(_7Unit, _8Y);
                    _10Z = Z(_5At);
                    _11Append = Append(_9Append, _10Z);
                    _12Zero = Zero();
                    _13At = At(_11Append, _12Zero);
                    _14Add = Add(_4Constant, _13At);
                    _15Floor = Floor(_14Add);
                    _16Constant = 255;
                    _17And = And(_15Floor, _16Constant);
                    _18One = One();
                    _19Add = Add(_17And, _18One);
                    _20And = And(_19Add, _16Constant);
                    _21Pair = Pair(_17And, _20And);
                    _22Floor = Floor(_14Add);
                    _23AsFloat = AsFloat(_22Floor);
                    _24Subtract = Subtract(_14Add, _23AsFloat);
                    _25FloatOne = FloatOne();
                    _26Subtract = Subtract(_24Subtract, _25FloatOne);
                    _27Pair = Pair(_24Subtract, _26Subtract);
                    _28Pair = Pair(_21Pair, _27Pair);
                    _29PairItem2 = PairItem2(_28Pair);
                    _30PairItem1 = PairItem1(_29PairItem2);
                    _31PairItem2 = PairItem2(x1);
                    _32PairItem1 = PairItem1(_28Pair);
                    _33PairItem1 = PairItem1(_32PairItem1);
                    _34At = At(_31PairItem2, _33PairItem1);
                    _35Constant = 4096;
                    _36X = X(_5At);
                    _37Unit = Unit(_36X);
                    _38Y = Y(_5At);
                    _39Append = Append(_37Unit, _38Y);
                    _40Z = Z(_5At);
                    _41Append = Append(_39Append, _40Z);
                    _42One = One();
                    _43At = At(_41Append, _42One);
                    _44Add = Add(_35Constant, _43At);
                    _45Floor = Floor(_44Add);
                    _46Constant = 255;
                    _47And = And(_45Floor, _46Constant);
                    _48One = One();
                    _49Add = Add(_47And, _48One);
                    _50And = And(_49Add, _46Constant);
                    _51Pair = Pair(_47And, _50And);
                    _52Floor = Floor(_44Add);
                    _53AsFloat = AsFloat(_52Floor);
                    _54Subtract = Subtract(_44Add, _53AsFloat);
                    _55FloatOne = FloatOne();
                    _56Subtract = Subtract(_54Subtract, _55FloatOne);
                    _57Pair = Pair(_54Subtract, _56Subtract);
                    _58Pair = Pair(_51Pair, _57Pair);
                    _59PairItem1 = PairItem1(_58Pair);
                    _60PairItem1 = PairItem1(_59PairItem1);
                    _61Add = Add(_34At, _60PairItem1);
                    _62At = At(_31PairItem2, _61Add);
                    _63Constant = 4096;
                    _64X = X(_5At);
                    _65Unit = Unit(_64X);
                    _66Y = Y(_5At);
                    _67Append = Append(_65Unit, _66Y);
                    _68Z = Z(_5At);
                    _69Append = Append(_67Append, _68Z);
                    _70Two = Two();
                    _71At = At(_69Append, _70Two);
                    _72Add = Add(_63Constant, _71At);
                    _73Floor = Floor(_72Add);
                    _74Constant = 255;
                    _75And = And(_73Floor, _74Constant);
                    _76One = One();
                    _77Add = Add(_75And, _76One);
                    _78And = And(_77Add, _74Constant);
                    _79Pair = Pair(_75And, _78And);
                    _80Floor = Floor(_72Add);
                    _81AsFloat = AsFloat(_80Floor);
                    _82Subtract = Subtract(_72Add, _81AsFloat);
                    _83FloatOne = FloatOne();
                    _84Subtract = Subtract(_82Subtract, _83FloatOne);
                    _85Pair = Pair(_82Subtract, _84Subtract);
                    _86Pair = Pair(_79Pair, _85Pair);
                    _87PairItem1 = PairItem1(_86Pair);
                    _88PairItem1 = PairItem1(_87PairItem1);
                    _89Add = Add(_62At, _88PairItem1);
                    _90At = At(_24PairItem1, _89Add);
                    _91Zero = Zero();
                    _92At = At(_90At, _91Zero);
                    _93Multiply = Multiply(_30PairItem1, _92At);
                    _94PairItem2 = PairItem2(_58Pair);
                    _95PairItem1 = PairItem1(_94PairItem2);
                    _96One = One();
                    _97At = At(_90At, _96One);
                    _98Multiply = Multiply(_95PairItem1, _97At);
                    _99Add = Add(_93Multiply, _98Multiply);
                    _100PairItem2 = PairItem2(_86Pair);
                    _101PairItem1 = PairItem1(_100PairItem2);
                    _102Two = Two();
                    _103At = At(_90At, _102Two);
                    _104Multiply = Multiply(_101PairItem1, _103At);
                    _105Add = Add(_99Add, _104Multiply);
                    _106PairItem2 = PairItem2(_29PairItem2);
                    _107PairItem2 = PairItem2(_32PairItem1);
                    _108At = At(_31PairItem2, _107PairItem2);
                    _109Add = Add(_108At, _60PairItem1);
                    _110At = At(_31PairItem2, _109Add);
                    _111Add = Add(_110At, _88PairItem1);
                    _112At = At(_24PairItem1, _111Add);
                    _113Zero = Zero();
                    _114At = At(_112At, _113Zero);
                    _115Multiply = Multiply(_106PairItem2, _114At);
                    _116One = One();
                    _117At = At(_112At, _116One);
                    _118Multiply = Multiply(_95PairItem1, _117At);
                    _119Add = Add(_115Multiply, _118Multiply);
                    _120Two = Two();
                    _121At = At(_112At, _120Two);
                    _122Multiply = Multiply(_101PairItem1, _121At);
                    _123Add = Add(_119Add, _122Multiply);
                    _124Constant = 3;
                    _125Constant = 2;
                    _126Multiply = Multiply(_125Constant, _30PairItem1);
                    _127Subtract = Subtract(_124Constant, _126Multiply);
                    _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                    _129Multiply = Multiply(_127Subtract, _128Multiply);
                    _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                    _131PairItem2 = PairItem2(_59PairItem1);
                    _132Add = Add(_34At, _131PairItem2);
                    _133At = At(_31PairItem2, _132Add);
                    _134Add = Add(_133At, _88PairItem1);
                    _135At = At(_24PairItem1, _134Add);
                    _136Zero = Zero();
                    _137At = At(_135At, _136Zero);
                    _138Multiply = Multiply(_30PairItem1, _137At);
                    _139PairItem2 = PairItem2(_94PairItem2);
                    _140One = One();
                    _141At = At(_135At, _140One);
                    _142Multiply = Multiply(_139PairItem2, _141At);
                    _143Add = Add(_138Multiply, _142Multiply);
                    _144Two = Two();
                    _145At = At(_135At, _144Two);
                    _146Multiply = Multiply(_101PairItem1, _145At);
                    _147Add = Add(_143Add, _146Multiply);
                    _148Add = Add(_108At, _131PairItem2);
                    _149At = At(_31PairItem2, _148Add);
                    _150Add = Add(_149At, _88PairItem1);
                    _151At = At(_24PairItem1, _150Add);
                    _152Zero = Zero();
                    _153At = At(_151At, _152Zero);
                    _154Multiply = Multiply(_106PairItem2, _153At);
                    _155One = One();
                    _156At = At(_151At, _155One);
                    _157Multiply = Multiply(_139PairItem2, _156At);
                    _158Add = Add(_154Multiply, _157Multiply);
                    _159Two = Two();
                    _160At = At(_151At, _159Two);
                    _161Multiply = Multiply(_101PairItem1, _160At);
                    _162Add = Add(_158Add, _161Multiply);
                    _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                    _164Constant = 3;
                    _165Constant = 2;
                    _166Multiply = Multiply(_165Constant, _95PairItem1);
                    _167Subtract = Subtract(_164Constant, _166Multiply);
                    _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                    _169Multiply = Multiply(_167Subtract, _168Multiply);
                    _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                    _171PairItem2 = PairItem2(_87PairItem1);
                    _172Add = Add(_62At, _171PairItem2);
                    _173At = At(_24PairItem1, _172Add);
                    _174Zero = Zero();
                    _175At = At(_173At, _174Zero);
                    _176Multiply = Multiply(_30PairItem1, _175At);
                    _177One = One();
                    _178At = At(_173At, _177One);
                    _179Multiply = Multiply(_95PairItem1, _178At);
                    _180Add = Add(_176Multiply, _179Multiply);
                    _181PairItem2 = PairItem2(_100PairItem2);
                    _182Two = Two();
                    _183At = At(_173At, _182Two);
                    _184Multiply = Multiply(_181PairItem2, _183At);
                    _185Add = Add(_180Add, _184Multiply);
                    _186Add = Add(_110At, _171PairItem2);
                    _187At = At(_24PairItem1, _186Add);
                    _188Zero = Zero();
                    _189At = At(_187At, _188Zero);
                    _190Multiply = Multiply(_106PairItem2, _189At);
                    _191One = One();
                    _192At = At(_187At, _191One);
                    _193Multiply = Multiply(_95PairItem1, _192At);
                    _194Add = Add(_190Multiply, _193Multiply);
                    _195Two = Two();
                    _196At = At(_187At, _195Two);
                    _197Multiply = Multiply(_181PairItem2, _196At);
                    _198Add = Add(_194Add, _197Multiply);
                    _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                    _200Add = Add(_133At, _171PairItem2);
                    _201At = At(_24PairItem1, _200Add);
                    _202Zero = Zero();
                    _203At = At(_201At, _202Zero);
                    _204Multiply = Multiply(_30PairItem1, _203At);
                    _205One = One();
                    _206At = At(_201At, _205One);
                    _207Multiply = Multiply(_139PairItem2, _206At);
                    _208Add = Add(_204Multiply, _207Multiply);
                    _209Two = Two();
                    _210At = At(_201At, _209Two);
                    _211Multiply = Multiply(_181PairItem2, _210At);
                    _212Add = Add(_208Add, _211Multiply);
                    _213Add = Add(_149At, _171PairItem2);
                    _214At = At(_24PairItem1, _213Add);
                    _215Zero = Zero();
                    _216At = At(_214At, _215Zero);
                    _217Multiply = Multiply(_106PairItem2, _216At);
                    _218One = One();
                    _219At = At(_214At, _218One);
                    _220Multiply = Multiply(_139PairItem2, _219At);
                    _221Add = Add(_217Multiply, _220Multiply);
                    _222Two = Two();
                    _223At = At(_214At, _222Two);
                    _224Multiply = Multiply(_181PairItem2, _223At);
                    _225Add = Add(_221Add, _224Multiply);
                    _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                    _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                    _228Constant = 3;
                    _229Constant = 2;
                    _230Multiply = Multiply(_229Constant, _101PairItem1);
                    _231Subtract = Subtract(_228Constant, _230Multiply);
                    _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                    _233Multiply = Multiply(_231Subtract, _232Multiply);
                    _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                    _235NaN = NaN();
                    _236Compare = Compare(_234FloatLerp, _235NaN);
                    _237Zero = Zero();
                    _238Equal = Equal(_236Compare, _237Zero);
                    _240Multiply = Multiply(_3At, if (_238Equal)
                        {
                          Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 55467
                          _239FloatZero = FloatZero();
                          _239FloatZero;
                          }else
                        {
                          _234FloatLerp;
                          });
                    _241Zero = Zero();
                    _242At = At(x0, _241Zero);
                    _243Add = Add(_240Multiply, _242At);
                    _244Unit = Unit(_243Add);
                    _245Add = Add(_1At, _25FloatOne);
                    _246Append = Append(_244Unit, _245Add);
                    _246Append;
                    });
                _27Count = Count(_26GenerateN);
                _28One = One();
                _29Subtract = Subtract(_27Count, _28One);
                _30At = At(_26GenerateN, _29Subtract);
                _31Zero = Zero();
                _32At = At(_30At, _31Zero);
                _32At;
                }, _8X, _6Z);
            _10Apply2 = Apply2((Single x0, Single x1) => 
              {
                Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 55122
                IArray[Single] _1Unit;// 37:Array2->2:Unit 55121
                Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 55123
                IArray[Single] _3Append;// 37:Array2->3:Append 55120
                Single _4AsFloat;// 0:NoiseDeformer-ext->13:AsFloat 55483
                Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 55124
                Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 55138
                Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 55139
                Single _8Constant;// 0:NoiseDeformer-ext->0:Constant 55484
                IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 55137
                Single _10FloatOne;// 0:NoiseDeformer-ext->46:FloatOne 55486
                Single _11Subtract;// 0:NoiseDeformer-ext->3:Subtract 55485
                Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 55146
                IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 55136
                Single _14AsFloat;// 0:NoiseDeformer-ext->43:AsFloat 55491
                Single _15Constant;// 0:NoiseDeformer-ext->0:Constant 55494
                Single _16Multiply;// 0:NoiseDeformer-ext->30:Multiply 55493
                Single _17Constant;// 0:NoiseDeformer-ext->0:Constant 55496
                Single _18Constant;// 0:NoiseDeformer-ext->0:Constant 55497
                Single _19Divide;// 0:NoiseDeformer-ext->31:Divide 55495
                Single _20Multiply;// 0:NoiseDeformer-ext->39:Multiply 55492
                Single _21Multiply;// 0:NoiseDeformer-ext->38:Multiply 55490
                Vector3 _22Vector3;// 0:NoiseDeformer-ext->0:Vector3 55487
                IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 55471
                IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 55475
                Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 55482
                IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 55117
                Int32 _27Count;// 3:LastIndex->2:Count 55116
                Int32 _28One;// 3:MinusOne->2:One 55115
                Int32 _29Subtract;// 3:MinusOne->1:Subtract 55114
                IArray[Single] _30At;// 68:Last->0:At 55111
                Int32 _31Zero;// 69:First->2:Zero 55109
                Single _32At;// 69:First->0:At 55108
                _0FloatZero = FloatZero();
                _1Unit = Unit(_0FloatZero);
                _2FloatZero = FloatZero();
                _3Append = Append(_1Unit, _2FloatZero);
                _4AsFloat = AsFloat(numIterations);
                _5AsInt = AsInt(_4AsFloat);
                _6FloatOne = FloatOne();
                _7AsInt = AsInt(_4AsFloat);
                _8Constant = 2;
                _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
                  {
                    Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 55141
                    _0Multiply = Multiply(_8Constant, x0);
                    _0Multiply;
                    });
                _10FloatOne = FloatOne();
                _11Subtract = Subtract(_10FloatOne, roughness);
                _12NegativeFloat = NegativeFloat(_11Subtract);
                _13Map = Map(_9GenerateN, (Single x0) => 
                  {
                    Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 55144
                    _0Pow = Pow(x0, _12NegativeFloat);
                    _0Pow;
                    });
                _14AsFloat = AsFloat(phase);
                _15Constant = 0.005;
                _16Multiply = Multiply(frequency, _15Constant);
                _17Constant = 1200;
                _18Constant = 4800;
                _19Divide = Divide(_17Constant, _18Constant);
                _20Multiply = Multiply(_16Multiply, _19Divide);
                _21Multiply = Multiply(_14AsFloat, _20Multiply);
                _22Vector3 = Vector3(x0, x1, _21Multiply);
                _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
                  {
                    Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 55473
                    _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                    _0MultiplyByScalar;
                    });
                _24PairItem1 = PairItem1(x1);
                _25FloatOne = FloatOne();
                _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
                  {
                    Int32 _0One;// 49:Second->2:One 55151
                    Single _1At;// 49:Second->0:At 55150
                    Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 55148
                    Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 55134
                    Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 55189
                    Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 55469
                    Single _6X;// 2:VectorAsArray->1:X 55200
                    IArray[Single] _7Unit;// 4:Array3->2:Unit 55199
                    Single _8Y;// 2:VectorAsArray->2:Y 55201
                    IArray[Single] _9Append;// 4:Array3->3:Append 55198
                    Single _10Z;// 2:VectorAsArray->3:Z 55202
                    IArray[Single] _11Append;// 4:Array3->6:Append 55197
                    Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 55215
                    Single _13At;// 1:VectorComponent-ext->3:At 55192
                    Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 55188
                    Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 55187
                    Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 55203
                    Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 55186
                    Int32 _18One;// 13:PlusOne->1:One 55207
                    Int32 _19Add;// 13:PlusOne->0:Add 55206
                    Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 55204
                    Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 55185
                    Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 55212
                    Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55211
                    Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55209
                    Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55214
                    Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55213
                    Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 55208
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 55184
                    Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 55181
                    Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 55180
                    IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 55476
                    Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 55226
                    Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 55225
                    Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 55224
                    Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 55236
                    Single _36X;// 2:VectorAsArray->1:X 55247
                    IArray[Single] _37Unit;// 4:Array3->2:Unit 55246
                    Single _38Y;// 2:VectorAsArray->2:Y 55248
                    IArray[Single] _39Append;// 4:Array3->3:Append 55245
                    Single _40Z;// 2:VectorAsArray->3:Z 55249
                    IArray[Single] _41Append;// 4:Array3->6:Append 55244
                    Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 55262
                    Single _43At;// 1:VectorComponent-ext->3:At 55239
                    Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 55235
                    Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 55234
                    Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 55250
                    Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 55233
                    Int32 _48One;// 13:PlusOne->1:One 55254
                    Int32 _49Add;// 13:PlusOne->0:Add 55253
                    Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 55251
                    Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 55232
                    Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 55259
                    Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55258
                    Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55256
                    Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55261
                    Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55260
                    Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 55255
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 55231
                    Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 55228
                    Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 55227
                    Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 55222
                    Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 55220
                    Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 55272
                    Single _64X;// 2:VectorAsArray->1:X 55283
                    IArray[Single] _65Unit;// 4:Array3->2:Unit 55282
                    Single _66Y;// 2:VectorAsArray->2:Y 55284
                    IArray[Single] _67Append;// 4:Array3->3:Append 55281
                    Single _68Z;// 2:VectorAsArray->3:Z 55285
                    IArray[Single] _69Append;// 4:Array3->6:Append 55280
                    Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 55298
                    Single _71At;// 1:VectorComponent-ext->3:At 55275
                    Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 55271
                    Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 55270
                    Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 55286
                    Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 55269
                    Int32 _76One;// 13:PlusOne->1:One 55290
                    Int32 _77Add;// 13:PlusOne->0:Add 55289
                    Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 55287
                    Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 55268
                    Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 55295
                    Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55294
                    Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55292
                    Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55297
                    Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55296
                    Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 55291
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 55267
                    Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 55264
                    Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 55263
                    Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 55218
                    IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 55216
                    Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 55173
                    Single _92At;// 62:NoiseDeformerAt3-ext->4:At 55172
                    Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 55171
                    Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 55300
                    Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 55299
                    Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 55176
                    Single _97At;// 62:NoiseDeformerAt3-ext->7:At 55175
                    Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 55174
                    Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 55170
                    Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 55302
                    Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 55301
                    Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 55179
                    Single _103At;// 62:NoiseDeformerAt3-ext->10:At 55178
                    Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 55177
                    Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 55169
                    Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 55318
                    Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 55326
                    Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 55325
                    Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 55323
                    Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 55322
                    Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 55320
                    IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 55319
                    Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 55311
                    Single _114At;// 66:NoiseDeformerAt3-ext->4:At 55310
                    Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 55309
                    Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 55314
                    Single _117At;// 66:NoiseDeformerAt3-ext->7:At 55313
                    Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 55312
                    Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 55308
                    Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 55317
                    Single _121At;// 66:NoiseDeformerAt3-ext->10:At 55316
                    Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 55315
                    Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 55307
                    Single _124Constant;// 42:NoiseDeformerSCurve-ext->0:Constant 55330
                    Single _125Constant;// 42:NoiseDeformerSCurve-ext->0:Constant 55332
                    Single _126Multiply;// 42:NoiseDeformerSCurve-ext->41:Multiply 55331
                    Single _127Subtract;// 42:NoiseDeformerSCurve-ext->39:Subtract 55329
                    Single _128Multiply;// 42:NoiseDeformerSCurve-ext->35:Multiply 55334
                    Single _129Multiply;// 42:NoiseDeformerSCurve-ext->37:Multiply 55328
                    Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 55164
                    Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 55356
                    Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 55355
                    Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 55354
                    Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 55352
                    IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 55351
                    Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 55344
                    Single _137At;// 72:NoiseDeformerAt3-ext->4:At 55343
                    Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 55342
                    Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 55357
                    Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 55347
                    Single _141At;// 72:NoiseDeformerAt3-ext->7:At 55346
                    Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 55345
                    Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 55341
                    Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 55350
                    Single _145At;// 72:NoiseDeformerAt3-ext->10:At 55349
                    Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 55348
                    Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 55340
                    Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 55377
                    Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 55376
                    Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 55374
                    IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 55373
                    Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 55366
                    Single _153At;// 75:NoiseDeformerAt3-ext->4:At 55365
                    Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 55364
                    Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 55369
                    Single _156At;// 75:NoiseDeformerAt3-ext->7:At 55368
                    Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 55367
                    Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 55363
                    Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 55372
                    Single _160At;// 75:NoiseDeformerAt3-ext->10:At 55371
                    Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 55370
                    Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 55362
                    Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 55335
                    Single _164Constant;// 56:NoiseDeformerSCurve-ext->0:Constant 55381
                    Single _165Constant;// 56:NoiseDeformerSCurve-ext->0:Constant 55383
                    Single _166Multiply;// 56:NoiseDeformerSCurve-ext->41:Multiply 55382
                    Single _167Subtract;// 56:NoiseDeformerSCurve-ext->39:Subtract 55380
                    Single _168Multiply;// 56:NoiseDeformerSCurve-ext->35:Multiply 55385
                    Single _169Multiply;// 56:NoiseDeformerSCurve-ext->37:Multiply 55379
                    Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 55163
                    Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 55405
                    Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 55404
                    IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 55403
                    Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 55396
                    Single _175At;// 82:NoiseDeformerAt3-ext->4:At 55395
                    Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 55394
                    Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 55399
                    Single _178At;// 82:NoiseDeformerAt3-ext->7:At 55398
                    Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 55397
                    Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 55393
                    Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 55406
                    Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 55402
                    Single _183At;// 82:NoiseDeformerAt3-ext->10:At 55401
                    Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 55400
                    Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 55392
                    Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 55423
                    IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 55422
                    Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 55415
                    Single _189At;// 86:NoiseDeformerAt3-ext->4:At 55414
                    Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 55413
                    Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 55418
                    Single _192At;// 86:NoiseDeformerAt3-ext->7:At 55417
                    Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 55416
                    Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 55412
                    Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 55421
                    Single _196At;// 86:NoiseDeformerAt3-ext->10:At 55420
                    Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 55419
                    Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 55411
                    Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 55387
                    Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 55441
                    IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 55440
                    Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 55433
                    Single _203At;// 92:NoiseDeformerAt3-ext->4:At 55432
                    Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 55431
                    Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 55436
                    Single _206At;// 92:NoiseDeformerAt3-ext->7:At 55435
                    Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 55434
                    Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 55430
                    Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 55439
                    Single _210At;// 92:NoiseDeformerAt3-ext->10:At 55438
                    Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 55437
                    Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 55429
                    Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 55458
                    IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 55457
                    Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 55450
                    Single _216At;// 96:NoiseDeformerAt3-ext->4:At 55449
                    Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 55448
                    Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 55453
                    Single _219At;// 96:NoiseDeformerAt3-ext->7:At 55452
                    Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 55451
                    Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 55447
                    Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 55456
                    Single _223At;// 96:NoiseDeformerAt3-ext->10:At 55455
                    Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 55454
                    Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 55446
                    Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 55424
                    Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 55386
                    Single _228Constant;// 58:NoiseDeformerSCurve-ext->0:Constant 55462
                    Single _229Constant;// 58:NoiseDeformerSCurve-ext->0:Constant 55464
                    Single _230Multiply;// 58:NoiseDeformerSCurve-ext->41:Multiply 55463
                    Single _231Subtract;// 58:NoiseDeformerSCurve-ext->39:Subtract 55461
                    Single _232Multiply;// 58:NoiseDeformerSCurve-ext->35:Multiply 55466
                    Single _233Multiply;// 58:NoiseDeformerSCurve-ext->37:Multiply 55460
                    Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 55162
                    Single _235NaN;// 118:FloatIsNaN->1:NaN 55160
                    Int32 _236Compare;// 118:FloatIsNaN->2:Compare 55159
                    Int32 _237Zero;// 118:FloatIsNaN->4:Zero 55161
                    Boolean _238Equal;// 118:FloatIsNaN->3:Equal 55158
                    Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 55132
                    Int32 _241Zero;// 48:First->2:Zero 55479
                    Single _242At;// 48:First->0:At 55478
                    Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 55131
                    IArray[Single] _244Unit;// 43:Array2->2:Unit 55129
                    Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 55481
                    IArray[Single] _246Append;// 43:Array2->3:Append 55128
                    _0One = One();
                    _1At = At(x0, _0One);
                    _2AsInt = AsInt(_1At);
                    _3At = At(_13Map, _2AsInt);
                    _4Constant = 4096;
                    _5At = At(_23GenerateN, _2AsInt);
                    _6X = X(_5At);
                    _7Unit = Unit(_6X);
                    _8Y = Y(_5At);
                    _9Append = Append(_7Unit, _8Y);
                    _10Z = Z(_5At);
                    _11Append = Append(_9Append, _10Z);
                    _12Zero = Zero();
                    _13At = At(_11Append, _12Zero);
                    _14Add = Add(_4Constant, _13At);
                    _15Floor = Floor(_14Add);
                    _16Constant = 255;
                    _17And = And(_15Floor, _16Constant);
                    _18One = One();
                    _19Add = Add(_17And, _18One);
                    _20And = And(_19Add, _16Constant);
                    _21Pair = Pair(_17And, _20And);
                    _22Floor = Floor(_14Add);
                    _23AsFloat = AsFloat(_22Floor);
                    _24Subtract = Subtract(_14Add, _23AsFloat);
                    _25FloatOne = FloatOne();
                    _26Subtract = Subtract(_24Subtract, _25FloatOne);
                    _27Pair = Pair(_24Subtract, _26Subtract);
                    _28Pair = Pair(_21Pair, _27Pair);
                    _29PairItem2 = PairItem2(_28Pair);
                    _30PairItem1 = PairItem1(_29PairItem2);
                    _31PairItem2 = PairItem2(x1);
                    _32PairItem1 = PairItem1(_28Pair);
                    _33PairItem1 = PairItem1(_32PairItem1);
                    _34At = At(_31PairItem2, _33PairItem1);
                    _35Constant = 4096;
                    _36X = X(_5At);
                    _37Unit = Unit(_36X);
                    _38Y = Y(_5At);
                    _39Append = Append(_37Unit, _38Y);
                    _40Z = Z(_5At);
                    _41Append = Append(_39Append, _40Z);
                    _42One = One();
                    _43At = At(_41Append, _42One);
                    _44Add = Add(_35Constant, _43At);
                    _45Floor = Floor(_44Add);
                    _46Constant = 255;
                    _47And = And(_45Floor, _46Constant);
                    _48One = One();
                    _49Add = Add(_47And, _48One);
                    _50And = And(_49Add, _46Constant);
                    _51Pair = Pair(_47And, _50And);
                    _52Floor = Floor(_44Add);
                    _53AsFloat = AsFloat(_52Floor);
                    _54Subtract = Subtract(_44Add, _53AsFloat);
                    _55FloatOne = FloatOne();
                    _56Subtract = Subtract(_54Subtract, _55FloatOne);
                    _57Pair = Pair(_54Subtract, _56Subtract);
                    _58Pair = Pair(_51Pair, _57Pair);
                    _59PairItem1 = PairItem1(_58Pair);
                    _60PairItem1 = PairItem1(_59PairItem1);
                    _61Add = Add(_34At, _60PairItem1);
                    _62At = At(_31PairItem2, _61Add);
                    _63Constant = 4096;
                    _64X = X(_5At);
                    _65Unit = Unit(_64X);
                    _66Y = Y(_5At);
                    _67Append = Append(_65Unit, _66Y);
                    _68Z = Z(_5At);
                    _69Append = Append(_67Append, _68Z);
                    _70Two = Two();
                    _71At = At(_69Append, _70Two);
                    _72Add = Add(_63Constant, _71At);
                    _73Floor = Floor(_72Add);
                    _74Constant = 255;
                    _75And = And(_73Floor, _74Constant);
                    _76One = One();
                    _77Add = Add(_75And, _76One);
                    _78And = And(_77Add, _74Constant);
                    _79Pair = Pair(_75And, _78And);
                    _80Floor = Floor(_72Add);
                    _81AsFloat = AsFloat(_80Floor);
                    _82Subtract = Subtract(_72Add, _81AsFloat);
                    _83FloatOne = FloatOne();
                    _84Subtract = Subtract(_82Subtract, _83FloatOne);
                    _85Pair = Pair(_82Subtract, _84Subtract);
                    _86Pair = Pair(_79Pair, _85Pair);
                    _87PairItem1 = PairItem1(_86Pair);
                    _88PairItem1 = PairItem1(_87PairItem1);
                    _89Add = Add(_62At, _88PairItem1);
                    _90At = At(_24PairItem1, _89Add);
                    _91Zero = Zero();
                    _92At = At(_90At, _91Zero);
                    _93Multiply = Multiply(_30PairItem1, _92At);
                    _94PairItem2 = PairItem2(_58Pair);
                    _95PairItem1 = PairItem1(_94PairItem2);
                    _96One = One();
                    _97At = At(_90At, _96One);
                    _98Multiply = Multiply(_95PairItem1, _97At);
                    _99Add = Add(_93Multiply, _98Multiply);
                    _100PairItem2 = PairItem2(_86Pair);
                    _101PairItem1 = PairItem1(_100PairItem2);
                    _102Two = Two();
                    _103At = At(_90At, _102Two);
                    _104Multiply = Multiply(_101PairItem1, _103At);
                    _105Add = Add(_99Add, _104Multiply);
                    _106PairItem2 = PairItem2(_29PairItem2);
                    _107PairItem2 = PairItem2(_32PairItem1);
                    _108At = At(_31PairItem2, _107PairItem2);
                    _109Add = Add(_108At, _60PairItem1);
                    _110At = At(_31PairItem2, _109Add);
                    _111Add = Add(_110At, _88PairItem1);
                    _112At = At(_24PairItem1, _111Add);
                    _113Zero = Zero();
                    _114At = At(_112At, _113Zero);
                    _115Multiply = Multiply(_106PairItem2, _114At);
                    _116One = One();
                    _117At = At(_112At, _116One);
                    _118Multiply = Multiply(_95PairItem1, _117At);
                    _119Add = Add(_115Multiply, _118Multiply);
                    _120Two = Two();
                    _121At = At(_112At, _120Two);
                    _122Multiply = Multiply(_101PairItem1, _121At);
                    _123Add = Add(_119Add, _122Multiply);
                    _124Constant = 3;
                    _125Constant = 2;
                    _126Multiply = Multiply(_125Constant, _30PairItem1);
                    _127Subtract = Subtract(_124Constant, _126Multiply);
                    _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                    _129Multiply = Multiply(_127Subtract, _128Multiply);
                    _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                    _131PairItem2 = PairItem2(_59PairItem1);
                    _132Add = Add(_34At, _131PairItem2);
                    _133At = At(_31PairItem2, _132Add);
                    _134Add = Add(_133At, _88PairItem1);
                    _135At = At(_24PairItem1, _134Add);
                    _136Zero = Zero();
                    _137At = At(_135At, _136Zero);
                    _138Multiply = Multiply(_30PairItem1, _137At);
                    _139PairItem2 = PairItem2(_94PairItem2);
                    _140One = One();
                    _141At = At(_135At, _140One);
                    _142Multiply = Multiply(_139PairItem2, _141At);
                    _143Add = Add(_138Multiply, _142Multiply);
                    _144Two = Two();
                    _145At = At(_135At, _144Two);
                    _146Multiply = Multiply(_101PairItem1, _145At);
                    _147Add = Add(_143Add, _146Multiply);
                    _148Add = Add(_108At, _131PairItem2);
                    _149At = At(_31PairItem2, _148Add);
                    _150Add = Add(_149At, _88PairItem1);
                    _151At = At(_24PairItem1, _150Add);
                    _152Zero = Zero();
                    _153At = At(_151At, _152Zero);
                    _154Multiply = Multiply(_106PairItem2, _153At);
                    _155One = One();
                    _156At = At(_151At, _155One);
                    _157Multiply = Multiply(_139PairItem2, _156At);
                    _158Add = Add(_154Multiply, _157Multiply);
                    _159Two = Two();
                    _160At = At(_151At, _159Two);
                    _161Multiply = Multiply(_101PairItem1, _160At);
                    _162Add = Add(_158Add, _161Multiply);
                    _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                    _164Constant = 3;
                    _165Constant = 2;
                    _166Multiply = Multiply(_165Constant, _95PairItem1);
                    _167Subtract = Subtract(_164Constant, _166Multiply);
                    _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                    _169Multiply = Multiply(_167Subtract, _168Multiply);
                    _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                    _171PairItem2 = PairItem2(_87PairItem1);
                    _172Add = Add(_62At, _171PairItem2);
                    _173At = At(_24PairItem1, _172Add);
                    _174Zero = Zero();
                    _175At = At(_173At, _174Zero);
                    _176Multiply = Multiply(_30PairItem1, _175At);
                    _177One = One();
                    _178At = At(_173At, _177One);
                    _179Multiply = Multiply(_95PairItem1, _178At);
                    _180Add = Add(_176Multiply, _179Multiply);
                    _181PairItem2 = PairItem2(_100PairItem2);
                    _182Two = Two();
                    _183At = At(_173At, _182Two);
                    _184Multiply = Multiply(_181PairItem2, _183At);
                    _185Add = Add(_180Add, _184Multiply);
                    _186Add = Add(_110At, _171PairItem2);
                    _187At = At(_24PairItem1, _186Add);
                    _188Zero = Zero();
                    _189At = At(_187At, _188Zero);
                    _190Multiply = Multiply(_106PairItem2, _189At);
                    _191One = One();
                    _192At = At(_187At, _191One);
                    _193Multiply = Multiply(_95PairItem1, _192At);
                    _194Add = Add(_190Multiply, _193Multiply);
                    _195Two = Two();
                    _196At = At(_187At, _195Two);
                    _197Multiply = Multiply(_181PairItem2, _196At);
                    _198Add = Add(_194Add, _197Multiply);
                    _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                    _200Add = Add(_133At, _171PairItem2);
                    _201At = At(_24PairItem1, _200Add);
                    _202Zero = Zero();
                    _203At = At(_201At, _202Zero);
                    _204Multiply = Multiply(_30PairItem1, _203At);
                    _205One = One();
                    _206At = At(_201At, _205One);
                    _207Multiply = Multiply(_139PairItem2, _206At);
                    _208Add = Add(_204Multiply, _207Multiply);
                    _209Two = Two();
                    _210At = At(_201At, _209Two);
                    _211Multiply = Multiply(_181PairItem2, _210At);
                    _212Add = Add(_208Add, _211Multiply);
                    _213Add = Add(_149At, _171PairItem2);
                    _214At = At(_24PairItem1, _213Add);
                    _215Zero = Zero();
                    _216At = At(_214At, _215Zero);
                    _217Multiply = Multiply(_106PairItem2, _216At);
                    _218One = One();
                    _219At = At(_214At, _218One);
                    _220Multiply = Multiply(_139PairItem2, _219At);
                    _221Add = Add(_217Multiply, _220Multiply);
                    _222Two = Two();
                    _223At = At(_214At, _222Two);
                    _224Multiply = Multiply(_181PairItem2, _223At);
                    _225Add = Add(_221Add, _224Multiply);
                    _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                    _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                    _228Constant = 3;
                    _229Constant = 2;
                    _230Multiply = Multiply(_229Constant, _101PairItem1);
                    _231Subtract = Subtract(_228Constant, _230Multiply);
                    _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                    _233Multiply = Multiply(_231Subtract, _232Multiply);
                    _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                    _235NaN = NaN();
                    _236Compare = Compare(_234FloatLerp, _235NaN);
                    _237Zero = Zero();
                    _238Equal = Equal(_236Compare, _237Zero);
                    _240Multiply = Multiply(_3At, if (_238Equal)
                        {
                          Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 55467
                          _239FloatZero = FloatZero();
                          _239FloatZero;
                          }else
                        {
                          _234FloatLerp;
                          });
                    _241Zero = Zero();
                    _242At = At(x0, _241Zero);
                    _243Add = Add(_240Multiply, _242At);
                    _244Unit = Unit(_243Add);
                    _245Add = Add(_1At, _25FloatOne);
                    _246Append = Append(_244Unit, _245Add);
                    _246Append;
                    });
                _27Count = Count(_26GenerateN);
                _28One = One();
                _29Subtract = Subtract(_27Count, _28One);
                _30At = At(_26GenerateN, _29Subtract);
                _31Zero = Zero();
                _32At = At(_30At, _31Zero);
                _32At;
                }, _8X, _5Y);
            _11Vector3 = Vector3(_7Apply2, _9Apply2, _10Apply2);
            _12Vector3 = Vector3(strengthX, strengthY, strengthZ);
            _13Multiply = Multiply(_11Vector3, _12Vector3);
            _14Add = Add(x0, _13Multiply);
            _14Add;
            }, _28Pair);
        _36Pass-through: Matrix = if (use gizmo node)
          {
            Boolean _30IsValidNode;// 4:NodeTransformInLocalSpaceOrIdentity-ext->3:IsValidNode 55639
            _30IsValidNode = IsValidNode(gizmo node);
            if (_30IsValidNode)
              {
                Matrix _31ObjectTransformBeforeWSM;// 2:NodeTMInLocalSpace-ext->3:ObjectTransformBeforeWSM 55643
                Matrix _32InvertMatrix;// 2:NodeTMInLocalSpace-ext->2:InvertMatrix 55644
                Matrix _33Multiply;// 2:NodeTMInLocalSpace-ext->4:Multiply 55642
                _31ObjectTransformBeforeWSM = ObjectTransformBeforeWSM(gizmo node);
                _32InvertMatrix = InvertMatrix(modifierTransform);
                _33Multiply = Multiply(_31ObjectTransformBeforeWSM, _32InvertMatrix);
                _33Multiply;
                }else
              {
                Matrix _34MatrixIdentity;// 4:NodeTransformInLocalSpaceOrIdentity-ext->5:MatrixIdentity 55645
                _34MatrixIdentity = MatrixIdentity();
                _34MatrixIdentity;
                };
            }else
          {
            Matrix _35MatrixIdentity;// 16:NodeTransformInLocalSpaceConditionally-ext->5:MatrixIdentity 55646
            _35MatrixIdentity = MatrixIdentity();
            _35MatrixIdentity;
            };
        _37InvertMatrix = InvertMatrix(_36Pass-through: Matrix);
        _38ParallelMap = ParallelMap(_1MeshVertices, (Vector3 x0) => 
          {
            Vector3 _0Transform;// 2:DeformVertices-ext->11:Transform 55085
            Vector3 _1Apply1;// 2:DeformVertices-ext->8:Apply1 55084
            Vector3 _2Transform;// 2:DeformVertices-ext->9:Transform 55083
            _0Transform = Transform(x0, _37InvertMatrix);
            _1Apply1 = Apply1(_29Bind2of2, _0Transform);
            _2Transform = Transform(_1Apply1, _36Pass-through: Matrix);
            _2Transform;
            });
        _39Zero = Zero();
        _40PerVertexData = PerVertexData(mesh, _39Zero);
        _41Combine3 = Combine3(_0MeshVertices, _38ParallelMap, _40PerVertexData, (Vector3 x0, Vector3 x1, Single x2) => 
          {
            Vector3 _0Lerp;// 1:LerpVectors-ext->8:Lerp 55075
            _0Lerp = Lerp(x0, x1, x2);
            _0Lerp;
            });
        _42SetMeshVertices = SetMeshVertices(mesh, _41Combine3);
        _42SetMeshVertices;
        }, () => 
      {
        IArray[Vector3] _0MeshVertices;// 2:DeformVertices-ext->4:MeshVertices 55082
        Int32 _1Constant;// 72:NoiseDeformerNoiseInit-ext->0:Constant 55522
        Int32 _2One;// 126:PlusOne->1:One 55520
        Int32 _3Add;// 126:PlusOne->0:Add 55519
        IArray[Int32] _4Range;// 72:NoiseDeformerNoiseInit-ext->93:Range 55517
        Int32 _5Constant;// 72:NoiseDeformerNoiseInit-ext->0:Constant 55544
        IArray[Int32] _6Range;// 72:NoiseDeformerNoiseInit-ext->105:Range 55543
        IArray[IArray[Single]] _7Map;// 72:NoiseDeformerNoiseInit-ext->94:Map 55516
        IArray[IArray[Single]] _8Concatenate;// 72:NoiseDeformerNoiseInit-ext->70:Concatenate 55514
        IArray[Int32] _9Indices;// 72:NoiseDeformerNoiseInit-ext->2:Indices 55568
        Int32 _10Add;// 72:NoiseDeformerNoiseInit-ext->21:Add 55571
        Int32 _11Two;// 72:NoiseDeformerNoiseInit-ext->24:Two 55574
        Int32 _12Add;// 72:NoiseDeformerNoiseInit-ext->22:Add 55570
        IArray[Int32] _13Range;// 72:NoiseDeformerNoiseInit-ext->25:Range 55569
        Int32 _14Count;// 3:LastIndex->2:Count 55600
        Int32 _15One;// 3:MinusOne->2:One 55599
        Int32 _16Subtract;// 3:MinusOne->1:Subtract 55598
        Int32 _17At;// 35:Last->0:At 55595
        IArray[Int32] _18Map;// 72:NoiseDeformerNoiseInit-ext->20:Map 55586
        IArray[Int32] _19Aggregate;// 72:NoiseDeformerNoiseInit-ext->1:Aggregate 55566
        Int32 _20Two;// 72:NoiseDeformerNoiseInit-ext->67:Two 55614
        Int32 _21Add;// 72:NoiseDeformerNoiseInit-ext->66:Add 55612
        IArray[Int32] _22Range;// 72:NoiseDeformerNoiseInit-ext->69:Range 55611
        IArray[Int32] _23Map;// 72:NoiseDeformerNoiseInit-ext->82:Map 55609
        IArray[Int32] _24Map;// 79:SelectByIndex->2:Map 55619
        IArray[Tuple[Int32, Int32]] _25Combine;// 86:ZipToTuple->0:Combine 55607
        IArray[Int32] _26SetValues;// 72:NoiseDeformerNoiseInit-ext->76:SetValues 55563
        Tuple[IArray[IArray[Single]], IArray[Int32]] _27Pair;// 72:NoiseDeformerNoiseInit-ext->87:Pair 55513
        Func[Vector3, Vector3] _28Bind2of2;// 0:Noise-ext->5:Bind2of2 55088
        Matrix _35Pass-through: Matrix;// 0:Pass-through: Matrix 55055
        Matrix _36InvertMatrix;// 2:DeformVertices-ext->7:InvertMatrix 55087
        IArray[Vector3] _37ParallelMap;// 2:DeformVertices-ext->5:ParallelMap 55081
        TriMesh _38SetMeshVertices;// 3:MeshSetVertices-ext->8:SetMeshVertices 55080
        _0MeshVertices = MeshVertices(mesh);
        _1Constant = 256;
        _2One = One();
        _3Add = Add(_1Constant, _2One);
        _4Range = Range(_3Add);
        _5Constant = 3;
        _6Range = Range(_5Constant);
        _7Map = Map(_4Range, (Int32 x0) => 
          {
            Func[Int32, Single] _0Bind1of2;// 72:NoiseDeformerNoiseInit-ext->116:Bind1of2 55545
            IArray[Single] _1Map;// 72:NoiseDeformerNoiseInit-ext->108:Map 55542
            Int32 _2Zero;// 118:ArrayToVector3->2:Zero 55537
            Single _3At;// 118:ArrayToVector3->1:At 55536
            Int32 _4One;// 118:ArrayToVector3->3:One 55539
            Single _5At;// 118:ArrayToVector3->5:At 55538
            Int32 _6Two;// 118:ArrayToVector3->4:Two 55541
            Single _7At;// 118:ArrayToVector3->6:At 55540
            Vector3 _8Vector3;// 118:ArrayToVector3->7:Vector3 55535
            Vector3 _9Normalize;// 72:NoiseDeformerNoiseInit-ext->120:Normalize 55533
            Single _10X;// 117:VectorToArray->1:X 55530
            IArray[Single] _11Unit;// 4:Array3->2:Unit 55529
            Single _12Y;// 117:VectorToArray->2:Y 55531
            IArray[Single] _13Append;// 4:Array3->3:Append 55528
            Single _14Z;// 117:VectorToArray->3:Z 55532
            IArray[Single] _15Append;// 4:Array3->6:Append 55527
            _0Bind1of2 = Bind1of2((Int32 x0, Int32 x1) => 
              {
                Int32 _0Count;// 72:NoiseDeformerNoiseInit-ext->114:Count 55558
                Int32 _1Multiply;// 72:NoiseDeformerNoiseInit-ext->115:Multiply 55557
                Int32 _2Add;// 72:NoiseDeformerNoiseInit-ext->113:Add 55555
                Int32 _3RandInt;// 72:NoiseDeformerNoiseInit-ext->97:RandInt 55553
                Single _4AsFloat;// 72:NoiseDeformerNoiseInit-ext->121:AsFloat 55552
                Single _5Abs;// 72:NoiseDeformerNoiseInit-ext->123:Abs 55551
                Int32 _6AsInt;// 72:NoiseDeformerNoiseInit-ext->122:AsInt 55550
                Int32 _7Add;// 72:NoiseDeformerNoiseInit-ext->99:Add 55560
                Int32 _8Modulo;// 72:NoiseDeformerNoiseInit-ext->98:Modulo 55549
                Int32 _9Subtract;// 72:NoiseDeformerNoiseInit-ext->104:Subtract 55548
                Single _10AsFloat;// 72:NoiseDeformerNoiseInit-ext->100:AsFloat 55547
                Single _11AsFloat;// 72:NoiseDeformerNoiseInit-ext->103:AsFloat 55562
                Single _12Divide;// 72:NoiseDeformerNoiseInit-ext->101:Divide 55546
                _0Count = Count(_4Range);
                _1Multiply = Multiply(_0Count, x1);
                _2Add = Add(x0, _1Multiply);
                _3RandInt = RandInt(seed, _2Add);
                _4AsFloat = AsFloat(_3RandInt);
                _5Abs = Abs(_4AsFloat);
                _6AsInt = AsInt(_5Abs);
                _7Add = Add(_1Constant, _1Constant);
                _8Modulo = Modulo(_6AsInt, _7Add);
                _9Subtract = Subtract(_8Modulo, _1Constant);
                _10AsFloat = AsFloat(_9Subtract);
                _11AsFloat = AsFloat(_1Constant);
                _12Divide = Divide(_10AsFloat, _11AsFloat);
                _12Divide;
                }, x0);
            _1Map = Map(_6Range, _0Bind1of2);
            _2Zero = Zero();
            _3At = At(_1Map, _2Zero);
            _4One = One();
            _5At = At(_1Map, _4One);
            _6Two = Two();
            _7At = At(_1Map, _6Two);
            _8Vector3 = Vector3(_3At, _5At, _7At);
            _9Normalize = Normalize(_8Vector3);
            _10X = X(_9Normalize);
            _11Unit = Unit(_10X);
            _12Y = Y(_9Normalize);
            _13Append = Append(_11Unit, _12Y);
            _14Z = Z(_9Normalize);
            _15Append = Append(_13Append, _14Z);
            _15Append;
            });
        _8Concatenate = Concatenate(_7Map, _7Map);
        _9Indices = Indices(_7Map);
        _10Add = Add(_1Constant, _1Constant);
        _11Two = Two();
        _12Add = Add(_10Add, _11Two);
        _13Range = Range(_12Add);
        _14Count = Count(_9Indices);
        _15One = One();
        _16Subtract = Subtract(_14Count, _15One);
        _17At = At(_9Indices, _16Subtract);
        _18Map = Map(_9Indices, (Int32 x0) => 
          {
            Int32 _0Add;// 72:NoiseDeformerNoiseInit-ext->36:Add 55593
            Int32 _1RandInt;// 72:NoiseDeformerNoiseInit-ext->34:RandInt 55591
            Single _2AsFloat;// 72:NoiseDeformerNoiseInit-ext->92:AsFloat 55590
            Single _3Abs;// 72:NoiseDeformerNoiseInit-ext->90:Abs 55589
            Int32 _4AsInt;// 72:NoiseDeformerNoiseInit-ext->91:AsInt 55588
            Int32 _5Modulo;// 72:NoiseDeformerNoiseInit-ext->40:Modulo 55587
            _0Add = Add(_17At, x0);
            _1RandInt = RandInt(seed, _0Add);
            _2AsFloat = AsFloat(_1RandInt);
            _3Abs = Abs(_2AsFloat);
            _4AsInt = AsInt(_3Abs);
            _5Modulo = Modulo(_4AsInt, _1Constant);
            _5Modulo;
            });
        _19Aggregate = Aggregate(_9Indices, _13Range, (IArray[Int32] x0, Int32 x1) => 
          {
            Int32 _0At;// 72:NoiseDeformerNoiseInit-ext->52:At 55584
            Int32 _1At;// 72:NoiseDeformerNoiseInit-ext->60:At 55583
            Tuple[Int32, Int32] _2Pair;// 72:NoiseDeformerNoiseInit-ext->57:Pair 55581
            IArray[Tuple[Int32, Int32]] _3Unit;// 59:Array2->2:Unit 55580
            Int32 _4At;// 72:NoiseDeformerNoiseInit-ext->30:At 55604
            Tuple[Int32, Int32] _5Pair;// 72:NoiseDeformerNoiseInit-ext->55:Pair 55603
            IArray[Tuple[Int32, Int32]] _6Append;// 59:Array2->3:Append 55579
            IArray[Int32] _7SetValues;// 72:NoiseDeformerNoiseInit-ext->54:SetValues 55575
            _0At = At(_18Map, x1);
            _1At = At(x0, _0At);
            _2Pair = Pair(x1, _1At);
            _3Unit = Unit(_2Pair);
            _4At = At(x0, x1);
            _5Pair = Pair(_0At, _4At);
            _6Append = Append(_3Unit, _5Pair);
            _7SetValues = SetValues(x0, _6Append);
            _7SetValues;
            });
        _20Two = Two();
        _21Add = Add(_1Constant, _20Two);
        _22Range = Range(_21Add);
        _23Map = Map(_22Range, (Int32 x0) => 
          {
            Int32 _0Add;// 72:NoiseDeformerNoiseInit-ext->83:Add 55615
            _0Add = Add(x0, _1Constant);
            _0Add;
            });
        _24Map = Map(_22Range, (Int32 x0) => 
          {
            Int32 _0At;// 79:SelectByIndex->3:At 55620
            _0At = At(_19Aggregate, x0);
            _0At;
            });
        _25Combine = Combine(_23Map, _24Map, (Int32 x0, Int32 x1) => 
          {
            Tuple[Int32, Int32] _0Pair;// 86:ZipToTuple->4:Pair 55608
            _0Pair = Pair(x0, x1);
            _0Pair;
            });
        _26SetValues = SetValues(_19Aggregate, _25Combine);
        _27Pair = Pair(_8Concatenate, _26SetValues);
        _28Bind2of2 = Bind2of2((Vector3 x0, Tuple[IArray[IArray[Single]], IArray[Int32]] x1) => 
          {
            Single _0FloatOne;// 0:NoiseDeformer-ext->40:FloatOne 55504
            Single _1Divide;// 0:NoiseDeformer-ext->41:Divide 55503
            Vector3 _2MultiplyByScalar;// 0:NoiseDeformer-ext->16:MultiplyByScalar 55501
            Vector3 _3Constant;// 0:NoiseDeformer-ext->0:Constant 55505
            Vector3 _4Add;// 0:NoiseDeformer-ext->18:Add 55500
            Single _5Y;// 0:NoiseDeformer-ext->6:Y 55498
            Single _6Z;// 0:NoiseDeformer-ext->7:Z 55506
            Single _7Apply2;// 0:NoiseDeformer-ext->4:Apply2 55101
            Single _8X;// 0:NoiseDeformer-ext->5:X 55509
            Single _9Apply2;// 0:NoiseDeformer-ext->2:Apply2 55508
            Single _10Apply2;// 0:NoiseDeformer-ext->15:Apply2 55511
            Vector3 _11Vector3;// 0:NoiseDeformer-ext->14:Vector3 55099
            Vector3 _12Vector3;// 13:Vector3 55627
            Vector3 _13Multiply;// 0:NoiseDeformer-ext->22:Multiply 55098
            Vector3 _14Add;// 0:NoiseDeformer-ext->25:Add 55097
            _0FloatOne = FloatOne();
            _1Divide = Divide(_0FloatOne, scale);
            _2MultiplyByScalar = MultiplyByScalar(x0, _1Divide);
            _3Constant = new Microsoft.Xna.Framework.Vector3(0.5, 0.5, 0.5);
            _4Add = Add(_2MultiplyByScalar, _3Constant);
            _5Y = Y(_4Add);
            _6Z = Z(_4Add);
            _7Apply2 = Apply2((Single x0, Single x1) => 
              {
                Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 55122
                IArray[Single] _1Unit;// 37:Array2->2:Unit 55121
                Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 55123
                IArray[Single] _3Append;// 37:Array2->3:Append 55120
                Single _4AsFloat;// 0:NoiseDeformer-ext->13:AsFloat 55483
                Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 55124
                Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 55138
                Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 55139
                Single _8Constant;// 0:NoiseDeformer-ext->0:Constant 55484
                IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 55137
                Single _10FloatOne;// 0:NoiseDeformer-ext->46:FloatOne 55486
                Single _11Subtract;// 0:NoiseDeformer-ext->3:Subtract 55485
                Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 55146
                IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 55136
                Single _14AsFloat;// 0:NoiseDeformer-ext->43:AsFloat 55491
                Single _15Constant;// 0:NoiseDeformer-ext->0:Constant 55494
                Single _16Multiply;// 0:NoiseDeformer-ext->30:Multiply 55493
                Single _17Constant;// 0:NoiseDeformer-ext->0:Constant 55496
                Single _18Constant;// 0:NoiseDeformer-ext->0:Constant 55497
                Single _19Divide;// 0:NoiseDeformer-ext->31:Divide 55495
                Single _20Multiply;// 0:NoiseDeformer-ext->39:Multiply 55492
                Single _21Multiply;// 0:NoiseDeformer-ext->38:Multiply 55490
                Vector3 _22Vector3;// 0:NoiseDeformer-ext->0:Vector3 55487
                IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 55471
                IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 55475
                Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 55482
                IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 55117
                Int32 _27Count;// 3:LastIndex->2:Count 55116
                Int32 _28One;// 3:MinusOne->2:One 55115
                Int32 _29Subtract;// 3:MinusOne->1:Subtract 55114
                IArray[Single] _30At;// 68:Last->0:At 55111
                Int32 _31Zero;// 69:First->2:Zero 55109
                Single _32At;// 69:First->0:At 55108
                _0FloatZero = FloatZero();
                _1Unit = Unit(_0FloatZero);
                _2FloatZero = FloatZero();
                _3Append = Append(_1Unit, _2FloatZero);
                _4AsFloat = AsFloat(numIterations);
                _5AsInt = AsInt(_4AsFloat);
                _6FloatOne = FloatOne();
                _7AsInt = AsInt(_4AsFloat);
                _8Constant = 2;
                _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
                  {
                    Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 55141
                    _0Multiply = Multiply(_8Constant, x0);
                    _0Multiply;
                    });
                _10FloatOne = FloatOne();
                _11Subtract = Subtract(_10FloatOne, roughness);
                _12NegativeFloat = NegativeFloat(_11Subtract);
                _13Map = Map(_9GenerateN, (Single x0) => 
                  {
                    Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 55144
                    _0Pow = Pow(x0, _12NegativeFloat);
                    _0Pow;
                    });
                _14AsFloat = AsFloat(phase);
                _15Constant = 0.005;
                _16Multiply = Multiply(frequency, _15Constant);
                _17Constant = 1200;
                _18Constant = 4800;
                _19Divide = Divide(_17Constant, _18Constant);
                _20Multiply = Multiply(_16Multiply, _19Divide);
                _21Multiply = Multiply(_14AsFloat, _20Multiply);
                _22Vector3 = Vector3(x0, x1, _21Multiply);
                _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
                  {
                    Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 55473
                    _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                    _0MultiplyByScalar;
                    });
                _24PairItem1 = PairItem1(x1);
                _25FloatOne = FloatOne();
                _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
                  {
                    Int32 _0One;// 49:Second->2:One 55151
                    Single _1At;// 49:Second->0:At 55150
                    Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 55148
                    Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 55134
                    Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 55189
                    Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 55469
                    Single _6X;// 2:VectorAsArray->1:X 55200
                    IArray[Single] _7Unit;// 4:Array3->2:Unit 55199
                    Single _8Y;// 2:VectorAsArray->2:Y 55201
                    IArray[Single] _9Append;// 4:Array3->3:Append 55198
                    Single _10Z;// 2:VectorAsArray->3:Z 55202
                    IArray[Single] _11Append;// 4:Array3->6:Append 55197
                    Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 55215
                    Single _13At;// 1:VectorComponent-ext->3:At 55192
                    Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 55188
                    Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 55187
                    Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 55203
                    Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 55186
                    Int32 _18One;// 13:PlusOne->1:One 55207
                    Int32 _19Add;// 13:PlusOne->0:Add 55206
                    Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 55204
                    Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 55185
                    Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 55212
                    Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55211
                    Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55209
                    Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55214
                    Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55213
                    Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 55208
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 55184
                    Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 55181
                    Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 55180
                    IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 55476
                    Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 55226
                    Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 55225
                    Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 55224
                    Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 55236
                    Single _36X;// 2:VectorAsArray->1:X 55247
                    IArray[Single] _37Unit;// 4:Array3->2:Unit 55246
                    Single _38Y;// 2:VectorAsArray->2:Y 55248
                    IArray[Single] _39Append;// 4:Array3->3:Append 55245
                    Single _40Z;// 2:VectorAsArray->3:Z 55249
                    IArray[Single] _41Append;// 4:Array3->6:Append 55244
                    Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 55262
                    Single _43At;// 1:VectorComponent-ext->3:At 55239
                    Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 55235
                    Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 55234
                    Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 55250
                    Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 55233
                    Int32 _48One;// 13:PlusOne->1:One 55254
                    Int32 _49Add;// 13:PlusOne->0:Add 55253
                    Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 55251
                    Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 55232
                    Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 55259
                    Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55258
                    Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55256
                    Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55261
                    Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55260
                    Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 55255
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 55231
                    Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 55228
                    Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 55227
                    Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 55222
                    Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 55220
                    Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 55272
                    Single _64X;// 2:VectorAsArray->1:X 55283
                    IArray[Single] _65Unit;// 4:Array3->2:Unit 55282
                    Single _66Y;// 2:VectorAsArray->2:Y 55284
                    IArray[Single] _67Append;// 4:Array3->3:Append 55281
                    Single _68Z;// 2:VectorAsArray->3:Z 55285
                    IArray[Single] _69Append;// 4:Array3->6:Append 55280
                    Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 55298
                    Single _71At;// 1:VectorComponent-ext->3:At 55275
                    Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 55271
                    Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 55270
                    Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 55286
                    Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 55269
                    Int32 _76One;// 13:PlusOne->1:One 55290
                    Int32 _77Add;// 13:PlusOne->0:Add 55289
                    Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 55287
                    Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 55268
                    Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 55295
                    Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55294
                    Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55292
                    Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55297
                    Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55296
                    Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 55291
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 55267
                    Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 55264
                    Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 55263
                    Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 55218
                    IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 55216
                    Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 55173
                    Single _92At;// 62:NoiseDeformerAt3-ext->4:At 55172
                    Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 55171
                    Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 55300
                    Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 55299
                    Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 55176
                    Single _97At;// 62:NoiseDeformerAt3-ext->7:At 55175
                    Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 55174
                    Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 55170
                    Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 55302
                    Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 55301
                    Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 55179
                    Single _103At;// 62:NoiseDeformerAt3-ext->10:At 55178
                    Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 55177
                    Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 55169
                    Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 55318
                    Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 55326
                    Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 55325
                    Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 55323
                    Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 55322
                    Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 55320
                    IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 55319
                    Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 55311
                    Single _114At;// 66:NoiseDeformerAt3-ext->4:At 55310
                    Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 55309
                    Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 55314
                    Single _117At;// 66:NoiseDeformerAt3-ext->7:At 55313
                    Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 55312
                    Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 55308
                    Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 55317
                    Single _121At;// 66:NoiseDeformerAt3-ext->10:At 55316
                    Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 55315
                    Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 55307
                    Single _124Constant;// 42:NoiseDeformerSCurve-ext->0:Constant 55330
                    Single _125Constant;// 42:NoiseDeformerSCurve-ext->0:Constant 55332
                    Single _126Multiply;// 42:NoiseDeformerSCurve-ext->41:Multiply 55331
                    Single _127Subtract;// 42:NoiseDeformerSCurve-ext->39:Subtract 55329
                    Single _128Multiply;// 42:NoiseDeformerSCurve-ext->35:Multiply 55334
                    Single _129Multiply;// 42:NoiseDeformerSCurve-ext->37:Multiply 55328
                    Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 55164
                    Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 55356
                    Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 55355
                    Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 55354
                    Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 55352
                    IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 55351
                    Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 55344
                    Single _137At;// 72:NoiseDeformerAt3-ext->4:At 55343
                    Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 55342
                    Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 55357
                    Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 55347
                    Single _141At;// 72:NoiseDeformerAt3-ext->7:At 55346
                    Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 55345
                    Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 55341
                    Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 55350
                    Single _145At;// 72:NoiseDeformerAt3-ext->10:At 55349
                    Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 55348
                    Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 55340
                    Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 55377
                    Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 55376
                    Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 55374
                    IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 55373
                    Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 55366
                    Single _153At;// 75:NoiseDeformerAt3-ext->4:At 55365
                    Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 55364
                    Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 55369
                    Single _156At;// 75:NoiseDeformerAt3-ext->7:At 55368
                    Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 55367
                    Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 55363
                    Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 55372
                    Single _160At;// 75:NoiseDeformerAt3-ext->10:At 55371
                    Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 55370
                    Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 55362
                    Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 55335
                    Single _164Constant;// 56:NoiseDeformerSCurve-ext->0:Constant 55381
                    Single _165Constant;// 56:NoiseDeformerSCurve-ext->0:Constant 55383
                    Single _166Multiply;// 56:NoiseDeformerSCurve-ext->41:Multiply 55382
                    Single _167Subtract;// 56:NoiseDeformerSCurve-ext->39:Subtract 55380
                    Single _168Multiply;// 56:NoiseDeformerSCurve-ext->35:Multiply 55385
                    Single _169Multiply;// 56:NoiseDeformerSCurve-ext->37:Multiply 55379
                    Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 55163
                    Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 55405
                    Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 55404
                    IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 55403
                    Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 55396
                    Single _175At;// 82:NoiseDeformerAt3-ext->4:At 55395
                    Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 55394
                    Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 55399
                    Single _178At;// 82:NoiseDeformerAt3-ext->7:At 55398
                    Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 55397
                    Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 55393
                    Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 55406
                    Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 55402
                    Single _183At;// 82:NoiseDeformerAt3-ext->10:At 55401
                    Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 55400
                    Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 55392
                    Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 55423
                    IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 55422
                    Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 55415
                    Single _189At;// 86:NoiseDeformerAt3-ext->4:At 55414
                    Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 55413
                    Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 55418
                    Single _192At;// 86:NoiseDeformerAt3-ext->7:At 55417
                    Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 55416
                    Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 55412
                    Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 55421
                    Single _196At;// 86:NoiseDeformerAt3-ext->10:At 55420
                    Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 55419
                    Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 55411
                    Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 55387
                    Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 55441
                    IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 55440
                    Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 55433
                    Single _203At;// 92:NoiseDeformerAt3-ext->4:At 55432
                    Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 55431
                    Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 55436
                    Single _206At;// 92:NoiseDeformerAt3-ext->7:At 55435
                    Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 55434
                    Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 55430
                    Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 55439
                    Single _210At;// 92:NoiseDeformerAt3-ext->10:At 55438
                    Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 55437
                    Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 55429
                    Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 55458
                    IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 55457
                    Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 55450
                    Single _216At;// 96:NoiseDeformerAt3-ext->4:At 55449
                    Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 55448
                    Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 55453
                    Single _219At;// 96:NoiseDeformerAt3-ext->7:At 55452
                    Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 55451
                    Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 55447
                    Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 55456
                    Single _223At;// 96:NoiseDeformerAt3-ext->10:At 55455
                    Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 55454
                    Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 55446
                    Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 55424
                    Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 55386
                    Single _228Constant;// 58:NoiseDeformerSCurve-ext->0:Constant 55462
                    Single _229Constant;// 58:NoiseDeformerSCurve-ext->0:Constant 55464
                    Single _230Multiply;// 58:NoiseDeformerSCurve-ext->41:Multiply 55463
                    Single _231Subtract;// 58:NoiseDeformerSCurve-ext->39:Subtract 55461
                    Single _232Multiply;// 58:NoiseDeformerSCurve-ext->35:Multiply 55466
                    Single _233Multiply;// 58:NoiseDeformerSCurve-ext->37:Multiply 55460
                    Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 55162
                    Single _235NaN;// 118:FloatIsNaN->1:NaN 55160
                    Int32 _236Compare;// 118:FloatIsNaN->2:Compare 55159
                    Int32 _237Zero;// 118:FloatIsNaN->4:Zero 55161
                    Boolean _238Equal;// 118:FloatIsNaN->3:Equal 55158
                    Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 55132
                    Int32 _241Zero;// 48:First->2:Zero 55479
                    Single _242At;// 48:First->0:At 55478
                    Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 55131
                    IArray[Single] _244Unit;// 43:Array2->2:Unit 55129
                    Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 55481
                    IArray[Single] _246Append;// 43:Array2->3:Append 55128
                    _0One = One();
                    _1At = At(x0, _0One);
                    _2AsInt = AsInt(_1At);
                    _3At = At(_13Map, _2AsInt);
                    _4Constant = 4096;
                    _5At = At(_23GenerateN, _2AsInt);
                    _6X = X(_5At);
                    _7Unit = Unit(_6X);
                    _8Y = Y(_5At);
                    _9Append = Append(_7Unit, _8Y);
                    _10Z = Z(_5At);
                    _11Append = Append(_9Append, _10Z);
                    _12Zero = Zero();
                    _13At = At(_11Append, _12Zero);
                    _14Add = Add(_4Constant, _13At);
                    _15Floor = Floor(_14Add);
                    _16Constant = 255;
                    _17And = And(_15Floor, _16Constant);
                    _18One = One();
                    _19Add = Add(_17And, _18One);
                    _20And = And(_19Add, _16Constant);
                    _21Pair = Pair(_17And, _20And);
                    _22Floor = Floor(_14Add);
                    _23AsFloat = AsFloat(_22Floor);
                    _24Subtract = Subtract(_14Add, _23AsFloat);
                    _25FloatOne = FloatOne();
                    _26Subtract = Subtract(_24Subtract, _25FloatOne);
                    _27Pair = Pair(_24Subtract, _26Subtract);
                    _28Pair = Pair(_21Pair, _27Pair);
                    _29PairItem2 = PairItem2(_28Pair);
                    _30PairItem1 = PairItem1(_29PairItem2);
                    _31PairItem2 = PairItem2(x1);
                    _32PairItem1 = PairItem1(_28Pair);
                    _33PairItem1 = PairItem1(_32PairItem1);
                    _34At = At(_31PairItem2, _33PairItem1);
                    _35Constant = 4096;
                    _36X = X(_5At);
                    _37Unit = Unit(_36X);
                    _38Y = Y(_5At);
                    _39Append = Append(_37Unit, _38Y);
                    _40Z = Z(_5At);
                    _41Append = Append(_39Append, _40Z);
                    _42One = One();
                    _43At = At(_41Append, _42One);
                    _44Add = Add(_35Constant, _43At);
                    _45Floor = Floor(_44Add);
                    _46Constant = 255;
                    _47And = And(_45Floor, _46Constant);
                    _48One = One();
                    _49Add = Add(_47And, _48One);
                    _50And = And(_49Add, _46Constant);
                    _51Pair = Pair(_47And, _50And);
                    _52Floor = Floor(_44Add);
                    _53AsFloat = AsFloat(_52Floor);
                    _54Subtract = Subtract(_44Add, _53AsFloat);
                    _55FloatOne = FloatOne();
                    _56Subtract = Subtract(_54Subtract, _55FloatOne);
                    _57Pair = Pair(_54Subtract, _56Subtract);
                    _58Pair = Pair(_51Pair, _57Pair);
                    _59PairItem1 = PairItem1(_58Pair);
                    _60PairItem1 = PairItem1(_59PairItem1);
                    _61Add = Add(_34At, _60PairItem1);
                    _62At = At(_31PairItem2, _61Add);
                    _63Constant = 4096;
                    _64X = X(_5At);
                    _65Unit = Unit(_64X);
                    _66Y = Y(_5At);
                    _67Append = Append(_65Unit, _66Y);
                    _68Z = Z(_5At);
                    _69Append = Append(_67Append, _68Z);
                    _70Two = Two();
                    _71At = At(_69Append, _70Two);
                    _72Add = Add(_63Constant, _71At);
                    _73Floor = Floor(_72Add);
                    _74Constant = 255;
                    _75And = And(_73Floor, _74Constant);
                    _76One = One();
                    _77Add = Add(_75And, _76One);
                    _78And = And(_77Add, _74Constant);
                    _79Pair = Pair(_75And, _78And);
                    _80Floor = Floor(_72Add);
                    _81AsFloat = AsFloat(_80Floor);
                    _82Subtract = Subtract(_72Add, _81AsFloat);
                    _83FloatOne = FloatOne();
                    _84Subtract = Subtract(_82Subtract, _83FloatOne);
                    _85Pair = Pair(_82Subtract, _84Subtract);
                    _86Pair = Pair(_79Pair, _85Pair);
                    _87PairItem1 = PairItem1(_86Pair);
                    _88PairItem1 = PairItem1(_87PairItem1);
                    _89Add = Add(_62At, _88PairItem1);
                    _90At = At(_24PairItem1, _89Add);
                    _91Zero = Zero();
                    _92At = At(_90At, _91Zero);
                    _93Multiply = Multiply(_30PairItem1, _92At);
                    _94PairItem2 = PairItem2(_58Pair);
                    _95PairItem1 = PairItem1(_94PairItem2);
                    _96One = One();
                    _97At = At(_90At, _96One);
                    _98Multiply = Multiply(_95PairItem1, _97At);
                    _99Add = Add(_93Multiply, _98Multiply);
                    _100PairItem2 = PairItem2(_86Pair);
                    _101PairItem1 = PairItem1(_100PairItem2);
                    _102Two = Two();
                    _103At = At(_90At, _102Two);
                    _104Multiply = Multiply(_101PairItem1, _103At);
                    _105Add = Add(_99Add, _104Multiply);
                    _106PairItem2 = PairItem2(_29PairItem2);
                    _107PairItem2 = PairItem2(_32PairItem1);
                    _108At = At(_31PairItem2, _107PairItem2);
                    _109Add = Add(_108At, _60PairItem1);
                    _110At = At(_31PairItem2, _109Add);
                    _111Add = Add(_110At, _88PairItem1);
                    _112At = At(_24PairItem1, _111Add);
                    _113Zero = Zero();
                    _114At = At(_112At, _113Zero);
                    _115Multiply = Multiply(_106PairItem2, _114At);
                    _116One = One();
                    _117At = At(_112At, _116One);
                    _118Multiply = Multiply(_95PairItem1, _117At);
                    _119Add = Add(_115Multiply, _118Multiply);
                    _120Two = Two();
                    _121At = At(_112At, _120Two);
                    _122Multiply = Multiply(_101PairItem1, _121At);
                    _123Add = Add(_119Add, _122Multiply);
                    _124Constant = 3;
                    _125Constant = 2;
                    _126Multiply = Multiply(_125Constant, _30PairItem1);
                    _127Subtract = Subtract(_124Constant, _126Multiply);
                    _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                    _129Multiply = Multiply(_127Subtract, _128Multiply);
                    _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                    _131PairItem2 = PairItem2(_59PairItem1);
                    _132Add = Add(_34At, _131PairItem2);
                    _133At = At(_31PairItem2, _132Add);
                    _134Add = Add(_133At, _88PairItem1);
                    _135At = At(_24PairItem1, _134Add);
                    _136Zero = Zero();
                    _137At = At(_135At, _136Zero);
                    _138Multiply = Multiply(_30PairItem1, _137At);
                    _139PairItem2 = PairItem2(_94PairItem2);
                    _140One = One();
                    _141At = At(_135At, _140One);
                    _142Multiply = Multiply(_139PairItem2, _141At);
                    _143Add = Add(_138Multiply, _142Multiply);
                    _144Two = Two();
                    _145At = At(_135At, _144Two);
                    _146Multiply = Multiply(_101PairItem1, _145At);
                    _147Add = Add(_143Add, _146Multiply);
                    _148Add = Add(_108At, _131PairItem2);
                    _149At = At(_31PairItem2, _148Add);
                    _150Add = Add(_149At, _88PairItem1);
                    _151At = At(_24PairItem1, _150Add);
                    _152Zero = Zero();
                    _153At = At(_151At, _152Zero);
                    _154Multiply = Multiply(_106PairItem2, _153At);
                    _155One = One();
                    _156At = At(_151At, _155One);
                    _157Multiply = Multiply(_139PairItem2, _156At);
                    _158Add = Add(_154Multiply, _157Multiply);
                    _159Two = Two();
                    _160At = At(_151At, _159Two);
                    _161Multiply = Multiply(_101PairItem1, _160At);
                    _162Add = Add(_158Add, _161Multiply);
                    _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                    _164Constant = 3;
                    _165Constant = 2;
                    _166Multiply = Multiply(_165Constant, _95PairItem1);
                    _167Subtract = Subtract(_164Constant, _166Multiply);
                    _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                    _169Multiply = Multiply(_167Subtract, _168Multiply);
                    _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                    _171PairItem2 = PairItem2(_87PairItem1);
                    _172Add = Add(_62At, _171PairItem2);
                    _173At = At(_24PairItem1, _172Add);
                    _174Zero = Zero();
                    _175At = At(_173At, _174Zero);
                    _176Multiply = Multiply(_30PairItem1, _175At);
                    _177One = One();
                    _178At = At(_173At, _177One);
                    _179Multiply = Multiply(_95PairItem1, _178At);
                    _180Add = Add(_176Multiply, _179Multiply);
                    _181PairItem2 = PairItem2(_100PairItem2);
                    _182Two = Two();
                    _183At = At(_173At, _182Two);
                    _184Multiply = Multiply(_181PairItem2, _183At);
                    _185Add = Add(_180Add, _184Multiply);
                    _186Add = Add(_110At, _171PairItem2);
                    _187At = At(_24PairItem1, _186Add);
                    _188Zero = Zero();
                    _189At = At(_187At, _188Zero);
                    _190Multiply = Multiply(_106PairItem2, _189At);
                    _191One = One();
                    _192At = At(_187At, _191One);
                    _193Multiply = Multiply(_95PairItem1, _192At);
                    _194Add = Add(_190Multiply, _193Multiply);
                    _195Two = Two();
                    _196At = At(_187At, _195Two);
                    _197Multiply = Multiply(_181PairItem2, _196At);
                    _198Add = Add(_194Add, _197Multiply);
                    _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                    _200Add = Add(_133At, _171PairItem2);
                    _201At = At(_24PairItem1, _200Add);
                    _202Zero = Zero();
                    _203At = At(_201At, _202Zero);
                    _204Multiply = Multiply(_30PairItem1, _203At);
                    _205One = One();
                    _206At = At(_201At, _205One);
                    _207Multiply = Multiply(_139PairItem2, _206At);
                    _208Add = Add(_204Multiply, _207Multiply);
                    _209Two = Two();
                    _210At = At(_201At, _209Two);
                    _211Multiply = Multiply(_181PairItem2, _210At);
                    _212Add = Add(_208Add, _211Multiply);
                    _213Add = Add(_149At, _171PairItem2);
                    _214At = At(_24PairItem1, _213Add);
                    _215Zero = Zero();
                    _216At = At(_214At, _215Zero);
                    _217Multiply = Multiply(_106PairItem2, _216At);
                    _218One = One();
                    _219At = At(_214At, _218One);
                    _220Multiply = Multiply(_139PairItem2, _219At);
                    _221Add = Add(_217Multiply, _220Multiply);
                    _222Two = Two();
                    _223At = At(_214At, _222Two);
                    _224Multiply = Multiply(_181PairItem2, _223At);
                    _225Add = Add(_221Add, _224Multiply);
                    _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                    _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                    _228Constant = 3;
                    _229Constant = 2;
                    _230Multiply = Multiply(_229Constant, _101PairItem1);
                    _231Subtract = Subtract(_228Constant, _230Multiply);
                    _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                    _233Multiply = Multiply(_231Subtract, _232Multiply);
                    _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                    _235NaN = NaN();
                    _236Compare = Compare(_234FloatLerp, _235NaN);
                    _237Zero = Zero();
                    _238Equal = Equal(_236Compare, _237Zero);
                    _240Multiply = Multiply(_3At, if (_238Equal)
                        {
                          Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 55467
                          _239FloatZero = FloatZero();
                          _239FloatZero;
                          }else
                        {
                          _234FloatLerp;
                          });
                    _241Zero = Zero();
                    _242At = At(x0, _241Zero);
                    _243Add = Add(_240Multiply, _242At);
                    _244Unit = Unit(_243Add);
                    _245Add = Add(_1At, _25FloatOne);
                    _246Append = Append(_244Unit, _245Add);
                    _246Append;
                    });
                _27Count = Count(_26GenerateN);
                _28One = One();
                _29Subtract = Subtract(_27Count, _28One);
                _30At = At(_26GenerateN, _29Subtract);
                _31Zero = Zero();
                _32At = At(_30At, _31Zero);
                _32At;
                }, _5Y, _6Z);
            _8X = X(_4Add);
            _9Apply2 = Apply2((Single x0, Single x1) => 
              {
                Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 55122
                IArray[Single] _1Unit;// 37:Array2->2:Unit 55121
                Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 55123
                IArray[Single] _3Append;// 37:Array2->3:Append 55120
                Single _4AsFloat;// 0:NoiseDeformer-ext->13:AsFloat 55483
                Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 55124
                Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 55138
                Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 55139
                Single _8Constant;// 0:NoiseDeformer-ext->0:Constant 55484
                IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 55137
                Single _10FloatOne;// 0:NoiseDeformer-ext->46:FloatOne 55486
                Single _11Subtract;// 0:NoiseDeformer-ext->3:Subtract 55485
                Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 55146
                IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 55136
                Single _14AsFloat;// 0:NoiseDeformer-ext->43:AsFloat 55491
                Single _15Constant;// 0:NoiseDeformer-ext->0:Constant 55494
                Single _16Multiply;// 0:NoiseDeformer-ext->30:Multiply 55493
                Single _17Constant;// 0:NoiseDeformer-ext->0:Constant 55496
                Single _18Constant;// 0:NoiseDeformer-ext->0:Constant 55497
                Single _19Divide;// 0:NoiseDeformer-ext->31:Divide 55495
                Single _20Multiply;// 0:NoiseDeformer-ext->39:Multiply 55492
                Single _21Multiply;// 0:NoiseDeformer-ext->38:Multiply 55490
                Vector3 _22Vector3;// 0:NoiseDeformer-ext->0:Vector3 55487
                IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 55471
                IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 55475
                Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 55482
                IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 55117
                Int32 _27Count;// 3:LastIndex->2:Count 55116
                Int32 _28One;// 3:MinusOne->2:One 55115
                Int32 _29Subtract;// 3:MinusOne->1:Subtract 55114
                IArray[Single] _30At;// 68:Last->0:At 55111
                Int32 _31Zero;// 69:First->2:Zero 55109
                Single _32At;// 69:First->0:At 55108
                _0FloatZero = FloatZero();
                _1Unit = Unit(_0FloatZero);
                _2FloatZero = FloatZero();
                _3Append = Append(_1Unit, _2FloatZero);
                _4AsFloat = AsFloat(numIterations);
                _5AsInt = AsInt(_4AsFloat);
                _6FloatOne = FloatOne();
                _7AsInt = AsInt(_4AsFloat);
                _8Constant = 2;
                _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
                  {
                    Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 55141
                    _0Multiply = Multiply(_8Constant, x0);
                    _0Multiply;
                    });
                _10FloatOne = FloatOne();
                _11Subtract = Subtract(_10FloatOne, roughness);
                _12NegativeFloat = NegativeFloat(_11Subtract);
                _13Map = Map(_9GenerateN, (Single x0) => 
                  {
                    Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 55144
                    _0Pow = Pow(x0, _12NegativeFloat);
                    _0Pow;
                    });
                _14AsFloat = AsFloat(phase);
                _15Constant = 0.005;
                _16Multiply = Multiply(frequency, _15Constant);
                _17Constant = 1200;
                _18Constant = 4800;
                _19Divide = Divide(_17Constant, _18Constant);
                _20Multiply = Multiply(_16Multiply, _19Divide);
                _21Multiply = Multiply(_14AsFloat, _20Multiply);
                _22Vector3 = Vector3(x0, x1, _21Multiply);
                _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
                  {
                    Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 55473
                    _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                    _0MultiplyByScalar;
                    });
                _24PairItem1 = PairItem1(x1);
                _25FloatOne = FloatOne();
                _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
                  {
                    Int32 _0One;// 49:Second->2:One 55151
                    Single _1At;// 49:Second->0:At 55150
                    Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 55148
                    Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 55134
                    Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 55189
                    Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 55469
                    Single _6X;// 2:VectorAsArray->1:X 55200
                    IArray[Single] _7Unit;// 4:Array3->2:Unit 55199
                    Single _8Y;// 2:VectorAsArray->2:Y 55201
                    IArray[Single] _9Append;// 4:Array3->3:Append 55198
                    Single _10Z;// 2:VectorAsArray->3:Z 55202
                    IArray[Single] _11Append;// 4:Array3->6:Append 55197
                    Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 55215
                    Single _13At;// 1:VectorComponent-ext->3:At 55192
                    Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 55188
                    Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 55187
                    Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 55203
                    Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 55186
                    Int32 _18One;// 13:PlusOne->1:One 55207
                    Int32 _19Add;// 13:PlusOne->0:Add 55206
                    Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 55204
                    Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 55185
                    Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 55212
                    Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55211
                    Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55209
                    Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55214
                    Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55213
                    Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 55208
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 55184
                    Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 55181
                    Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 55180
                    IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 55476
                    Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 55226
                    Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 55225
                    Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 55224
                    Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 55236
                    Single _36X;// 2:VectorAsArray->1:X 55247
                    IArray[Single] _37Unit;// 4:Array3->2:Unit 55246
                    Single _38Y;// 2:VectorAsArray->2:Y 55248
                    IArray[Single] _39Append;// 4:Array3->3:Append 55245
                    Single _40Z;// 2:VectorAsArray->3:Z 55249
                    IArray[Single] _41Append;// 4:Array3->6:Append 55244
                    Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 55262
                    Single _43At;// 1:VectorComponent-ext->3:At 55239
                    Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 55235
                    Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 55234
                    Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 55250
                    Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 55233
                    Int32 _48One;// 13:PlusOne->1:One 55254
                    Int32 _49Add;// 13:PlusOne->0:Add 55253
                    Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 55251
                    Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 55232
                    Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 55259
                    Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55258
                    Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55256
                    Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55261
                    Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55260
                    Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 55255
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 55231
                    Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 55228
                    Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 55227
                    Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 55222
                    Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 55220
                    Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 55272
                    Single _64X;// 2:VectorAsArray->1:X 55283
                    IArray[Single] _65Unit;// 4:Array3->2:Unit 55282
                    Single _66Y;// 2:VectorAsArray->2:Y 55284
                    IArray[Single] _67Append;// 4:Array3->3:Append 55281
                    Single _68Z;// 2:VectorAsArray->3:Z 55285
                    IArray[Single] _69Append;// 4:Array3->6:Append 55280
                    Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 55298
                    Single _71At;// 1:VectorComponent-ext->3:At 55275
                    Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 55271
                    Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 55270
                    Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 55286
                    Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 55269
                    Int32 _76One;// 13:PlusOne->1:One 55290
                    Int32 _77Add;// 13:PlusOne->0:Add 55289
                    Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 55287
                    Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 55268
                    Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 55295
                    Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55294
                    Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55292
                    Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55297
                    Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55296
                    Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 55291
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 55267
                    Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 55264
                    Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 55263
                    Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 55218
                    IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 55216
                    Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 55173
                    Single _92At;// 62:NoiseDeformerAt3-ext->4:At 55172
                    Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 55171
                    Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 55300
                    Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 55299
                    Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 55176
                    Single _97At;// 62:NoiseDeformerAt3-ext->7:At 55175
                    Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 55174
                    Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 55170
                    Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 55302
                    Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 55301
                    Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 55179
                    Single _103At;// 62:NoiseDeformerAt3-ext->10:At 55178
                    Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 55177
                    Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 55169
                    Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 55318
                    Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 55326
                    Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 55325
                    Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 55323
                    Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 55322
                    Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 55320
                    IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 55319
                    Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 55311
                    Single _114At;// 66:NoiseDeformerAt3-ext->4:At 55310
                    Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 55309
                    Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 55314
                    Single _117At;// 66:NoiseDeformerAt3-ext->7:At 55313
                    Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 55312
                    Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 55308
                    Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 55317
                    Single _121At;// 66:NoiseDeformerAt3-ext->10:At 55316
                    Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 55315
                    Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 55307
                    Single _124Constant;// 42:NoiseDeformerSCurve-ext->0:Constant 55330
                    Single _125Constant;// 42:NoiseDeformerSCurve-ext->0:Constant 55332
                    Single _126Multiply;// 42:NoiseDeformerSCurve-ext->41:Multiply 55331
                    Single _127Subtract;// 42:NoiseDeformerSCurve-ext->39:Subtract 55329
                    Single _128Multiply;// 42:NoiseDeformerSCurve-ext->35:Multiply 55334
                    Single _129Multiply;// 42:NoiseDeformerSCurve-ext->37:Multiply 55328
                    Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 55164
                    Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 55356
                    Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 55355
                    Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 55354
                    Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 55352
                    IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 55351
                    Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 55344
                    Single _137At;// 72:NoiseDeformerAt3-ext->4:At 55343
                    Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 55342
                    Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 55357
                    Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 55347
                    Single _141At;// 72:NoiseDeformerAt3-ext->7:At 55346
                    Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 55345
                    Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 55341
                    Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 55350
                    Single _145At;// 72:NoiseDeformerAt3-ext->10:At 55349
                    Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 55348
                    Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 55340
                    Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 55377
                    Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 55376
                    Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 55374
                    IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 55373
                    Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 55366
                    Single _153At;// 75:NoiseDeformerAt3-ext->4:At 55365
                    Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 55364
                    Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 55369
                    Single _156At;// 75:NoiseDeformerAt3-ext->7:At 55368
                    Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 55367
                    Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 55363
                    Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 55372
                    Single _160At;// 75:NoiseDeformerAt3-ext->10:At 55371
                    Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 55370
                    Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 55362
                    Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 55335
                    Single _164Constant;// 56:NoiseDeformerSCurve-ext->0:Constant 55381
                    Single _165Constant;// 56:NoiseDeformerSCurve-ext->0:Constant 55383
                    Single _166Multiply;// 56:NoiseDeformerSCurve-ext->41:Multiply 55382
                    Single _167Subtract;// 56:NoiseDeformerSCurve-ext->39:Subtract 55380
                    Single _168Multiply;// 56:NoiseDeformerSCurve-ext->35:Multiply 55385
                    Single _169Multiply;// 56:NoiseDeformerSCurve-ext->37:Multiply 55379
                    Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 55163
                    Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 55405
                    Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 55404
                    IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 55403
                    Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 55396
                    Single _175At;// 82:NoiseDeformerAt3-ext->4:At 55395
                    Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 55394
                    Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 55399
                    Single _178At;// 82:NoiseDeformerAt3-ext->7:At 55398
                    Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 55397
                    Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 55393
                    Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 55406
                    Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 55402
                    Single _183At;// 82:NoiseDeformerAt3-ext->10:At 55401
                    Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 55400
                    Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 55392
                    Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 55423
                    IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 55422
                    Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 55415
                    Single _189At;// 86:NoiseDeformerAt3-ext->4:At 55414
                    Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 55413
                    Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 55418
                    Single _192At;// 86:NoiseDeformerAt3-ext->7:At 55417
                    Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 55416
                    Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 55412
                    Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 55421
                    Single _196At;// 86:NoiseDeformerAt3-ext->10:At 55420
                    Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 55419
                    Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 55411
                    Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 55387
                    Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 55441
                    IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 55440
                    Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 55433
                    Single _203At;// 92:NoiseDeformerAt3-ext->4:At 55432
                    Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 55431
                    Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 55436
                    Single _206At;// 92:NoiseDeformerAt3-ext->7:At 55435
                    Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 55434
                    Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 55430
                    Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 55439
                    Single _210At;// 92:NoiseDeformerAt3-ext->10:At 55438
                    Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 55437
                    Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 55429
                    Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 55458
                    IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 55457
                    Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 55450
                    Single _216At;// 96:NoiseDeformerAt3-ext->4:At 55449
                    Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 55448
                    Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 55453
                    Single _219At;// 96:NoiseDeformerAt3-ext->7:At 55452
                    Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 55451
                    Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 55447
                    Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 55456
                    Single _223At;// 96:NoiseDeformerAt3-ext->10:At 55455
                    Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 55454
                    Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 55446
                    Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 55424
                    Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 55386
                    Single _228Constant;// 58:NoiseDeformerSCurve-ext->0:Constant 55462
                    Single _229Constant;// 58:NoiseDeformerSCurve-ext->0:Constant 55464
                    Single _230Multiply;// 58:NoiseDeformerSCurve-ext->41:Multiply 55463
                    Single _231Subtract;// 58:NoiseDeformerSCurve-ext->39:Subtract 55461
                    Single _232Multiply;// 58:NoiseDeformerSCurve-ext->35:Multiply 55466
                    Single _233Multiply;// 58:NoiseDeformerSCurve-ext->37:Multiply 55460
                    Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 55162
                    Single _235NaN;// 118:FloatIsNaN->1:NaN 55160
                    Int32 _236Compare;// 118:FloatIsNaN->2:Compare 55159
                    Int32 _237Zero;// 118:FloatIsNaN->4:Zero 55161
                    Boolean _238Equal;// 118:FloatIsNaN->3:Equal 55158
                    Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 55132
                    Int32 _241Zero;// 48:First->2:Zero 55479
                    Single _242At;// 48:First->0:At 55478
                    Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 55131
                    IArray[Single] _244Unit;// 43:Array2->2:Unit 55129
                    Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 55481
                    IArray[Single] _246Append;// 43:Array2->3:Append 55128
                    _0One = One();
                    _1At = At(x0, _0One);
                    _2AsInt = AsInt(_1At);
                    _3At = At(_13Map, _2AsInt);
                    _4Constant = 4096;
                    _5At = At(_23GenerateN, _2AsInt);
                    _6X = X(_5At);
                    _7Unit = Unit(_6X);
                    _8Y = Y(_5At);
                    _9Append = Append(_7Unit, _8Y);
                    _10Z = Z(_5At);
                    _11Append = Append(_9Append, _10Z);
                    _12Zero = Zero();
                    _13At = At(_11Append, _12Zero);
                    _14Add = Add(_4Constant, _13At);
                    _15Floor = Floor(_14Add);
                    _16Constant = 255;
                    _17And = And(_15Floor, _16Constant);
                    _18One = One();
                    _19Add = Add(_17And, _18One);
                    _20And = And(_19Add, _16Constant);
                    _21Pair = Pair(_17And, _20And);
                    _22Floor = Floor(_14Add);
                    _23AsFloat = AsFloat(_22Floor);
                    _24Subtract = Subtract(_14Add, _23AsFloat);
                    _25FloatOne = FloatOne();
                    _26Subtract = Subtract(_24Subtract, _25FloatOne);
                    _27Pair = Pair(_24Subtract, _26Subtract);
                    _28Pair = Pair(_21Pair, _27Pair);
                    _29PairItem2 = PairItem2(_28Pair);
                    _30PairItem1 = PairItem1(_29PairItem2);
                    _31PairItem2 = PairItem2(x1);
                    _32PairItem1 = PairItem1(_28Pair);
                    _33PairItem1 = PairItem1(_32PairItem1);
                    _34At = At(_31PairItem2, _33PairItem1);
                    _35Constant = 4096;
                    _36X = X(_5At);
                    _37Unit = Unit(_36X);
                    _38Y = Y(_5At);
                    _39Append = Append(_37Unit, _38Y);
                    _40Z = Z(_5At);
                    _41Append = Append(_39Append, _40Z);
                    _42One = One();
                    _43At = At(_41Append, _42One);
                    _44Add = Add(_35Constant, _43At);
                    _45Floor = Floor(_44Add);
                    _46Constant = 255;
                    _47And = And(_45Floor, _46Constant);
                    _48One = One();
                    _49Add = Add(_47And, _48One);
                    _50And = And(_49Add, _46Constant);
                    _51Pair = Pair(_47And, _50And);
                    _52Floor = Floor(_44Add);
                    _53AsFloat = AsFloat(_52Floor);
                    _54Subtract = Subtract(_44Add, _53AsFloat);
                    _55FloatOne = FloatOne();
                    _56Subtract = Subtract(_54Subtract, _55FloatOne);
                    _57Pair = Pair(_54Subtract, _56Subtract);
                    _58Pair = Pair(_51Pair, _57Pair);
                    _59PairItem1 = PairItem1(_58Pair);
                    _60PairItem1 = PairItem1(_59PairItem1);
                    _61Add = Add(_34At, _60PairItem1);
                    _62At = At(_31PairItem2, _61Add);
                    _63Constant = 4096;
                    _64X = X(_5At);
                    _65Unit = Unit(_64X);
                    _66Y = Y(_5At);
                    _67Append = Append(_65Unit, _66Y);
                    _68Z = Z(_5At);
                    _69Append = Append(_67Append, _68Z);
                    _70Two = Two();
                    _71At = At(_69Append, _70Two);
                    _72Add = Add(_63Constant, _71At);
                    _73Floor = Floor(_72Add);
                    _74Constant = 255;
                    _75And = And(_73Floor, _74Constant);
                    _76One = One();
                    _77Add = Add(_75And, _76One);
                    _78And = And(_77Add, _74Constant);
                    _79Pair = Pair(_75And, _78And);
                    _80Floor = Floor(_72Add);
                    _81AsFloat = AsFloat(_80Floor);
                    _82Subtract = Subtract(_72Add, _81AsFloat);
                    _83FloatOne = FloatOne();
                    _84Subtract = Subtract(_82Subtract, _83FloatOne);
                    _85Pair = Pair(_82Subtract, _84Subtract);
                    _86Pair = Pair(_79Pair, _85Pair);
                    _87PairItem1 = PairItem1(_86Pair);
                    _88PairItem1 = PairItem1(_87PairItem1);
                    _89Add = Add(_62At, _88PairItem1);
                    _90At = At(_24PairItem1, _89Add);
                    _91Zero = Zero();
                    _92At = At(_90At, _91Zero);
                    _93Multiply = Multiply(_30PairItem1, _92At);
                    _94PairItem2 = PairItem2(_58Pair);
                    _95PairItem1 = PairItem1(_94PairItem2);
                    _96One = One();
                    _97At = At(_90At, _96One);
                    _98Multiply = Multiply(_95PairItem1, _97At);
                    _99Add = Add(_93Multiply, _98Multiply);
                    _100PairItem2 = PairItem2(_86Pair);
                    _101PairItem1 = PairItem1(_100PairItem2);
                    _102Two = Two();
                    _103At = At(_90At, _102Two);
                    _104Multiply = Multiply(_101PairItem1, _103At);
                    _105Add = Add(_99Add, _104Multiply);
                    _106PairItem2 = PairItem2(_29PairItem2);
                    _107PairItem2 = PairItem2(_32PairItem1);
                    _108At = At(_31PairItem2, _107PairItem2);
                    _109Add = Add(_108At, _60PairItem1);
                    _110At = At(_31PairItem2, _109Add);
                    _111Add = Add(_110At, _88PairItem1);
                    _112At = At(_24PairItem1, _111Add);
                    _113Zero = Zero();
                    _114At = At(_112At, _113Zero);
                    _115Multiply = Multiply(_106PairItem2, _114At);
                    _116One = One();
                    _117At = At(_112At, _116One);
                    _118Multiply = Multiply(_95PairItem1, _117At);
                    _119Add = Add(_115Multiply, _118Multiply);
                    _120Two = Two();
                    _121At = At(_112At, _120Two);
                    _122Multiply = Multiply(_101PairItem1, _121At);
                    _123Add = Add(_119Add, _122Multiply);
                    _124Constant = 3;
                    _125Constant = 2;
                    _126Multiply = Multiply(_125Constant, _30PairItem1);
                    _127Subtract = Subtract(_124Constant, _126Multiply);
                    _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                    _129Multiply = Multiply(_127Subtract, _128Multiply);
                    _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                    _131PairItem2 = PairItem2(_59PairItem1);
                    _132Add = Add(_34At, _131PairItem2);
                    _133At = At(_31PairItem2, _132Add);
                    _134Add = Add(_133At, _88PairItem1);
                    _135At = At(_24PairItem1, _134Add);
                    _136Zero = Zero();
                    _137At = At(_135At, _136Zero);
                    _138Multiply = Multiply(_30PairItem1, _137At);
                    _139PairItem2 = PairItem2(_94PairItem2);
                    _140One = One();
                    _141At = At(_135At, _140One);
                    _142Multiply = Multiply(_139PairItem2, _141At);
                    _143Add = Add(_138Multiply, _142Multiply);
                    _144Two = Two();
                    _145At = At(_135At, _144Two);
                    _146Multiply = Multiply(_101PairItem1, _145At);
                    _147Add = Add(_143Add, _146Multiply);
                    _148Add = Add(_108At, _131PairItem2);
                    _149At = At(_31PairItem2, _148Add);
                    _150Add = Add(_149At, _88PairItem1);
                    _151At = At(_24PairItem1, _150Add);
                    _152Zero = Zero();
                    _153At = At(_151At, _152Zero);
                    _154Multiply = Multiply(_106PairItem2, _153At);
                    _155One = One();
                    _156At = At(_151At, _155One);
                    _157Multiply = Multiply(_139PairItem2, _156At);
                    _158Add = Add(_154Multiply, _157Multiply);
                    _159Two = Two();
                    _160At = At(_151At, _159Two);
                    _161Multiply = Multiply(_101PairItem1, _160At);
                    _162Add = Add(_158Add, _161Multiply);
                    _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                    _164Constant = 3;
                    _165Constant = 2;
                    _166Multiply = Multiply(_165Constant, _95PairItem1);
                    _167Subtract = Subtract(_164Constant, _166Multiply);
                    _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                    _169Multiply = Multiply(_167Subtract, _168Multiply);
                    _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                    _171PairItem2 = PairItem2(_87PairItem1);
                    _172Add = Add(_62At, _171PairItem2);
                    _173At = At(_24PairItem1, _172Add);
                    _174Zero = Zero();
                    _175At = At(_173At, _174Zero);
                    _176Multiply = Multiply(_30PairItem1, _175At);
                    _177One = One();
                    _178At = At(_173At, _177One);
                    _179Multiply = Multiply(_95PairItem1, _178At);
                    _180Add = Add(_176Multiply, _179Multiply);
                    _181PairItem2 = PairItem2(_100PairItem2);
                    _182Two = Two();
                    _183At = At(_173At, _182Two);
                    _184Multiply = Multiply(_181PairItem2, _183At);
                    _185Add = Add(_180Add, _184Multiply);
                    _186Add = Add(_110At, _171PairItem2);
                    _187At = At(_24PairItem1, _186Add);
                    _188Zero = Zero();
                    _189At = At(_187At, _188Zero);
                    _190Multiply = Multiply(_106PairItem2, _189At);
                    _191One = One();
                    _192At = At(_187At, _191One);
                    _193Multiply = Multiply(_95PairItem1, _192At);
                    _194Add = Add(_190Multiply, _193Multiply);
                    _195Two = Two();
                    _196At = At(_187At, _195Two);
                    _197Multiply = Multiply(_181PairItem2, _196At);
                    _198Add = Add(_194Add, _197Multiply);
                    _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                    _200Add = Add(_133At, _171PairItem2);
                    _201At = At(_24PairItem1, _200Add);
                    _202Zero = Zero();
                    _203At = At(_201At, _202Zero);
                    _204Multiply = Multiply(_30PairItem1, _203At);
                    _205One = One();
                    _206At = At(_201At, _205One);
                    _207Multiply = Multiply(_139PairItem2, _206At);
                    _208Add = Add(_204Multiply, _207Multiply);
                    _209Two = Two();
                    _210At = At(_201At, _209Two);
                    _211Multiply = Multiply(_181PairItem2, _210At);
                    _212Add = Add(_208Add, _211Multiply);
                    _213Add = Add(_149At, _171PairItem2);
                    _214At = At(_24PairItem1, _213Add);
                    _215Zero = Zero();
                    _216At = At(_214At, _215Zero);
                    _217Multiply = Multiply(_106PairItem2, _216At);
                    _218One = One();
                    _219At = At(_214At, _218One);
                    _220Multiply = Multiply(_139PairItem2, _219At);
                    _221Add = Add(_217Multiply, _220Multiply);
                    _222Two = Two();
                    _223At = At(_214At, _222Two);
                    _224Multiply = Multiply(_181PairItem2, _223At);
                    _225Add = Add(_221Add, _224Multiply);
                    _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                    _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                    _228Constant = 3;
                    _229Constant = 2;
                    _230Multiply = Multiply(_229Constant, _101PairItem1);
                    _231Subtract = Subtract(_228Constant, _230Multiply);
                    _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                    _233Multiply = Multiply(_231Subtract, _232Multiply);
                    _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                    _235NaN = NaN();
                    _236Compare = Compare(_234FloatLerp, _235NaN);
                    _237Zero = Zero();
                    _238Equal = Equal(_236Compare, _237Zero);
                    _240Multiply = Multiply(_3At, if (_238Equal)
                        {
                          Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 55467
                          _239FloatZero = FloatZero();
                          _239FloatZero;
                          }else
                        {
                          _234FloatLerp;
                          });
                    _241Zero = Zero();
                    _242At = At(x0, _241Zero);
                    _243Add = Add(_240Multiply, _242At);
                    _244Unit = Unit(_243Add);
                    _245Add = Add(_1At, _25FloatOne);
                    _246Append = Append(_244Unit, _245Add);
                    _246Append;
                    });
                _27Count = Count(_26GenerateN);
                _28One = One();
                _29Subtract = Subtract(_27Count, _28One);
                _30At = At(_26GenerateN, _29Subtract);
                _31Zero = Zero();
                _32At = At(_30At, _31Zero);
                _32At;
                }, _8X, _6Z);
            _10Apply2 = Apply2((Single x0, Single x1) => 
              {
                Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 55122
                IArray[Single] _1Unit;// 37:Array2->2:Unit 55121
                Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 55123
                IArray[Single] _3Append;// 37:Array2->3:Append 55120
                Single _4AsFloat;// 0:NoiseDeformer-ext->13:AsFloat 55483
                Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 55124
                Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 55138
                Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 55139
                Single _8Constant;// 0:NoiseDeformer-ext->0:Constant 55484
                IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 55137
                Single _10FloatOne;// 0:NoiseDeformer-ext->46:FloatOne 55486
                Single _11Subtract;// 0:NoiseDeformer-ext->3:Subtract 55485
                Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 55146
                IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 55136
                Single _14AsFloat;// 0:NoiseDeformer-ext->43:AsFloat 55491
                Single _15Constant;// 0:NoiseDeformer-ext->0:Constant 55494
                Single _16Multiply;// 0:NoiseDeformer-ext->30:Multiply 55493
                Single _17Constant;// 0:NoiseDeformer-ext->0:Constant 55496
                Single _18Constant;// 0:NoiseDeformer-ext->0:Constant 55497
                Single _19Divide;// 0:NoiseDeformer-ext->31:Divide 55495
                Single _20Multiply;// 0:NoiseDeformer-ext->39:Multiply 55492
                Single _21Multiply;// 0:NoiseDeformer-ext->38:Multiply 55490
                Vector3 _22Vector3;// 0:NoiseDeformer-ext->0:Vector3 55487
                IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 55471
                IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 55475
                Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 55482
                IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 55117
                Int32 _27Count;// 3:LastIndex->2:Count 55116
                Int32 _28One;// 3:MinusOne->2:One 55115
                Int32 _29Subtract;// 3:MinusOne->1:Subtract 55114
                IArray[Single] _30At;// 68:Last->0:At 55111
                Int32 _31Zero;// 69:First->2:Zero 55109
                Single _32At;// 69:First->0:At 55108
                _0FloatZero = FloatZero();
                _1Unit = Unit(_0FloatZero);
                _2FloatZero = FloatZero();
                _3Append = Append(_1Unit, _2FloatZero);
                _4AsFloat = AsFloat(numIterations);
                _5AsInt = AsInt(_4AsFloat);
                _6FloatOne = FloatOne();
                _7AsInt = AsInt(_4AsFloat);
                _8Constant = 2;
                _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
                  {
                    Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 55141
                    _0Multiply = Multiply(_8Constant, x0);
                    _0Multiply;
                    });
                _10FloatOne = FloatOne();
                _11Subtract = Subtract(_10FloatOne, roughness);
                _12NegativeFloat = NegativeFloat(_11Subtract);
                _13Map = Map(_9GenerateN, (Single x0) => 
                  {
                    Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 55144
                    _0Pow = Pow(x0, _12NegativeFloat);
                    _0Pow;
                    });
                _14AsFloat = AsFloat(phase);
                _15Constant = 0.005;
                _16Multiply = Multiply(frequency, _15Constant);
                _17Constant = 1200;
                _18Constant = 4800;
                _19Divide = Divide(_17Constant, _18Constant);
                _20Multiply = Multiply(_16Multiply, _19Divide);
                _21Multiply = Multiply(_14AsFloat, _20Multiply);
                _22Vector3 = Vector3(x0, x1, _21Multiply);
                _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
                  {
                    Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 55473
                    _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                    _0MultiplyByScalar;
                    });
                _24PairItem1 = PairItem1(x1);
                _25FloatOne = FloatOne();
                _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
                  {
                    Int32 _0One;// 49:Second->2:One 55151
                    Single _1At;// 49:Second->0:At 55150
                    Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 55148
                    Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 55134
                    Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 55189
                    Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 55469
                    Single _6X;// 2:VectorAsArray->1:X 55200
                    IArray[Single] _7Unit;// 4:Array3->2:Unit 55199
                    Single _8Y;// 2:VectorAsArray->2:Y 55201
                    IArray[Single] _9Append;// 4:Array3->3:Append 55198
                    Single _10Z;// 2:VectorAsArray->3:Z 55202
                    IArray[Single] _11Append;// 4:Array3->6:Append 55197
                    Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 55215
                    Single _13At;// 1:VectorComponent-ext->3:At 55192
                    Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 55188
                    Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 55187
                    Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 55203
                    Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 55186
                    Int32 _18One;// 13:PlusOne->1:One 55207
                    Int32 _19Add;// 13:PlusOne->0:Add 55206
                    Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 55204
                    Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 55185
                    Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 55212
                    Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55211
                    Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55209
                    Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55214
                    Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55213
                    Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 55208
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 55184
                    Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 55181
                    Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 55180
                    IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 55476
                    Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 55226
                    Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 55225
                    Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 55224
                    Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 55236
                    Single _36X;// 2:VectorAsArray->1:X 55247
                    IArray[Single] _37Unit;// 4:Array3->2:Unit 55246
                    Single _38Y;// 2:VectorAsArray->2:Y 55248
                    IArray[Single] _39Append;// 4:Array3->3:Append 55245
                    Single _40Z;// 2:VectorAsArray->3:Z 55249
                    IArray[Single] _41Append;// 4:Array3->6:Append 55244
                    Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 55262
                    Single _43At;// 1:VectorComponent-ext->3:At 55239
                    Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 55235
                    Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 55234
                    Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 55250
                    Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 55233
                    Int32 _48One;// 13:PlusOne->1:One 55254
                    Int32 _49Add;// 13:PlusOne->0:Add 55253
                    Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 55251
                    Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 55232
                    Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 55259
                    Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55258
                    Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55256
                    Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55261
                    Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55260
                    Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 55255
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 55231
                    Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 55228
                    Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 55227
                    Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 55222
                    Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 55220
                    Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 55272
                    Single _64X;// 2:VectorAsArray->1:X 55283
                    IArray[Single] _65Unit;// 4:Array3->2:Unit 55282
                    Single _66Y;// 2:VectorAsArray->2:Y 55284
                    IArray[Single] _67Append;// 4:Array3->3:Append 55281
                    Single _68Z;// 2:VectorAsArray->3:Z 55285
                    IArray[Single] _69Append;// 4:Array3->6:Append 55280
                    Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 55298
                    Single _71At;// 1:VectorComponent-ext->3:At 55275
                    Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 55271
                    Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 55270
                    Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 55286
                    Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 55269
                    Int32 _76One;// 13:PlusOne->1:One 55290
                    Int32 _77Add;// 13:PlusOne->0:Add 55289
                    Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 55287
                    Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 55268
                    Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 55295
                    Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 55294
                    Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 55292
                    Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 55297
                    Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 55296
                    Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 55291
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 55267
                    Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 55264
                    Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 55263
                    Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 55218
                    IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 55216
                    Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 55173
                    Single _92At;// 62:NoiseDeformerAt3-ext->4:At 55172
                    Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 55171
                    Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 55300
                    Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 55299
                    Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 55176
                    Single _97At;// 62:NoiseDeformerAt3-ext->7:At 55175
                    Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 55174
                    Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 55170
                    Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 55302
                    Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 55301
                    Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 55179
                    Single _103At;// 62:NoiseDeformerAt3-ext->10:At 55178
                    Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 55177
                    Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 55169
                    Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 55318
                    Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 55326
                    Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 55325
                    Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 55323
                    Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 55322
                    Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 55320
                    IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 55319
                    Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 55311
                    Single _114At;// 66:NoiseDeformerAt3-ext->4:At 55310
                    Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 55309
                    Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 55314
                    Single _117At;// 66:NoiseDeformerAt3-ext->7:At 55313
                    Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 55312
                    Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 55308
                    Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 55317
                    Single _121At;// 66:NoiseDeformerAt3-ext->10:At 55316
                    Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 55315
                    Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 55307
                    Single _124Constant;// 42:NoiseDeformerSCurve-ext->0:Constant 55330
                    Single _125Constant;// 42:NoiseDeformerSCurve-ext->0:Constant 55332
                    Single _126Multiply;// 42:NoiseDeformerSCurve-ext->41:Multiply 55331
                    Single _127Subtract;// 42:NoiseDeformerSCurve-ext->39:Subtract 55329
                    Single _128Multiply;// 42:NoiseDeformerSCurve-ext->35:Multiply 55334
                    Single _129Multiply;// 42:NoiseDeformerSCurve-ext->37:Multiply 55328
                    Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 55164
                    Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 55356
                    Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 55355
                    Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 55354
                    Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 55352
                    IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 55351
                    Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 55344
                    Single _137At;// 72:NoiseDeformerAt3-ext->4:At 55343
                    Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 55342
                    Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 55357
                    Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 55347
                    Single _141At;// 72:NoiseDeformerAt3-ext->7:At 55346
                    Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 55345
                    Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 55341
                    Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 55350
                    Single _145At;// 72:NoiseDeformerAt3-ext->10:At 55349
                    Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 55348
                    Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 55340
                    Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 55377
                    Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 55376
                    Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 55374
                    IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 55373
                    Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 55366
                    Single _153At;// 75:NoiseDeformerAt3-ext->4:At 55365
                    Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 55364
                    Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 55369
                    Single _156At;// 75:NoiseDeformerAt3-ext->7:At 55368
                    Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 55367
                    Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 55363
                    Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 55372
                    Single _160At;// 75:NoiseDeformerAt3-ext->10:At 55371
                    Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 55370
                    Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 55362
                    Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 55335
                    Single _164Constant;// 56:NoiseDeformerSCurve-ext->0:Constant 55381
                    Single _165Constant;// 56:NoiseDeformerSCurve-ext->0:Constant 55383
                    Single _166Multiply;// 56:NoiseDeformerSCurve-ext->41:Multiply 55382
                    Single _167Subtract;// 56:NoiseDeformerSCurve-ext->39:Subtract 55380
                    Single _168Multiply;// 56:NoiseDeformerSCurve-ext->35:Multiply 55385
                    Single _169Multiply;// 56:NoiseDeformerSCurve-ext->37:Multiply 55379
                    Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 55163
                    Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 55405
                    Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 55404
                    IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 55403
                    Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 55396
                    Single _175At;// 82:NoiseDeformerAt3-ext->4:At 55395
                    Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 55394
                    Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 55399
                    Single _178At;// 82:NoiseDeformerAt3-ext->7:At 55398
                    Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 55397
                    Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 55393
                    Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 55406
                    Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 55402
                    Single _183At;// 82:NoiseDeformerAt3-ext->10:At 55401
                    Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 55400
                    Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 55392
                    Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 55423
                    IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 55422
                    Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 55415
                    Single _189At;// 86:NoiseDeformerAt3-ext->4:At 55414
                    Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 55413
                    Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 55418
                    Single _192At;// 86:NoiseDeformerAt3-ext->7:At 55417
                    Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 55416
                    Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 55412
                    Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 55421
                    Single _196At;// 86:NoiseDeformerAt3-ext->10:At 55420
                    Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 55419
                    Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 55411
                    Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 55387
                    Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 55441
                    IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 55440
                    Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 55433
                    Single _203At;// 92:NoiseDeformerAt3-ext->4:At 55432
                    Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 55431
                    Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 55436
                    Single _206At;// 92:NoiseDeformerAt3-ext->7:At 55435
                    Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 55434
                    Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 55430
                    Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 55439
                    Single _210At;// 92:NoiseDeformerAt3-ext->10:At 55438
                    Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 55437
                    Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 55429
                    Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 55458
                    IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 55457
                    Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 55450
                    Single _216At;// 96:NoiseDeformerAt3-ext->4:At 55449
                    Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 55448
                    Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 55453
                    Single _219At;// 96:NoiseDeformerAt3-ext->7:At 55452
                    Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 55451
                    Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 55447
                    Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 55456
                    Single _223At;// 96:NoiseDeformerAt3-ext->10:At 55455
                    Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 55454
                    Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 55446
                    Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 55424
                    Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 55386
                    Single _228Constant;// 58:NoiseDeformerSCurve-ext->0:Constant 55462
                    Single _229Constant;// 58:NoiseDeformerSCurve-ext->0:Constant 55464
                    Single _230Multiply;// 58:NoiseDeformerSCurve-ext->41:Multiply 55463
                    Single _231Subtract;// 58:NoiseDeformerSCurve-ext->39:Subtract 55461
                    Single _232Multiply;// 58:NoiseDeformerSCurve-ext->35:Multiply 55466
                    Single _233Multiply;// 58:NoiseDeformerSCurve-ext->37:Multiply 55460
                    Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 55162
                    Single _235NaN;// 118:FloatIsNaN->1:NaN 55160
                    Int32 _236Compare;// 118:FloatIsNaN->2:Compare 55159
                    Int32 _237Zero;// 118:FloatIsNaN->4:Zero 55161
                    Boolean _238Equal;// 118:FloatIsNaN->3:Equal 55158
                    Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 55132
                    Int32 _241Zero;// 48:First->2:Zero 55479
                    Single _242At;// 48:First->0:At 55478
                    Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 55131
                    IArray[Single] _244Unit;// 43:Array2->2:Unit 55129
                    Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 55481
                    IArray[Single] _246Append;// 43:Array2->3:Append 55128
                    _0One = One();
                    _1At = At(x0, _0One);
                    _2AsInt = AsInt(_1At);
                    _3At = At(_13Map, _2AsInt);
                    _4Constant = 4096;
                    _5At = At(_23GenerateN, _2AsInt);
                    _6X = X(_5At);
                    _7Unit = Unit(_6X);
                    _8Y = Y(_5At);
                    _9Append = Append(_7Unit, _8Y);
                    _10Z = Z(_5At);
                    _11Append = Append(_9Append, _10Z);
                    _12Zero = Zero();
                    _13At = At(_11Append, _12Zero);
                    _14Add = Add(_4Constant, _13At);
                    _15Floor = Floor(_14Add);
                    _16Constant = 255;
                    _17And = And(_15Floor, _16Constant);
                    _18One = One();
                    _19Add = Add(_17And, _18One);
                    _20And = And(_19Add, _16Constant);
                    _21Pair = Pair(_17And, _20And);
                    _22Floor = Floor(_14Add);
                    _23AsFloat = AsFloat(_22Floor);
                    _24Subtract = Subtract(_14Add, _23AsFloat);
                    _25FloatOne = FloatOne();
                    _26Subtract = Subtract(_24Subtract, _25FloatOne);
                    _27Pair = Pair(_24Subtract, _26Subtract);
                    _28Pair = Pair(_21Pair, _27Pair);
                    _29PairItem2 = PairItem2(_28Pair);
                    _30PairItem1 = PairItem1(_29PairItem2);
                    _31PairItem2 = PairItem2(x1);
                    _32PairItem1 = PairItem1(_28Pair);
                    _33PairItem1 = PairItem1(_32PairItem1);
                    _34At = At(_31PairItem2, _33PairItem1);
                    _35Constant = 4096;
                    _36X = X(_5At);
                    _37Unit = Unit(_36X);
                    _38Y = Y(_5At);
                    _39Append = Append(_37Unit, _38Y);
                    _40Z = Z(_5At);
                    _41Append = Append(_39Append, _40Z);
                    _42One = One();
                    _43At = At(_41Append, _42One);
                    _44Add = Add(_35Constant, _43At);
                    _45Floor = Floor(_44Add);
                    _46Constant = 255;
                    _47And = And(_45Floor, _46Constant);
                    _48One = One();
                    _49Add = Add(_47And, _48One);
                    _50And = And(_49Add, _46Constant);
                    _51Pair = Pair(_47And, _50And);
                    _52Floor = Floor(_44Add);
                    _53AsFloat = AsFloat(_52Floor);
                    _54Subtract = Subtract(_44Add, _53AsFloat);
                    _55FloatOne = FloatOne();
                    _56Subtract = Subtract(_54Subtract, _55FloatOne);
                    _57Pair = Pair(_54Subtract, _56Subtract);
                    _58Pair = Pair(_51Pair, _57Pair);
                    _59PairItem1 = PairItem1(_58Pair);
                    _60PairItem1 = PairItem1(_59PairItem1);
                    _61Add = Add(_34At, _60PairItem1);
                    _62At = At(_31PairItem2, _61Add);
                    _63Constant = 4096;
                    _64X = X(_5At);
                    _65Unit = Unit(_64X);
                    _66Y = Y(_5At);
                    _67Append = Append(_65Unit, _66Y);
                    _68Z = Z(_5At);
                    _69Append = Append(_67Append, _68Z);
                    _70Two = Two();
                    _71At = At(_69Append, _70Two);
                    _72Add = Add(_63Constant, _71At);
                    _73Floor = Floor(_72Add);
                    _74Constant = 255;
                    _75And = And(_73Floor, _74Constant);
                    _76One = One();
                    _77Add = Add(_75And, _76One);
                    _78And = And(_77Add, _74Constant);
                    _79Pair = Pair(_75And, _78And);
                    _80Floor = Floor(_72Add);
                    _81AsFloat = AsFloat(_80Floor);
                    _82Subtract = Subtract(_72Add, _81AsFloat);
                    _83FloatOne = FloatOne();
                    _84Subtract = Subtract(_82Subtract, _83FloatOne);
                    _85Pair = Pair(_82Subtract, _84Subtract);
                    _86Pair = Pair(_79Pair, _85Pair);
                    _87PairItem1 = PairItem1(_86Pair);
                    _88PairItem1 = PairItem1(_87PairItem1);
                    _89Add = Add(_62At, _88PairItem1);
                    _90At = At(_24PairItem1, _89Add);
                    _91Zero = Zero();
                    _92At = At(_90At, _91Zero);
                    _93Multiply = Multiply(_30PairItem1, _92At);
                    _94PairItem2 = PairItem2(_58Pair);
                    _95PairItem1 = PairItem1(_94PairItem2);
                    _96One = One();
                    _97At = At(_90At, _96One);
                    _98Multiply = Multiply(_95PairItem1, _97At);
                    _99Add = Add(_93Multiply, _98Multiply);
                    _100PairItem2 = PairItem2(_86Pair);
                    _101PairItem1 = PairItem1(_100PairItem2);
                    _102Two = Two();
                    _103At = At(_90At, _102Two);
                    _104Multiply = Multiply(_101PairItem1, _103At);
                    _105Add = Add(_99Add, _104Multiply);
                    _106PairItem2 = PairItem2(_29PairItem2);
                    _107PairItem2 = PairItem2(_32PairItem1);
                    _108At = At(_31PairItem2, _107PairItem2);
                    _109Add = Add(_108At, _60PairItem1);
                    _110At = At(_31PairItem2, _109Add);
                    _111Add = Add(_110At, _88PairItem1);
                    _112At = At(_24PairItem1, _111Add);
                    _113Zero = Zero();
                    _114At = At(_112At, _113Zero);
                    _115Multiply = Multiply(_106PairItem2, _114At);
                    _116One = One();
                    _117At = At(_112At, _116One);
                    _118Multiply = Multiply(_95PairItem1, _117At);
                    _119Add = Add(_115Multiply, _118Multiply);
                    _120Two = Two();
                    _121At = At(_112At, _120Two);
                    _122Multiply = Multiply(_101PairItem1, _121At);
                    _123Add = Add(_119Add, _122Multiply);
                    _124Constant = 3;
                    _125Constant = 2;
                    _126Multiply = Multiply(_125Constant, _30PairItem1);
                    _127Subtract = Subtract(_124Constant, _126Multiply);
                    _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                    _129Multiply = Multiply(_127Subtract, _128Multiply);
                    _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                    _131PairItem2 = PairItem2(_59PairItem1);
                    _132Add = Add(_34At, _131PairItem2);
                    _133At = At(_31PairItem2, _132Add);
                    _134Add = Add(_133At, _88PairItem1);
                    _135At = At(_24PairItem1, _134Add);
                    _136Zero = Zero();
                    _137At = At(_135At, _136Zero);
                    _138Multiply = Multiply(_30PairItem1, _137At);
                    _139PairItem2 = PairItem2(_94PairItem2);
                    _140One = One();
                    _141At = At(_135At, _140One);
                    _142Multiply = Multiply(_139PairItem2, _141At);
                    _143Add = Add(_138Multiply, _142Multiply);
                    _144Two = Two();
                    _145At = At(_135At, _144Two);
                    _146Multiply = Multiply(_101PairItem1, _145At);
                    _147Add = Add(_143Add, _146Multiply);
                    _148Add = Add(_108At, _131PairItem2);
                    _149At = At(_31PairItem2, _148Add);
                    _150Add = Add(_149At, _88PairItem1);
                    _151At = At(_24PairItem1, _150Add);
                    _152Zero = Zero();
                    _153At = At(_151At, _152Zero);
                    _154Multiply = Multiply(_106PairItem2, _153At);
                    _155One = One();
                    _156At = At(_151At, _155One);
                    _157Multiply = Multiply(_139PairItem2, _156At);
                    _158Add = Add(_154Multiply, _157Multiply);
                    _159Two = Two();
                    _160At = At(_151At, _159Two);
                    _161Multiply = Multiply(_101PairItem1, _160At);
                    _162Add = Add(_158Add, _161Multiply);
                    _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                    _164Constant = 3;
                    _165Constant = 2;
                    _166Multiply = Multiply(_165Constant, _95PairItem1);
                    _167Subtract = Subtract(_164Constant, _166Multiply);
                    _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                    _169Multiply = Multiply(_167Subtract, _168Multiply);
                    _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                    _171PairItem2 = PairItem2(_87PairItem1);
                    _172Add = Add(_62At, _171PairItem2);
                    _173At = At(_24PairItem1, _172Add);
                    _174Zero = Zero();
                    _175At = At(_173At, _174Zero);
                    _176Multiply = Multiply(_30PairItem1, _175At);
                    _177One = One();
                    _178At = At(_173At, _177One);
                    _179Multiply = Multiply(_95PairItem1, _178At);
                    _180Add = Add(_176Multiply, _179Multiply);
                    _181PairItem2 = PairItem2(_100PairItem2);
                    _182Two = Two();
                    _183At = At(_173At, _182Two);
                    _184Multiply = Multiply(_181PairItem2, _183At);
                    _185Add = Add(_180Add, _184Multiply);
                    _186Add = Add(_110At, _171PairItem2);
                    _187At = At(_24PairItem1, _186Add);
                    _188Zero = Zero();
                    _189At = At(_187At, _188Zero);
                    _190Multiply = Multiply(_106PairItem2, _189At);
                    _191One = One();
                    _192At = At(_187At, _191One);
                    _193Multiply = Multiply(_95PairItem1, _192At);
                    _194Add = Add(_190Multiply, _193Multiply);
                    _195Two = Two();
                    _196At = At(_187At, _195Two);
                    _197Multiply = Multiply(_181PairItem2, _196At);
                    _198Add = Add(_194Add, _197Multiply);
                    _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                    _200Add = Add(_133At, _171PairItem2);
                    _201At = At(_24PairItem1, _200Add);
                    _202Zero = Zero();
                    _203At = At(_201At, _202Zero);
                    _204Multiply = Multiply(_30PairItem1, _203At);
                    _205One = One();
                    _206At = At(_201At, _205One);
                    _207Multiply = Multiply(_139PairItem2, _206At);
                    _208Add = Add(_204Multiply, _207Multiply);
                    _209Two = Two();
                    _210At = At(_201At, _209Two);
                    _211Multiply = Multiply(_181PairItem2, _210At);
                    _212Add = Add(_208Add, _211Multiply);
                    _213Add = Add(_149At, _171PairItem2);
                    _214At = At(_24PairItem1, _213Add);
                    _215Zero = Zero();
                    _216At = At(_214At, _215Zero);
                    _217Multiply = Multiply(_106PairItem2, _216At);
                    _218One = One();
                    _219At = At(_214At, _218One);
                    _220Multiply = Multiply(_139PairItem2, _219At);
                    _221Add = Add(_217Multiply, _220Multiply);
                    _222Two = Two();
                    _223At = At(_214At, _222Two);
                    _224Multiply = Multiply(_181PairItem2, _223At);
                    _225Add = Add(_221Add, _224Multiply);
                    _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                    _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                    _228Constant = 3;
                    _229Constant = 2;
                    _230Multiply = Multiply(_229Constant, _101PairItem1);
                    _231Subtract = Subtract(_228Constant, _230Multiply);
                    _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                    _233Multiply = Multiply(_231Subtract, _232Multiply);
                    _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                    _235NaN = NaN();
                    _236Compare = Compare(_234FloatLerp, _235NaN);
                    _237Zero = Zero();
                    _238Equal = Equal(_236Compare, _237Zero);
                    _240Multiply = Multiply(_3At, if (_238Equal)
                        {
                          Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 55467
                          _239FloatZero = FloatZero();
                          _239FloatZero;
                          }else
                        {
                          _234FloatLerp;
                          });
                    _241Zero = Zero();
                    _242At = At(x0, _241Zero);
                    _243Add = Add(_240Multiply, _242At);
                    _244Unit = Unit(_243Add);
                    _245Add = Add(_1At, _25FloatOne);
                    _246Append = Append(_244Unit, _245Add);
                    _246Append;
                    });
                _27Count = Count(_26GenerateN);
                _28One = One();
                _29Subtract = Subtract(_27Count, _28One);
                _30At = At(_26GenerateN, _29Subtract);
                _31Zero = Zero();
                _32At = At(_30At, _31Zero);
                _32At;
                }, _8X, _5Y);
            _11Vector3 = Vector3(_7Apply2, _9Apply2, _10Apply2);
            _12Vector3 = Vector3(strengthX, strengthY, strengthZ);
            _13Multiply = Multiply(_11Vector3, _12Vector3);
            _14Add = Add(x0, _13Multiply);
            _14Add;
            }, _27Pair);
        _35Pass-through: Matrix = if (use gizmo node)
          {
            Boolean _29IsValidNode;// 4:NodeTransformInLocalSpaceOrIdentity-ext->3:IsValidNode 55639
            _29IsValidNode = IsValidNode(gizmo node);
            if (_29IsValidNode)
              {
                Matrix _30ObjectTransformBeforeWSM;// 2:NodeTMInLocalSpace-ext->3:ObjectTransformBeforeWSM 55643
                Matrix _31InvertMatrix;// 2:NodeTMInLocalSpace-ext->2:InvertMatrix 55644
                Matrix _32Multiply;// 2:NodeTMInLocalSpace-ext->4:Multiply 55642
                _30ObjectTransformBeforeWSM = ObjectTransformBeforeWSM(gizmo node);
                _31InvertMatrix = InvertMatrix(modifierTransform);
                _32Multiply = Multiply(_30ObjectTransformBeforeWSM, _31InvertMatrix);
                _32Multiply;
                }else
              {
                Matrix _33MatrixIdentity;// 4:NodeTransformInLocalSpaceOrIdentity-ext->5:MatrixIdentity 55645
                _33MatrixIdentity = MatrixIdentity();
                _33MatrixIdentity;
                };
            }else
          {
            Matrix _34MatrixIdentity;// 16:NodeTransformInLocalSpaceConditionally-ext->5:MatrixIdentity 55646
            _34MatrixIdentity = MatrixIdentity();
            _34MatrixIdentity;
            };
        _36InvertMatrix = InvertMatrix(_35Pass-through: Matrix);
        _37ParallelMap = ParallelMap(_0MeshVertices, (Vector3 x0) => 
          {
            Vector3 _0Transform;// 2:DeformVertices-ext->11:Transform 55085
            Vector3 _1Apply1;// 2:DeformVertices-ext->8:Apply1 55084
            Vector3 _2Transform;// 2:DeformVertices-ext->9:Transform 55083
            _0Transform = Transform(x0, _36InvertMatrix);
            _1Apply1 = Apply1(_28Bind2of2, _0Transform);
            _2Transform = Transform(_1Apply1, _35Pass-through: Matrix);
            _2Transform;
            });
        _38SetMeshVertices = SetMeshVertices(mesh, _37ParallelMap);
        _38SetMeshVertices;
        });
    _5IfThen;
    }