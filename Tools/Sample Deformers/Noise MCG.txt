(InstanceState state, TriMesh mesh, Int32 numIterations, Single roughness, Int32 phase, Single frequency, Single scale, Single strengthX, Single strengthY, Single strengthZ, Int32 seed, Boolean use gizmo node, INode gizmo node, Matrix modifierTransform) => 
  {
    String _0Constant;// 0:HasPerVertexChannel->0:Constant 47286
    Int32 _1Zero;// 4:HasSoftSelection->3:Zero 47288
    String _2ToString;// 0:HasPerVertexChannel->7:ToString 47287
    String _3ConcatenateStrings;// 0:HasPerVertexChannel->3:ConcatenateStrings 47285
    Boolean _4IsChannelAvailable;// 0:HasPerVertexChannel->4:IsChannelAvailable 47284
    TriMesh _5IfThen;// 3:MeshSetVertices-ext->10:IfThen 47280
    _0Constant = per-vertex data channel ;
    _1Zero = Zero();
    _2ToString = ToString(_1Zero);
    _3ConcatenateStrings = ConcatenateStrings(_0Constant, _2ToString);
    _4IsChannelAvailable = IsChannelAvailable(mesh, _3ConcatenateStrings);
    _5IfThen = IfThen(_4IsChannelAvailable, () => 
      {
        IArray[Vector3] _0MeshVertices;// 3:MeshSetVertices-ext->0:MeshVertices 47295
        IArray[Vector3] _1MeshVertices;// 2:MeshDeformVertices-ext->4:MeshVertices 47301
        Int32 _2Constant;// 72:NoiseDeformerNoiseInit-ext->0:Constant 47741
        Int32 _3One;// 126:PlusOne->1:One 47739
        Int32 _4Add;// 126:PlusOne->0:Add 47738
        IArray[Int32] _5Range;// 72:NoiseDeformerNoiseInit-ext->93:Range 47736
        Int32 _6Constant;// 72:NoiseDeformerNoiseInit-ext->0:Constant 47763
        IArray[Int32] _7Range;// 72:NoiseDeformerNoiseInit-ext->105:Range 47762
        IArray[IArray[Single]] _8Map;// 72:NoiseDeformerNoiseInit-ext->94:Map 47735
        IArray[IArray[Single]] _9Concatenate;// 72:NoiseDeformerNoiseInit-ext->70:Concatenate 47733
        IArray[Int32] _10Indices;// 72:NoiseDeformerNoiseInit-ext->2:Indices 47787
        Int32 _11Add;// 72:NoiseDeformerNoiseInit-ext->21:Add 47790
        Int32 _12Two;// 72:NoiseDeformerNoiseInit-ext->24:Two 47793
        Int32 _13Add;// 72:NoiseDeformerNoiseInit-ext->22:Add 47789
        IArray[Int32] _14Range;// 72:NoiseDeformerNoiseInit-ext->25:Range 47788
        Int32 _15Count;// 3:LastIndex->2:Count 47819
        Int32 _16One;// 3:MinusOne->2:One 47818
        Int32 _17Subtract;// 3:MinusOne->1:Subtract 47817
        Int32 _18At;// 35:Last->0:At 47814
        IArray[Int32] _19Map;// 72:NoiseDeformerNoiseInit-ext->20:Map 47805
        IArray[Int32] _20Aggregate;// 72:NoiseDeformerNoiseInit-ext->1:Aggregate 47785
        Int32 _21Two;// 72:NoiseDeformerNoiseInit-ext->67:Two 47833
        Int32 _22Add;// 72:NoiseDeformerNoiseInit-ext->66:Add 47831
        IArray[Int32] _23Range;// 72:NoiseDeformerNoiseInit-ext->69:Range 47830
        IArray[Int32] _24Map;// 72:NoiseDeformerNoiseInit-ext->82:Map 47828
        IArray[Int32] _25Map;// 79:SelectByIndex->2:Map 47838
        IArray[Tuple[Int32, Int32]] _26Combine;// 86:ZipToTuple->0:Combine 47826
        IArray[Int32] _27SetValues;// 72:NoiseDeformerNoiseInit-ext->76:SetValues 47782
        Tuple[IArray[IArray[Single]], IArray[Int32]] _28Pair;// 72:NoiseDeformerNoiseInit-ext->87:Pair 47732
        Func[Vector3, Vector3] _29Bind2of2;// 0:NoiseMesh-ext->5:Bind2of2 47307
        Matrix _36Pass-through: Matrix;// 0:Pass-through: Matrix 47274
        Matrix _37InvertMatrix;// 2:MeshDeformVertices-ext->7:InvertMatrix 47306
        IArray[Vector3] _38ParallelMap;// 2:MeshDeformVertices-ext->5:ParallelMap 47300
        Int32 _39Zero;// 7:SoftSelection->2:Zero 47298
        IArray[Single] _40PerVertexData;// 7:SoftSelection->3:PerVertexData 47297
        IArray[Vector3] _41Combine3;// 1:LerpVectors-ext->10:Combine3 47293
        TriMesh _42SetMeshVertices;// 3:MeshSetVertices-ext->6:SetMeshVertices 47289
        _0MeshVertices = MeshVertices(mesh);
        _1MeshVertices = MeshVertices(mesh);
        _2Constant = 256;
        _3One = One();
        _4Add = Add(_2Constant, _3One);
        _5Range = Range(_4Add);
        _6Constant = 3;
        _7Range = Range(_6Constant);
        _8Map = Map(_5Range, (Int32 x0) => 
          {
            Func[Int32, Single] _0Bind1of2;// 72:NoiseDeformerNoiseInit-ext->116:Bind1of2 47764
            IArray[Single] _1Map;// 72:NoiseDeformerNoiseInit-ext->108:Map 47761
            Int32 _2Zero;// 118:ArrayToVector3->2:Zero 47756
            Single _3At;// 118:ArrayToVector3->1:At 47755
            Int32 _4One;// 118:ArrayToVector3->3:One 47758
            Single _5At;// 118:ArrayToVector3->5:At 47757
            Int32 _6Two;// 118:ArrayToVector3->4:Two 47760
            Single _7At;// 118:ArrayToVector3->6:At 47759
            Vector3 _8Vector3;// 118:ArrayToVector3->7:Vector3 47754
            Vector3 _9Normalize;// 72:NoiseDeformerNoiseInit-ext->120:Normalize 47752
            Single _10X;// 117:VectorToArray->1:X 47749
            IArray[Single] _11Unit;// 4:Array3->2:Unit 47748
            Single _12Y;// 117:VectorToArray->2:Y 47750
            IArray[Single] _13Append;// 4:Array3->3:Append 47747
            Single _14Z;// 117:VectorToArray->3:Z 47751
            IArray[Single] _15Append;// 4:Array3->6:Append 47746
            _0Bind1of2 = Bind1of2((Int32 x0, Int32 x1) => 
              {
                Int32 _0Count;// 72:NoiseDeformerNoiseInit-ext->114:Count 47777
                Int32 _1Multiply;// 72:NoiseDeformerNoiseInit-ext->115:Multiply 47776
                Int32 _2Add;// 72:NoiseDeformerNoiseInit-ext->113:Add 47774
                Int32 _3RandInt;// 72:NoiseDeformerNoiseInit-ext->97:RandInt 47772
                Single _4AsFloat;// 72:NoiseDeformerNoiseInit-ext->121:AsFloat 47771
                Single _5Abs;// 72:NoiseDeformerNoiseInit-ext->123:Abs 47770
                Int32 _6AsInt;// 72:NoiseDeformerNoiseInit-ext->122:AsInt 47769
                Int32 _7Add;// 72:NoiseDeformerNoiseInit-ext->99:Add 47779
                Int32 _8Modulo;// 72:NoiseDeformerNoiseInit-ext->98:Modulo 47768
                Int32 _9Subtract;// 72:NoiseDeformerNoiseInit-ext->104:Subtract 47767
                Single _10AsFloat;// 72:NoiseDeformerNoiseInit-ext->100:AsFloat 47766
                Single _11AsFloat;// 72:NoiseDeformerNoiseInit-ext->103:AsFloat 47781
                Single _12Divide;// 72:NoiseDeformerNoiseInit-ext->101:Divide 47765
                _0Count = Count(_5Range);
                _1Multiply = Multiply(_0Count, x1);
                _2Add = Add(x0, _1Multiply);
                _3RandInt = RandInt(seed, _2Add);
                _4AsFloat = AsFloat(_3RandInt);
                _5Abs = Abs(_4AsFloat);
                _6AsInt = AsInt(_5Abs);
                _7Add = Add(_2Constant, _2Constant);
                _8Modulo = Modulo(_6AsInt, _7Add);
                _9Subtract = Subtract(_8Modulo, _2Constant);
                _10AsFloat = AsFloat(_9Subtract);
                _11AsFloat = AsFloat(_2Constant);
                _12Divide = Divide(_10AsFloat, _11AsFloat);
                _12Divide;
                }, x0);
            _1Map = Map(_7Range, _0Bind1of2);
            _2Zero = Zero();
            _3At = At(_1Map, _2Zero);
            _4One = One();
            _5At = At(_1Map, _4One);
            _6Two = Two();
            _7At = At(_1Map, _6Two);
            _8Vector3 = Vector3(_3At, _5At, _7At);
            _9Normalize = Normalize(_8Vector3);
            _10X = X(_9Normalize);
            _11Unit = Unit(_10X);
            _12Y = Y(_9Normalize);
            _13Append = Append(_11Unit, _12Y);
            _14Z = Z(_9Normalize);
            _15Append = Append(_13Append, _14Z);
            _15Append;
            });
        _9Concatenate = Concatenate(_8Map, _8Map);
        _10Indices = Indices(_8Map);
        _11Add = Add(_2Constant, _2Constant);
        _12Two = Two();
        _13Add = Add(_11Add, _12Two);
        _14Range = Range(_13Add);
        _15Count = Count(_10Indices);
        _16One = One();
        _17Subtract = Subtract(_15Count, _16One);
        _18At = At(_10Indices, _17Subtract);
        _19Map = Map(_10Indices, (Int32 x0) => 
          {
            Int32 _0Add;// 72:NoiseDeformerNoiseInit-ext->36:Add 47812
            Int32 _1RandInt;// 72:NoiseDeformerNoiseInit-ext->34:RandInt 47810
            Single _2AsFloat;// 72:NoiseDeformerNoiseInit-ext->92:AsFloat 47809
            Single _3Abs;// 72:NoiseDeformerNoiseInit-ext->90:Abs 47808
            Int32 _4AsInt;// 72:NoiseDeformerNoiseInit-ext->91:AsInt 47807
            Int32 _5Modulo;// 72:NoiseDeformerNoiseInit-ext->40:Modulo 47806
            _0Add = Add(_18At, x0);
            _1RandInt = RandInt(seed, _0Add);
            _2AsFloat = AsFloat(_1RandInt);
            _3Abs = Abs(_2AsFloat);
            _4AsInt = AsInt(_3Abs);
            _5Modulo = Modulo(_4AsInt, _2Constant);
            _5Modulo;
            });
        _20Aggregate = Aggregate(_10Indices, _14Range, (IArray[Int32] x0, Int32 x1) => 
          {
            Int32 _0At;// 72:NoiseDeformerNoiseInit-ext->52:At 47803
            Int32 _1At;// 72:NoiseDeformerNoiseInit-ext->60:At 47802
            Tuple[Int32, Int32] _2Pair;// 72:NoiseDeformerNoiseInit-ext->57:Pair 47800
            IArray[Tuple[Int32, Int32]] _3Unit;// 59:Array2->2:Unit 47799
            Int32 _4At;// 72:NoiseDeformerNoiseInit-ext->30:At 47823
            Tuple[Int32, Int32] _5Pair;// 72:NoiseDeformerNoiseInit-ext->55:Pair 47822
            IArray[Tuple[Int32, Int32]] _6Append;// 59:Array2->3:Append 47798
            IArray[Int32] _7SetValues;// 72:NoiseDeformerNoiseInit-ext->54:SetValues 47794
            _0At = At(_19Map, x1);
            _1At = At(x0, _0At);
            _2Pair = Pair(x1, _1At);
            _3Unit = Unit(_2Pair);
            _4At = At(x0, x1);
            _5Pair = Pair(_0At, _4At);
            _6Append = Append(_3Unit, _5Pair);
            _7SetValues = SetValues(x0, _6Append);
            _7SetValues;
            });
        _21Two = Two();
        _22Add = Add(_2Constant, _21Two);
        _23Range = Range(_22Add);
        _24Map = Map(_23Range, (Int32 x0) => 
          {
            Int32 _0Add;// 72:NoiseDeformerNoiseInit-ext->83:Add 47834
            _0Add = Add(x0, _2Constant);
            _0Add;
            });
        _25Map = Map(_23Range, (Int32 x0) => 
          {
            Int32 _0At;// 79:SelectByIndex->3:At 47839
            _0At = At(_20Aggregate, x0);
            _0At;
            });
        _26Combine = Combine(_24Map, _25Map, (Int32 x0, Int32 x1) => 
          {
            Tuple[Int32, Int32] _0Pair;// 86:ZipToTuple->4:Pair 47827
            _0Pair = Pair(x0, x1);
            _0Pair;
            });
        _27SetValues = SetValues(_20Aggregate, _26Combine);
        _28Pair = Pair(_9Concatenate, _27SetValues);
        _29Bind2of2 = Bind2of2((Vector3 x0, Tuple[IArray[IArray[Single]], IArray[Int32]] x1) => 
          {
            Single _0FloatOne;// 0:NoiseDeformer-ext->40:FloatOne 47723
            Single _1Divide;// 0:NoiseDeformer-ext->41:Divide 47722
            Vector3 _2MultiplyByScalar;// 0:NoiseDeformer-ext->16:MultiplyByScalar 47720
            Vector3 _3Constant;// 0:NoiseDeformer-ext->0:Constant 47724
            Vector3 _4Add;// 0:NoiseDeformer-ext->18:Add 47719
            Single _5Y;// 0:NoiseDeformer-ext->6:Y 47717
            Single _6Z;// 0:NoiseDeformer-ext->7:Z 47725
            Single _7Apply2;// 0:NoiseDeformer-ext->4:Apply2 47320
            Single _8X;// 0:NoiseDeformer-ext->5:X 47728
            Single _9Apply2;// 0:NoiseDeformer-ext->2:Apply2 47727
            Single _10Apply2;// 0:NoiseDeformer-ext->15:Apply2 47730
            Vector3 _11Vector3;// 0:NoiseDeformer-ext->14:Vector3 47318
            Vector3 _12Vector3;// 13:Vector3 47846
            Vector3 _13Multiply;// 0:NoiseDeformer-ext->22:Multiply 47317
            Vector3 _14Add;// 0:NoiseDeformer-ext->25:Add 47316
            _0FloatOne = FloatOne();
            _1Divide = Divide(_0FloatOne, scale);
            _2MultiplyByScalar = MultiplyByScalar(x0, _1Divide);
            _3Constant = new Microsoft.Xna.Framework.Vector3(0.5, 0.5, 0.5);
            _4Add = Add(_2MultiplyByScalar, _3Constant);
            _5Y = Y(_4Add);
            _6Z = Z(_4Add);
            _7Apply2 = Apply2((Single x0, Single x1) => 
              {
                Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 47341
                IArray[Single] _1Unit;// 37:Array2->2:Unit 47340
                Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 47342
                IArray[Single] _3Append;// 37:Array2->3:Append 47339
                Single _4AsFloat;// 0:NoiseDeformer-ext->13:AsFloat 47702
                Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 47343
                Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 47357
                Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 47358
                Single _8Constant;// 0:NoiseDeformer-ext->0:Constant 47703
                IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 47356
                Single _10FloatOne;// 0:NoiseDeformer-ext->46:FloatOne 47705
                Single _11Subtract;// 0:NoiseDeformer-ext->3:Subtract 47704
                Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 47365
                IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 47355
                Single _14AsFloat;// 0:NoiseDeformer-ext->43:AsFloat 47710
                Single _15Constant;// 0:NoiseDeformer-ext->0:Constant 47713
                Single _16Multiply;// 0:NoiseDeformer-ext->30:Multiply 47712
                Single _17Constant;// 0:NoiseDeformer-ext->0:Constant 47715
                Single _18Constant;// 0:NoiseDeformer-ext->0:Constant 47716
                Single _19Divide;// 0:NoiseDeformer-ext->31:Divide 47714
                Single _20Multiply;// 0:NoiseDeformer-ext->39:Multiply 47711
                Single _21Multiply;// 0:NoiseDeformer-ext->38:Multiply 47709
                Vector3 _22Vector3;// 0:NoiseDeformer-ext->0:Vector3 47706
                IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 47690
                IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 47694
                Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 47701
                IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 47336
                Int32 _27Count;// 3:LastIndex->2:Count 47335
                Int32 _28One;// 3:MinusOne->2:One 47334
                Int32 _29Subtract;// 3:MinusOne->1:Subtract 47333
                IArray[Single] _30At;// 68:Last->0:At 47330
                Int32 _31Zero;// 69:First->2:Zero 47328
                Single _32At;// 69:First->0:At 47327
                _0FloatZero = FloatZero();
                _1Unit = Unit(_0FloatZero);
                _2FloatZero = FloatZero();
                _3Append = Append(_1Unit, _2FloatZero);
                _4AsFloat = AsFloat(numIterations);
                _5AsInt = AsInt(_4AsFloat);
                _6FloatOne = FloatOne();
                _7AsInt = AsInt(_4AsFloat);
                _8Constant = 2;
                _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
                  {
                    Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 47360
                    _0Multiply = Multiply(_8Constant, x0);
                    _0Multiply;
                    });
                _10FloatOne = FloatOne();
                _11Subtract = Subtract(_10FloatOne, roughness);
                _12NegativeFloat = NegativeFloat(_11Subtract);
                _13Map = Map(_9GenerateN, (Single x0) => 
                  {
                    Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 47363
                    _0Pow = Pow(x0, _12NegativeFloat);
                    _0Pow;
                    });
                _14AsFloat = AsFloat(phase);
                _15Constant = 0.005;
                _16Multiply = Multiply(frequency, _15Constant);
                _17Constant = 1200;
                _18Constant = 4800;
                _19Divide = Divide(_17Constant, _18Constant);
                _20Multiply = Multiply(_16Multiply, _19Divide);
                _21Multiply = Multiply(_14AsFloat, _20Multiply);
                _22Vector3 = Vector3(x0, x1, _21Multiply);
                _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
                  {
                    Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 47692
                    _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                    _0MultiplyByScalar;
                    });
                _24PairItem1 = PairItem1(x1);
                _25FloatOne = FloatOne();
                _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
                  {
                    Int32 _0One;// 49:Second->2:One 47370
                    Single _1At;// 49:Second->0:At 47369
                    Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 47367
                    Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 47353
                    Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 47408
                    Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 47688
                    Single _6X;// 2:VectorAsArray->1:X 47419
                    IArray[Single] _7Unit;// 4:Array3->2:Unit 47418
                    Single _8Y;// 2:VectorAsArray->2:Y 47420
                    IArray[Single] _9Append;// 4:Array3->3:Append 47417
                    Single _10Z;// 2:VectorAsArray->3:Z 47421
                    IArray[Single] _11Append;// 4:Array3->6:Append 47416
                    Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 47434
                    Single _13At;// 1:VectorComponent-ext->3:At 47411
                    Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 47407
                    Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 47406
                    Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 47422
                    Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 47405
                    Int32 _18One;// 13:PlusOne->1:One 47426
                    Int32 _19Add;// 13:PlusOne->0:Add 47425
                    Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 47423
                    Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 47404
                    Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 47431
                    Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47430
                    Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47428
                    Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47433
                    Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47432
                    Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 47427
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 47403
                    Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 47400
                    Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 47399
                    IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 47695
                    Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 47445
                    Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 47444
                    Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 47443
                    Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 47455
                    Single _36X;// 2:VectorAsArray->1:X 47466
                    IArray[Single] _37Unit;// 4:Array3->2:Unit 47465
                    Single _38Y;// 2:VectorAsArray->2:Y 47467
                    IArray[Single] _39Append;// 4:Array3->3:Append 47464
                    Single _40Z;// 2:VectorAsArray->3:Z 47468
                    IArray[Single] _41Append;// 4:Array3->6:Append 47463
                    Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 47481
                    Single _43At;// 1:VectorComponent-ext->3:At 47458
                    Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 47454
                    Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 47453
                    Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 47469
                    Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 47452
                    Int32 _48One;// 13:PlusOne->1:One 47473
                    Int32 _49Add;// 13:PlusOne->0:Add 47472
                    Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 47470
                    Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 47451
                    Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 47478
                    Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47477
                    Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47475
                    Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47480
                    Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47479
                    Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 47474
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 47450
                    Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 47447
                    Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 47446
                    Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 47441
                    Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 47439
                    Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 47491
                    Single _64X;// 2:VectorAsArray->1:X 47502
                    IArray[Single] _65Unit;// 4:Array3->2:Unit 47501
                    Single _66Y;// 2:VectorAsArray->2:Y 47503
                    IArray[Single] _67Append;// 4:Array3->3:Append 47500
                    Single _68Z;// 2:VectorAsArray->3:Z 47504
                    IArray[Single] _69Append;// 4:Array3->6:Append 47499
                    Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 47517
                    Single _71At;// 1:VectorComponent-ext->3:At 47494
                    Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 47490
                    Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 47489
                    Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 47505
                    Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 47488
                    Int32 _76One;// 13:PlusOne->1:One 47509
                    Int32 _77Add;// 13:PlusOne->0:Add 47508
                    Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 47506
                    Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 47487
                    Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 47514
                    Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47513
                    Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47511
                    Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47516
                    Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47515
                    Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 47510
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 47486
                    Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 47483
                    Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 47482
                    Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 47437
                    IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 47435
                    Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 47392
                    Single _92At;// 62:NoiseDeformerAt3-ext->4:At 47391
                    Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 47390
                    Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 47519
                    Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 47518
                    Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 47395
                    Single _97At;// 62:NoiseDeformerAt3-ext->7:At 47394
                    Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 47393
                    Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 47389
                    Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 47521
                    Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 47520
                    Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 47398
                    Single _103At;// 62:NoiseDeformerAt3-ext->10:At 47397
                    Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 47396
                    Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 47388
                    Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 47537
                    Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 47545
                    Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 47544
                    Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 47542
                    Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 47541
                    Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 47539
                    IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 47538
                    Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 47530
                    Single _114At;// 66:NoiseDeformerAt3-ext->4:At 47529
                    Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 47528
                    Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 47533
                    Single _117At;// 66:NoiseDeformerAt3-ext->7:At 47532
                    Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 47531
                    Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 47527
                    Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 47536
                    Single _121At;// 66:NoiseDeformerAt3-ext->10:At 47535
                    Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 47534
                    Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 47526
                    Single _124Constant;// 42:NoiseDeformerSCurve->0:Constant 47549
                    Single _125Constant;// 42:NoiseDeformerSCurve->0:Constant 47551
                    Single _126Multiply;// 42:NoiseDeformerSCurve->41:Multiply 47550
                    Single _127Subtract;// 42:NoiseDeformerSCurve->39:Subtract 47548
                    Single _128Multiply;// 42:NoiseDeformerSCurve->35:Multiply 47553
                    Single _129Multiply;// 42:NoiseDeformerSCurve->37:Multiply 47547
                    Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 47383
                    Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 47575
                    Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 47574
                    Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 47573
                    Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 47571
                    IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 47570
                    Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 47563
                    Single _137At;// 72:NoiseDeformerAt3-ext->4:At 47562
                    Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 47561
                    Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 47576
                    Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 47566
                    Single _141At;// 72:NoiseDeformerAt3-ext->7:At 47565
                    Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 47564
                    Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 47560
                    Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 47569
                    Single _145At;// 72:NoiseDeformerAt3-ext->10:At 47568
                    Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 47567
                    Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 47559
                    Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 47596
                    Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 47595
                    Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 47593
                    IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 47592
                    Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 47585
                    Single _153At;// 75:NoiseDeformerAt3-ext->4:At 47584
                    Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 47583
                    Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 47588
                    Single _156At;// 75:NoiseDeformerAt3-ext->7:At 47587
                    Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 47586
                    Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 47582
                    Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 47591
                    Single _160At;// 75:NoiseDeformerAt3-ext->10:At 47590
                    Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 47589
                    Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 47581
                    Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 47554
                    Single _164Constant;// 56:NoiseDeformerSCurve->0:Constant 47600
                    Single _165Constant;// 56:NoiseDeformerSCurve->0:Constant 47602
                    Single _166Multiply;// 56:NoiseDeformerSCurve->41:Multiply 47601
                    Single _167Subtract;// 56:NoiseDeformerSCurve->39:Subtract 47599
                    Single _168Multiply;// 56:NoiseDeformerSCurve->35:Multiply 47604
                    Single _169Multiply;// 56:NoiseDeformerSCurve->37:Multiply 47598
                    Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 47382
                    Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 47624
                    Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 47623
                    IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 47622
                    Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 47615
                    Single _175At;// 82:NoiseDeformerAt3-ext->4:At 47614
                    Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 47613
                    Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 47618
                    Single _178At;// 82:NoiseDeformerAt3-ext->7:At 47617
                    Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 47616
                    Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 47612
                    Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 47625
                    Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 47621
                    Single _183At;// 82:NoiseDeformerAt3-ext->10:At 47620
                    Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 47619
                    Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 47611
                    Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 47642
                    IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 47641
                    Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 47634
                    Single _189At;// 86:NoiseDeformerAt3-ext->4:At 47633
                    Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 47632
                    Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 47637
                    Single _192At;// 86:NoiseDeformerAt3-ext->7:At 47636
                    Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 47635
                    Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 47631
                    Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 47640
                    Single _196At;// 86:NoiseDeformerAt3-ext->10:At 47639
                    Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 47638
                    Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 47630
                    Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 47606
                    Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 47660
                    IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 47659
                    Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 47652
                    Single _203At;// 92:NoiseDeformerAt3-ext->4:At 47651
                    Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 47650
                    Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 47655
                    Single _206At;// 92:NoiseDeformerAt3-ext->7:At 47654
                    Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 47653
                    Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 47649
                    Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 47658
                    Single _210At;// 92:NoiseDeformerAt3-ext->10:At 47657
                    Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 47656
                    Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 47648
                    Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 47677
                    IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 47676
                    Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 47669
                    Single _216At;// 96:NoiseDeformerAt3-ext->4:At 47668
                    Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 47667
                    Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 47672
                    Single _219At;// 96:NoiseDeformerAt3-ext->7:At 47671
                    Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 47670
                    Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 47666
                    Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 47675
                    Single _223At;// 96:NoiseDeformerAt3-ext->10:At 47674
                    Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 47673
                    Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 47665
                    Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 47643
                    Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 47605
                    Single _228Constant;// 58:NoiseDeformerSCurve->0:Constant 47681
                    Single _229Constant;// 58:NoiseDeformerSCurve->0:Constant 47683
                    Single _230Multiply;// 58:NoiseDeformerSCurve->41:Multiply 47682
                    Single _231Subtract;// 58:NoiseDeformerSCurve->39:Subtract 47680
                    Single _232Multiply;// 58:NoiseDeformerSCurve->35:Multiply 47685
                    Single _233Multiply;// 58:NoiseDeformerSCurve->37:Multiply 47679
                    Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 47381
                    Single _235NaN;// 118:FloatIsNaN->1:NaN 47379
                    Int32 _236Compare;// 118:FloatIsNaN->2:Compare 47378
                    Int32 _237Zero;// 118:FloatIsNaN->4:Zero 47380
                    Boolean _238Equal;// 118:FloatIsNaN->3:Equal 47377
                    Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 47351
                    Int32 _241Zero;// 48:First->2:Zero 47698
                    Single _242At;// 48:First->0:At 47697
                    Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 47350
                    IArray[Single] _244Unit;// 43:Array2->2:Unit 47348
                    Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 47700
                    IArray[Single] _246Append;// 43:Array2->3:Append 47347
                    _0One = One();
                    _1At = At(x0, _0One);
                    _2AsInt = AsInt(_1At);
                    _3At = At(_13Map, _2AsInt);
                    _4Constant = 4096;
                    _5At = At(_23GenerateN, _2AsInt);
                    _6X = X(_5At);
                    _7Unit = Unit(_6X);
                    _8Y = Y(_5At);
                    _9Append = Append(_7Unit, _8Y);
                    _10Z = Z(_5At);
                    _11Append = Append(_9Append, _10Z);
                    _12Zero = Zero();
                    _13At = At(_11Append, _12Zero);
                    _14Add = Add(_4Constant, _13At);
                    _15Floor = Floor(_14Add);
                    _16Constant = 255;
                    _17And = And(_15Floor, _16Constant);
                    _18One = One();
                    _19Add = Add(_17And, _18One);
                    _20And = And(_19Add, _16Constant);
                    _21Pair = Pair(_17And, _20And);
                    _22Floor = Floor(_14Add);
                    _23AsFloat = AsFloat(_22Floor);
                    _24Subtract = Subtract(_14Add, _23AsFloat);
                    _25FloatOne = FloatOne();
                    _26Subtract = Subtract(_24Subtract, _25FloatOne);
                    _27Pair = Pair(_24Subtract, _26Subtract);
                    _28Pair = Pair(_21Pair, _27Pair);
                    _29PairItem2 = PairItem2(_28Pair);
                    _30PairItem1 = PairItem1(_29PairItem2);
                    _31PairItem2 = PairItem2(x1);
                    _32PairItem1 = PairItem1(_28Pair);
                    _33PairItem1 = PairItem1(_32PairItem1);
                    _34At = At(_31PairItem2, _33PairItem1);
                    _35Constant = 4096;
                    _36X = X(_5At);
                    _37Unit = Unit(_36X);
                    _38Y = Y(_5At);
                    _39Append = Append(_37Unit, _38Y);
                    _40Z = Z(_5At);
                    _41Append = Append(_39Append, _40Z);
                    _42One = One();
                    _43At = At(_41Append, _42One);
                    _44Add = Add(_35Constant, _43At);
                    _45Floor = Floor(_44Add);
                    _46Constant = 255;
                    _47And = And(_45Floor, _46Constant);
                    _48One = One();
                    _49Add = Add(_47And, _48One);
                    _50And = And(_49Add, _46Constant);
                    _51Pair = Pair(_47And, _50And);
                    _52Floor = Floor(_44Add);
                    _53AsFloat = AsFloat(_52Floor);
                    _54Subtract = Subtract(_44Add, _53AsFloat);
                    _55FloatOne = FloatOne();
                    _56Subtract = Subtract(_54Subtract, _55FloatOne);
                    _57Pair = Pair(_54Subtract, _56Subtract);
                    _58Pair = Pair(_51Pair, _57Pair);
                    _59PairItem1 = PairItem1(_58Pair);
                    _60PairItem1 = PairItem1(_59PairItem1);
                    _61Add = Add(_34At, _60PairItem1);
                    _62At = At(_31PairItem2, _61Add);
                    _63Constant = 4096;
                    _64X = X(_5At);
                    _65Unit = Unit(_64X);
                    _66Y = Y(_5At);
                    _67Append = Append(_65Unit, _66Y);
                    _68Z = Z(_5At);
                    _69Append = Append(_67Append, _68Z);
                    _70Two = Two();
                    _71At = At(_69Append, _70Two);
                    _72Add = Add(_63Constant, _71At);
                    _73Floor = Floor(_72Add);
                    _74Constant = 255;
                    _75And = And(_73Floor, _74Constant);
                    _76One = One();
                    _77Add = Add(_75And, _76One);
                    _78And = And(_77Add, _74Constant);
                    _79Pair = Pair(_75And, _78And);
                    _80Floor = Floor(_72Add);
                    _81AsFloat = AsFloat(_80Floor);
                    _82Subtract = Subtract(_72Add, _81AsFloat);
                    _83FloatOne = FloatOne();
                    _84Subtract = Subtract(_82Subtract, _83FloatOne);
                    _85Pair = Pair(_82Subtract, _84Subtract);
                    _86Pair = Pair(_79Pair, _85Pair);
                    _87PairItem1 = PairItem1(_86Pair);
                    _88PairItem1 = PairItem1(_87PairItem1);
                    _89Add = Add(_62At, _88PairItem1);
                    _90At = At(_24PairItem1, _89Add);
                    _91Zero = Zero();
                    _92At = At(_90At, _91Zero);
                    _93Multiply = Multiply(_30PairItem1, _92At);
                    _94PairItem2 = PairItem2(_58Pair);
                    _95PairItem1 = PairItem1(_94PairItem2);
                    _96One = One();
                    _97At = At(_90At, _96One);
                    _98Multiply = Multiply(_95PairItem1, _97At);
                    _99Add = Add(_93Multiply, _98Multiply);
                    _100PairItem2 = PairItem2(_86Pair);
                    _101PairItem1 = PairItem1(_100PairItem2);
                    _102Two = Two();
                    _103At = At(_90At, _102Two);
                    _104Multiply = Multiply(_101PairItem1, _103At);
                    _105Add = Add(_99Add, _104Multiply);
                    _106PairItem2 = PairItem2(_29PairItem2);
                    _107PairItem2 = PairItem2(_32PairItem1);
                    _108At = At(_31PairItem2, _107PairItem2);
                    _109Add = Add(_108At, _60PairItem1);
                    _110At = At(_31PairItem2, _109Add);
                    _111Add = Add(_110At, _88PairItem1);
                    _112At = At(_24PairItem1, _111Add);
                    _113Zero = Zero();
                    _114At = At(_112At, _113Zero);
                    _115Multiply = Multiply(_106PairItem2, _114At);
                    _116One = One();
                    _117At = At(_112At, _116One);
                    _118Multiply = Multiply(_95PairItem1, _117At);
                    _119Add = Add(_115Multiply, _118Multiply);
                    _120Two = Two();
                    _121At = At(_112At, _120Two);
                    _122Multiply = Multiply(_101PairItem1, _121At);
                    _123Add = Add(_119Add, _122Multiply);
                    _124Constant = 3;
                    _125Constant = 2;
                    _126Multiply = Multiply(_125Constant, _30PairItem1);
                    _127Subtract = Subtract(_124Constant, _126Multiply);
                    _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                    _129Multiply = Multiply(_127Subtract, _128Multiply);
                    _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                    _131PairItem2 = PairItem2(_59PairItem1);
                    _132Add = Add(_34At, _131PairItem2);
                    _133At = At(_31PairItem2, _132Add);
                    _134Add = Add(_133At, _88PairItem1);
                    _135At = At(_24PairItem1, _134Add);
                    _136Zero = Zero();
                    _137At = At(_135At, _136Zero);
                    _138Multiply = Multiply(_30PairItem1, _137At);
                    _139PairItem2 = PairItem2(_94PairItem2);
                    _140One = One();
                    _141At = At(_135At, _140One);
                    _142Multiply = Multiply(_139PairItem2, _141At);
                    _143Add = Add(_138Multiply, _142Multiply);
                    _144Two = Two();
                    _145At = At(_135At, _144Two);
                    _146Multiply = Multiply(_101PairItem1, _145At);
                    _147Add = Add(_143Add, _146Multiply);
                    _148Add = Add(_108At, _131PairItem2);
                    _149At = At(_31PairItem2, _148Add);
                    _150Add = Add(_149At, _88PairItem1);
                    _151At = At(_24PairItem1, _150Add);
                    _152Zero = Zero();
                    _153At = At(_151At, _152Zero);
                    _154Multiply = Multiply(_106PairItem2, _153At);
                    _155One = One();
                    _156At = At(_151At, _155One);
                    _157Multiply = Multiply(_139PairItem2, _156At);
                    _158Add = Add(_154Multiply, _157Multiply);
                    _159Two = Two();
                    _160At = At(_151At, _159Two);
                    _161Multiply = Multiply(_101PairItem1, _160At);
                    _162Add = Add(_158Add, _161Multiply);
                    _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                    _164Constant = 3;
                    _165Constant = 2;
                    _166Multiply = Multiply(_165Constant, _95PairItem1);
                    _167Subtract = Subtract(_164Constant, _166Multiply);
                    _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                    _169Multiply = Multiply(_167Subtract, _168Multiply);
                    _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                    _171PairItem2 = PairItem2(_87PairItem1);
                    _172Add = Add(_62At, _171PairItem2);
                    _173At = At(_24PairItem1, _172Add);
                    _174Zero = Zero();
                    _175At = At(_173At, _174Zero);
                    _176Multiply = Multiply(_30PairItem1, _175At);
                    _177One = One();
                    _178At = At(_173At, _177One);
                    _179Multiply = Multiply(_95PairItem1, _178At);
                    _180Add = Add(_176Multiply, _179Multiply);
                    _181PairItem2 = PairItem2(_100PairItem2);
                    _182Two = Two();
                    _183At = At(_173At, _182Two);
                    _184Multiply = Multiply(_181PairItem2, _183At);
                    _185Add = Add(_180Add, _184Multiply);
                    _186Add = Add(_110At, _171PairItem2);
                    _187At = At(_24PairItem1, _186Add);
                    _188Zero = Zero();
                    _189At = At(_187At, _188Zero);
                    _190Multiply = Multiply(_106PairItem2, _189At);
                    _191One = One();
                    _192At = At(_187At, _191One);
                    _193Multiply = Multiply(_95PairItem1, _192At);
                    _194Add = Add(_190Multiply, _193Multiply);
                    _195Two = Two();
                    _196At = At(_187At, _195Two);
                    _197Multiply = Multiply(_181PairItem2, _196At);
                    _198Add = Add(_194Add, _197Multiply);
                    _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                    _200Add = Add(_133At, _171PairItem2);
                    _201At = At(_24PairItem1, _200Add);
                    _202Zero = Zero();
                    _203At = At(_201At, _202Zero);
                    _204Multiply = Multiply(_30PairItem1, _203At);
                    _205One = One();
                    _206At = At(_201At, _205One);
                    _207Multiply = Multiply(_139PairItem2, _206At);
                    _208Add = Add(_204Multiply, _207Multiply);
                    _209Two = Two();
                    _210At = At(_201At, _209Two);
                    _211Multiply = Multiply(_181PairItem2, _210At);
                    _212Add = Add(_208Add, _211Multiply);
                    _213Add = Add(_149At, _171PairItem2);
                    _214At = At(_24PairItem1, _213Add);
                    _215Zero = Zero();
                    _216At = At(_214At, _215Zero);
                    _217Multiply = Multiply(_106PairItem2, _216At);
                    _218One = One();
                    _219At = At(_214At, _218One);
                    _220Multiply = Multiply(_139PairItem2, _219At);
                    _221Add = Add(_217Multiply, _220Multiply);
                    _222Two = Two();
                    _223At = At(_214At, _222Two);
                    _224Multiply = Multiply(_181PairItem2, _223At);
                    _225Add = Add(_221Add, _224Multiply);
                    _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                    _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                    _228Constant = 3;
                    _229Constant = 2;
                    _230Multiply = Multiply(_229Constant, _101PairItem1);
                    _231Subtract = Subtract(_228Constant, _230Multiply);
                    _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                    _233Multiply = Multiply(_231Subtract, _232Multiply);
                    _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                    _235NaN = NaN();
                    _236Compare = Compare(_234FloatLerp, _235NaN);
                    _237Zero = Zero();
                    _238Equal = Equal(_236Compare, _237Zero);
                    _240Multiply = Multiply(_3At, if (_238Equal)
                        {
                          Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 47686
                          _239FloatZero = FloatZero();
                          _239FloatZero;
                          }else
                        {
                          _234FloatLerp;
                          });
                    _241Zero = Zero();
                    _242At = At(x0, _241Zero);
                    _243Add = Add(_240Multiply, _242At);
                    _244Unit = Unit(_243Add);
                    _245Add = Add(_1At, _25FloatOne);
                    _246Append = Append(_244Unit, _245Add);
                    _246Append;
                    });
                _27Count = Count(_26GenerateN);
                _28One = One();
                _29Subtract = Subtract(_27Count, _28One);
                _30At = At(_26GenerateN, _29Subtract);
                _31Zero = Zero();
                _32At = At(_30At, _31Zero);
                _32At;
                }, _5Y, _6Z);
            _8X = X(_4Add);
            _9Apply2 = Apply2((Single x0, Single x1) => 
              {
                Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 47341
                IArray[Single] _1Unit;// 37:Array2->2:Unit 47340
                Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 47342
                IArray[Single] _3Append;// 37:Array2->3:Append 47339
                Single _4AsFloat;// 0:NoiseDeformer-ext->13:AsFloat 47702
                Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 47343
                Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 47357
                Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 47358
                Single _8Constant;// 0:NoiseDeformer-ext->0:Constant 47703
                IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 47356
                Single _10FloatOne;// 0:NoiseDeformer-ext->46:FloatOne 47705
                Single _11Subtract;// 0:NoiseDeformer-ext->3:Subtract 47704
                Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 47365
                IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 47355
                Single _14AsFloat;// 0:NoiseDeformer-ext->43:AsFloat 47710
                Single _15Constant;// 0:NoiseDeformer-ext->0:Constant 47713
                Single _16Multiply;// 0:NoiseDeformer-ext->30:Multiply 47712
                Single _17Constant;// 0:NoiseDeformer-ext->0:Constant 47715
                Single _18Constant;// 0:NoiseDeformer-ext->0:Constant 47716
                Single _19Divide;// 0:NoiseDeformer-ext->31:Divide 47714
                Single _20Multiply;// 0:NoiseDeformer-ext->39:Multiply 47711
                Single _21Multiply;// 0:NoiseDeformer-ext->38:Multiply 47709
                Vector3 _22Vector3;// 0:NoiseDeformer-ext->0:Vector3 47706
                IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 47690
                IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 47694
                Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 47701
                IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 47336
                Int32 _27Count;// 3:LastIndex->2:Count 47335
                Int32 _28One;// 3:MinusOne->2:One 47334
                Int32 _29Subtract;// 3:MinusOne->1:Subtract 47333
                IArray[Single] _30At;// 68:Last->0:At 47330
                Int32 _31Zero;// 69:First->2:Zero 47328
                Single _32At;// 69:First->0:At 47327
                _0FloatZero = FloatZero();
                _1Unit = Unit(_0FloatZero);
                _2FloatZero = FloatZero();
                _3Append = Append(_1Unit, _2FloatZero);
                _4AsFloat = AsFloat(numIterations);
                _5AsInt = AsInt(_4AsFloat);
                _6FloatOne = FloatOne();
                _7AsInt = AsInt(_4AsFloat);
                _8Constant = 2;
                _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
                  {
                    Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 47360
                    _0Multiply = Multiply(_8Constant, x0);
                    _0Multiply;
                    });
                _10FloatOne = FloatOne();
                _11Subtract = Subtract(_10FloatOne, roughness);
                _12NegativeFloat = NegativeFloat(_11Subtract);
                _13Map = Map(_9GenerateN, (Single x0) => 
                  {
                    Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 47363
                    _0Pow = Pow(x0, _12NegativeFloat);
                    _0Pow;
                    });
                _14AsFloat = AsFloat(phase);
                _15Constant = 0.005;
                _16Multiply = Multiply(frequency, _15Constant);
                _17Constant = 1200;
                _18Constant = 4800;
                _19Divide = Divide(_17Constant, _18Constant);
                _20Multiply = Multiply(_16Multiply, _19Divide);
                _21Multiply = Multiply(_14AsFloat, _20Multiply);
                _22Vector3 = Vector3(x0, x1, _21Multiply);
                _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
                  {
                    Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 47692
                    _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                    _0MultiplyByScalar;
                    });
                _24PairItem1 = PairItem1(x1);
                _25FloatOne = FloatOne();
                _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
                  {
                    Int32 _0One;// 49:Second->2:One 47370
                    Single _1At;// 49:Second->0:At 47369
                    Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 47367
                    Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 47353
                    Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 47408
                    Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 47688
                    Single _6X;// 2:VectorAsArray->1:X 47419
                    IArray[Single] _7Unit;// 4:Array3->2:Unit 47418
                    Single _8Y;// 2:VectorAsArray->2:Y 47420
                    IArray[Single] _9Append;// 4:Array3->3:Append 47417
                    Single _10Z;// 2:VectorAsArray->3:Z 47421
                    IArray[Single] _11Append;// 4:Array3->6:Append 47416
                    Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 47434
                    Single _13At;// 1:VectorComponent-ext->3:At 47411
                    Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 47407
                    Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 47406
                    Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 47422
                    Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 47405
                    Int32 _18One;// 13:PlusOne->1:One 47426
                    Int32 _19Add;// 13:PlusOne->0:Add 47425
                    Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 47423
                    Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 47404
                    Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 47431
                    Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47430
                    Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47428
                    Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47433
                    Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47432
                    Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 47427
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 47403
                    Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 47400
                    Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 47399
                    IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 47695
                    Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 47445
                    Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 47444
                    Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 47443
                    Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 47455
                    Single _36X;// 2:VectorAsArray->1:X 47466
                    IArray[Single] _37Unit;// 4:Array3->2:Unit 47465
                    Single _38Y;// 2:VectorAsArray->2:Y 47467
                    IArray[Single] _39Append;// 4:Array3->3:Append 47464
                    Single _40Z;// 2:VectorAsArray->3:Z 47468
                    IArray[Single] _41Append;// 4:Array3->6:Append 47463
                    Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 47481
                    Single _43At;// 1:VectorComponent-ext->3:At 47458
                    Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 47454
                    Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 47453
                    Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 47469
                    Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 47452
                    Int32 _48One;// 13:PlusOne->1:One 47473
                    Int32 _49Add;// 13:PlusOne->0:Add 47472
                    Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 47470
                    Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 47451
                    Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 47478
                    Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47477
                    Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47475
                    Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47480
                    Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47479
                    Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 47474
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 47450
                    Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 47447
                    Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 47446
                    Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 47441
                    Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 47439
                    Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 47491
                    Single _64X;// 2:VectorAsArray->1:X 47502
                    IArray[Single] _65Unit;// 4:Array3->2:Unit 47501
                    Single _66Y;// 2:VectorAsArray->2:Y 47503
                    IArray[Single] _67Append;// 4:Array3->3:Append 47500
                    Single _68Z;// 2:VectorAsArray->3:Z 47504
                    IArray[Single] _69Append;// 4:Array3->6:Append 47499
                    Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 47517
                    Single _71At;// 1:VectorComponent-ext->3:At 47494
                    Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 47490
                    Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 47489
                    Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 47505
                    Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 47488
                    Int32 _76One;// 13:PlusOne->1:One 47509
                    Int32 _77Add;// 13:PlusOne->0:Add 47508
                    Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 47506
                    Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 47487
                    Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 47514
                    Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47513
                    Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47511
                    Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47516
                    Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47515
                    Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 47510
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 47486
                    Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 47483
                    Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 47482
                    Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 47437
                    IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 47435
                    Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 47392
                    Single _92At;// 62:NoiseDeformerAt3-ext->4:At 47391
                    Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 47390
                    Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 47519
                    Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 47518
                    Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 47395
                    Single _97At;// 62:NoiseDeformerAt3-ext->7:At 47394
                    Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 47393
                    Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 47389
                    Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 47521
                    Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 47520
                    Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 47398
                    Single _103At;// 62:NoiseDeformerAt3-ext->10:At 47397
                    Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 47396
                    Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 47388
                    Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 47537
                    Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 47545
                    Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 47544
                    Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 47542
                    Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 47541
                    Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 47539
                    IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 47538
                    Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 47530
                    Single _114At;// 66:NoiseDeformerAt3-ext->4:At 47529
                    Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 47528
                    Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 47533
                    Single _117At;// 66:NoiseDeformerAt3-ext->7:At 47532
                    Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 47531
                    Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 47527
                    Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 47536
                    Single _121At;// 66:NoiseDeformerAt3-ext->10:At 47535
                    Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 47534
                    Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 47526
                    Single _124Constant;// 42:NoiseDeformerSCurve->0:Constant 47549
                    Single _125Constant;// 42:NoiseDeformerSCurve->0:Constant 47551
                    Single _126Multiply;// 42:NoiseDeformerSCurve->41:Multiply 47550
                    Single _127Subtract;// 42:NoiseDeformerSCurve->39:Subtract 47548
                    Single _128Multiply;// 42:NoiseDeformerSCurve->35:Multiply 47553
                    Single _129Multiply;// 42:NoiseDeformerSCurve->37:Multiply 47547
                    Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 47383
                    Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 47575
                    Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 47574
                    Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 47573
                    Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 47571
                    IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 47570
                    Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 47563
                    Single _137At;// 72:NoiseDeformerAt3-ext->4:At 47562
                    Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 47561
                    Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 47576
                    Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 47566
                    Single _141At;// 72:NoiseDeformerAt3-ext->7:At 47565
                    Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 47564
                    Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 47560
                    Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 47569
                    Single _145At;// 72:NoiseDeformerAt3-ext->10:At 47568
                    Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 47567
                    Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 47559
                    Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 47596
                    Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 47595
                    Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 47593
                    IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 47592
                    Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 47585
                    Single _153At;// 75:NoiseDeformerAt3-ext->4:At 47584
                    Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 47583
                    Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 47588
                    Single _156At;// 75:NoiseDeformerAt3-ext->7:At 47587
                    Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 47586
                    Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 47582
                    Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 47591
                    Single _160At;// 75:NoiseDeformerAt3-ext->10:At 47590
                    Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 47589
                    Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 47581
                    Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 47554
                    Single _164Constant;// 56:NoiseDeformerSCurve->0:Constant 47600
                    Single _165Constant;// 56:NoiseDeformerSCurve->0:Constant 47602
                    Single _166Multiply;// 56:NoiseDeformerSCurve->41:Multiply 47601
                    Single _167Subtract;// 56:NoiseDeformerSCurve->39:Subtract 47599
                    Single _168Multiply;// 56:NoiseDeformerSCurve->35:Multiply 47604
                    Single _169Multiply;// 56:NoiseDeformerSCurve->37:Multiply 47598
                    Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 47382
                    Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 47624
                    Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 47623
                    IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 47622
                    Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 47615
                    Single _175At;// 82:NoiseDeformerAt3-ext->4:At 47614
                    Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 47613
                    Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 47618
                    Single _178At;// 82:NoiseDeformerAt3-ext->7:At 47617
                    Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 47616
                    Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 47612
                    Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 47625
                    Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 47621
                    Single _183At;// 82:NoiseDeformerAt3-ext->10:At 47620
                    Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 47619
                    Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 47611
                    Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 47642
                    IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 47641
                    Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 47634
                    Single _189At;// 86:NoiseDeformerAt3-ext->4:At 47633
                    Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 47632
                    Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 47637
                    Single _192At;// 86:NoiseDeformerAt3-ext->7:At 47636
                    Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 47635
                    Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 47631
                    Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 47640
                    Single _196At;// 86:NoiseDeformerAt3-ext->10:At 47639
                    Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 47638
                    Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 47630
                    Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 47606
                    Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 47660
                    IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 47659
                    Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 47652
                    Single _203At;// 92:NoiseDeformerAt3-ext->4:At 47651
                    Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 47650
                    Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 47655
                    Single _206At;// 92:NoiseDeformerAt3-ext->7:At 47654
                    Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 47653
                    Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 47649
                    Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 47658
                    Single _210At;// 92:NoiseDeformerAt3-ext->10:At 47657
                    Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 47656
                    Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 47648
                    Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 47677
                    IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 47676
                    Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 47669
                    Single _216At;// 96:NoiseDeformerAt3-ext->4:At 47668
                    Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 47667
                    Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 47672
                    Single _219At;// 96:NoiseDeformerAt3-ext->7:At 47671
                    Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 47670
                    Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 47666
                    Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 47675
                    Single _223At;// 96:NoiseDeformerAt3-ext->10:At 47674
                    Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 47673
                    Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 47665
                    Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 47643
                    Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 47605
                    Single _228Constant;// 58:NoiseDeformerSCurve->0:Constant 47681
                    Single _229Constant;// 58:NoiseDeformerSCurve->0:Constant 47683
                    Single _230Multiply;// 58:NoiseDeformerSCurve->41:Multiply 47682
                    Single _231Subtract;// 58:NoiseDeformerSCurve->39:Subtract 47680
                    Single _232Multiply;// 58:NoiseDeformerSCurve->35:Multiply 47685
                    Single _233Multiply;// 58:NoiseDeformerSCurve->37:Multiply 47679
                    Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 47381
                    Single _235NaN;// 118:FloatIsNaN->1:NaN 47379
                    Int32 _236Compare;// 118:FloatIsNaN->2:Compare 47378
                    Int32 _237Zero;// 118:FloatIsNaN->4:Zero 47380
                    Boolean _238Equal;// 118:FloatIsNaN->3:Equal 47377
                    Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 47351
                    Int32 _241Zero;// 48:First->2:Zero 47698
                    Single _242At;// 48:First->0:At 47697
                    Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 47350
                    IArray[Single] _244Unit;// 43:Array2->2:Unit 47348
                    Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 47700
                    IArray[Single] _246Append;// 43:Array2->3:Append 47347
                    _0One = One();
                    _1At = At(x0, _0One);
                    _2AsInt = AsInt(_1At);
                    _3At = At(_13Map, _2AsInt);
                    _4Constant = 4096;
                    _5At = At(_23GenerateN, _2AsInt);
                    _6X = X(_5At);
                    _7Unit = Unit(_6X);
                    _8Y = Y(_5At);
                    _9Append = Append(_7Unit, _8Y);
                    _10Z = Z(_5At);
                    _11Append = Append(_9Append, _10Z);
                    _12Zero = Zero();
                    _13At = At(_11Append, _12Zero);
                    _14Add = Add(_4Constant, _13At);
                    _15Floor = Floor(_14Add);
                    _16Constant = 255;
                    _17And = And(_15Floor, _16Constant);
                    _18One = One();
                    _19Add = Add(_17And, _18One);
                    _20And = And(_19Add, _16Constant);
                    _21Pair = Pair(_17And, _20And);
                    _22Floor = Floor(_14Add);
                    _23AsFloat = AsFloat(_22Floor);
                    _24Subtract = Subtract(_14Add, _23AsFloat);
                    _25FloatOne = FloatOne();
                    _26Subtract = Subtract(_24Subtract, _25FloatOne);
                    _27Pair = Pair(_24Subtract, _26Subtract);
                    _28Pair = Pair(_21Pair, _27Pair);
                    _29PairItem2 = PairItem2(_28Pair);
                    _30PairItem1 = PairItem1(_29PairItem2);
                    _31PairItem2 = PairItem2(x1);
                    _32PairItem1 = PairItem1(_28Pair);
                    _33PairItem1 = PairItem1(_32PairItem1);
                    _34At = At(_31PairItem2, _33PairItem1);
                    _35Constant = 4096;
                    _36X = X(_5At);
                    _37Unit = Unit(_36X);
                    _38Y = Y(_5At);
                    _39Append = Append(_37Unit, _38Y);
                    _40Z = Z(_5At);
                    _41Append = Append(_39Append, _40Z);
                    _42One = One();
                    _43At = At(_41Append, _42One);
                    _44Add = Add(_35Constant, _43At);
                    _45Floor = Floor(_44Add);
                    _46Constant = 255;
                    _47And = And(_45Floor, _46Constant);
                    _48One = One();
                    _49Add = Add(_47And, _48One);
                    _50And = And(_49Add, _46Constant);
                    _51Pair = Pair(_47And, _50And);
                    _52Floor = Floor(_44Add);
                    _53AsFloat = AsFloat(_52Floor);
                    _54Subtract = Subtract(_44Add, _53AsFloat);
                    _55FloatOne = FloatOne();
                    _56Subtract = Subtract(_54Subtract, _55FloatOne);
                    _57Pair = Pair(_54Subtract, _56Subtract);
                    _58Pair = Pair(_51Pair, _57Pair);
                    _59PairItem1 = PairItem1(_58Pair);
                    _60PairItem1 = PairItem1(_59PairItem1);
                    _61Add = Add(_34At, _60PairItem1);
                    _62At = At(_31PairItem2, _61Add);
                    _63Constant = 4096;
                    _64X = X(_5At);
                    _65Unit = Unit(_64X);
                    _66Y = Y(_5At);
                    _67Append = Append(_65Unit, _66Y);
                    _68Z = Z(_5At);
                    _69Append = Append(_67Append, _68Z);
                    _70Two = Two();
                    _71At = At(_69Append, _70Two);
                    _72Add = Add(_63Constant, _71At);
                    _73Floor = Floor(_72Add);
                    _74Constant = 255;
                    _75And = And(_73Floor, _74Constant);
                    _76One = One();
                    _77Add = Add(_75And, _76One);
                    _78And = And(_77Add, _74Constant);
                    _79Pair = Pair(_75And, _78And);
                    _80Floor = Floor(_72Add);
                    _81AsFloat = AsFloat(_80Floor);
                    _82Subtract = Subtract(_72Add, _81AsFloat);
                    _83FloatOne = FloatOne();
                    _84Subtract = Subtract(_82Subtract, _83FloatOne);
                    _85Pair = Pair(_82Subtract, _84Subtract);
                    _86Pair = Pair(_79Pair, _85Pair);
                    _87PairItem1 = PairItem1(_86Pair);
                    _88PairItem1 = PairItem1(_87PairItem1);
                    _89Add = Add(_62At, _88PairItem1);
                    _90At = At(_24PairItem1, _89Add);
                    _91Zero = Zero();
                    _92At = At(_90At, _91Zero);
                    _93Multiply = Multiply(_30PairItem1, _92At);
                    _94PairItem2 = PairItem2(_58Pair);
                    _95PairItem1 = PairItem1(_94PairItem2);
                    _96One = One();
                    _97At = At(_90At, _96One);
                    _98Multiply = Multiply(_95PairItem1, _97At);
                    _99Add = Add(_93Multiply, _98Multiply);
                    _100PairItem2 = PairItem2(_86Pair);
                    _101PairItem1 = PairItem1(_100PairItem2);
                    _102Two = Two();
                    _103At = At(_90At, _102Two);
                    _104Multiply = Multiply(_101PairItem1, _103At);
                    _105Add = Add(_99Add, _104Multiply);
                    _106PairItem2 = PairItem2(_29PairItem2);
                    _107PairItem2 = PairItem2(_32PairItem1);
                    _108At = At(_31PairItem2, _107PairItem2);
                    _109Add = Add(_108At, _60PairItem1);
                    _110At = At(_31PairItem2, _109Add);
                    _111Add = Add(_110At, _88PairItem1);
                    _112At = At(_24PairItem1, _111Add);
                    _113Zero = Zero();
                    _114At = At(_112At, _113Zero);
                    _115Multiply = Multiply(_106PairItem2, _114At);
                    _116One = One();
                    _117At = At(_112At, _116One);
                    _118Multiply = Multiply(_95PairItem1, _117At);
                    _119Add = Add(_115Multiply, _118Multiply);
                    _120Two = Two();
                    _121At = At(_112At, _120Two);
                    _122Multiply = Multiply(_101PairItem1, _121At);
                    _123Add = Add(_119Add, _122Multiply);
                    _124Constant = 3;
                    _125Constant = 2;
                    _126Multiply = Multiply(_125Constant, _30PairItem1);
                    _127Subtract = Subtract(_124Constant, _126Multiply);
                    _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                    _129Multiply = Multiply(_127Subtract, _128Multiply);
                    _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                    _131PairItem2 = PairItem2(_59PairItem1);
                    _132Add = Add(_34At, _131PairItem2);
                    _133At = At(_31PairItem2, _132Add);
                    _134Add = Add(_133At, _88PairItem1);
                    _135At = At(_24PairItem1, _134Add);
                    _136Zero = Zero();
                    _137At = At(_135At, _136Zero);
                    _138Multiply = Multiply(_30PairItem1, _137At);
                    _139PairItem2 = PairItem2(_94PairItem2);
                    _140One = One();
                    _141At = At(_135At, _140One);
                    _142Multiply = Multiply(_139PairItem2, _141At);
                    _143Add = Add(_138Multiply, _142Multiply);
                    _144Two = Two();
                    _145At = At(_135At, _144Two);
                    _146Multiply = Multiply(_101PairItem1, _145At);
                    _147Add = Add(_143Add, _146Multiply);
                    _148Add = Add(_108At, _131PairItem2);
                    _149At = At(_31PairItem2, _148Add);
                    _150Add = Add(_149At, _88PairItem1);
                    _151At = At(_24PairItem1, _150Add);
                    _152Zero = Zero();
                    _153At = At(_151At, _152Zero);
                    _154Multiply = Multiply(_106PairItem2, _153At);
                    _155One = One();
                    _156At = At(_151At, _155One);
                    _157Multiply = Multiply(_139PairItem2, _156At);
                    _158Add = Add(_154Multiply, _157Multiply);
                    _159Two = Two();
                    _160At = At(_151At, _159Two);
                    _161Multiply = Multiply(_101PairItem1, _160At);
                    _162Add = Add(_158Add, _161Multiply);
                    _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                    _164Constant = 3;
                    _165Constant = 2;
                    _166Multiply = Multiply(_165Constant, _95PairItem1);
                    _167Subtract = Subtract(_164Constant, _166Multiply);
                    _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                    _169Multiply = Multiply(_167Subtract, _168Multiply);
                    _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                    _171PairItem2 = PairItem2(_87PairItem1);
                    _172Add = Add(_62At, _171PairItem2);
                    _173At = At(_24PairItem1, _172Add);
                    _174Zero = Zero();
                    _175At = At(_173At, _174Zero);
                    _176Multiply = Multiply(_30PairItem1, _175At);
                    _177One = One();
                    _178At = At(_173At, _177One);
                    _179Multiply = Multiply(_95PairItem1, _178At);
                    _180Add = Add(_176Multiply, _179Multiply);
                    _181PairItem2 = PairItem2(_100PairItem2);
                    _182Two = Two();
                    _183At = At(_173At, _182Two);
                    _184Multiply = Multiply(_181PairItem2, _183At);
                    _185Add = Add(_180Add, _184Multiply);
                    _186Add = Add(_110At, _171PairItem2);
                    _187At = At(_24PairItem1, _186Add);
                    _188Zero = Zero();
                    _189At = At(_187At, _188Zero);
                    _190Multiply = Multiply(_106PairItem2, _189At);
                    _191One = One();
                    _192At = At(_187At, _191One);
                    _193Multiply = Multiply(_95PairItem1, _192At);
                    _194Add = Add(_190Multiply, _193Multiply);
                    _195Two = Two();
                    _196At = At(_187At, _195Two);
                    _197Multiply = Multiply(_181PairItem2, _196At);
                    _198Add = Add(_194Add, _197Multiply);
                    _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                    _200Add = Add(_133At, _171PairItem2);
                    _201At = At(_24PairItem1, _200Add);
                    _202Zero = Zero();
                    _203At = At(_201At, _202Zero);
                    _204Multiply = Multiply(_30PairItem1, _203At);
                    _205One = One();
                    _206At = At(_201At, _205One);
                    _207Multiply = Multiply(_139PairItem2, _206At);
                    _208Add = Add(_204Multiply, _207Multiply);
                    _209Two = Two();
                    _210At = At(_201At, _209Two);
                    _211Multiply = Multiply(_181PairItem2, _210At);
                    _212Add = Add(_208Add, _211Multiply);
                    _213Add = Add(_149At, _171PairItem2);
                    _214At = At(_24PairItem1, _213Add);
                    _215Zero = Zero();
                    _216At = At(_214At, _215Zero);
                    _217Multiply = Multiply(_106PairItem2, _216At);
                    _218One = One();
                    _219At = At(_214At, _218One);
                    _220Multiply = Multiply(_139PairItem2, _219At);
                    _221Add = Add(_217Multiply, _220Multiply);
                    _222Two = Two();
                    _223At = At(_214At, _222Two);
                    _224Multiply = Multiply(_181PairItem2, _223At);
                    _225Add = Add(_221Add, _224Multiply);
                    _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                    _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                    _228Constant = 3;
                    _229Constant = 2;
                    _230Multiply = Multiply(_229Constant, _101PairItem1);
                    _231Subtract = Subtract(_228Constant, _230Multiply);
                    _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                    _233Multiply = Multiply(_231Subtract, _232Multiply);
                    _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                    _235NaN = NaN();
                    _236Compare = Compare(_234FloatLerp, _235NaN);
                    _237Zero = Zero();
                    _238Equal = Equal(_236Compare, _237Zero);
                    _240Multiply = Multiply(_3At, if (_238Equal)
                        {
                          Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 47686
                          _239FloatZero = FloatZero();
                          _239FloatZero;
                          }else
                        {
                          _234FloatLerp;
                          });
                    _241Zero = Zero();
                    _242At = At(x0, _241Zero);
                    _243Add = Add(_240Multiply, _242At);
                    _244Unit = Unit(_243Add);
                    _245Add = Add(_1At, _25FloatOne);
                    _246Append = Append(_244Unit, _245Add);
                    _246Append;
                    });
                _27Count = Count(_26GenerateN);
                _28One = One();
                _29Subtract = Subtract(_27Count, _28One);
                _30At = At(_26GenerateN, _29Subtract);
                _31Zero = Zero();
                _32At = At(_30At, _31Zero);
                _32At;
                }, _8X, _6Z);
            _10Apply2 = Apply2((Single x0, Single x1) => 
              {
                Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 47341
                IArray[Single] _1Unit;// 37:Array2->2:Unit 47340
                Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 47342
                IArray[Single] _3Append;// 37:Array2->3:Append 47339
                Single _4AsFloat;// 0:NoiseDeformer-ext->13:AsFloat 47702
                Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 47343
                Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 47357
                Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 47358
                Single _8Constant;// 0:NoiseDeformer-ext->0:Constant 47703
                IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 47356
                Single _10FloatOne;// 0:NoiseDeformer-ext->46:FloatOne 47705
                Single _11Subtract;// 0:NoiseDeformer-ext->3:Subtract 47704
                Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 47365
                IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 47355
                Single _14AsFloat;// 0:NoiseDeformer-ext->43:AsFloat 47710
                Single _15Constant;// 0:NoiseDeformer-ext->0:Constant 47713
                Single _16Multiply;// 0:NoiseDeformer-ext->30:Multiply 47712
                Single _17Constant;// 0:NoiseDeformer-ext->0:Constant 47715
                Single _18Constant;// 0:NoiseDeformer-ext->0:Constant 47716
                Single _19Divide;// 0:NoiseDeformer-ext->31:Divide 47714
                Single _20Multiply;// 0:NoiseDeformer-ext->39:Multiply 47711
                Single _21Multiply;// 0:NoiseDeformer-ext->38:Multiply 47709
                Vector3 _22Vector3;// 0:NoiseDeformer-ext->0:Vector3 47706
                IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 47690
                IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 47694
                Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 47701
                IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 47336
                Int32 _27Count;// 3:LastIndex->2:Count 47335
                Int32 _28One;// 3:MinusOne->2:One 47334
                Int32 _29Subtract;// 3:MinusOne->1:Subtract 47333
                IArray[Single] _30At;// 68:Last->0:At 47330
                Int32 _31Zero;// 69:First->2:Zero 47328
                Single _32At;// 69:First->0:At 47327
                _0FloatZero = FloatZero();
                _1Unit = Unit(_0FloatZero);
                _2FloatZero = FloatZero();
                _3Append = Append(_1Unit, _2FloatZero);
                _4AsFloat = AsFloat(numIterations);
                _5AsInt = AsInt(_4AsFloat);
                _6FloatOne = FloatOne();
                _7AsInt = AsInt(_4AsFloat);
                _8Constant = 2;
                _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
                  {
                    Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 47360
                    _0Multiply = Multiply(_8Constant, x0);
                    _0Multiply;
                    });
                _10FloatOne = FloatOne();
                _11Subtract = Subtract(_10FloatOne, roughness);
                _12NegativeFloat = NegativeFloat(_11Subtract);
                _13Map = Map(_9GenerateN, (Single x0) => 
                  {
                    Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 47363
                    _0Pow = Pow(x0, _12NegativeFloat);
                    _0Pow;
                    });
                _14AsFloat = AsFloat(phase);
                _15Constant = 0.005;
                _16Multiply = Multiply(frequency, _15Constant);
                _17Constant = 1200;
                _18Constant = 4800;
                _19Divide = Divide(_17Constant, _18Constant);
                _20Multiply = Multiply(_16Multiply, _19Divide);
                _21Multiply = Multiply(_14AsFloat, _20Multiply);
                _22Vector3 = Vector3(x0, x1, _21Multiply);
                _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
                  {
                    Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 47692
                    _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                    _0MultiplyByScalar;
                    });
                _24PairItem1 = PairItem1(x1);
                _25FloatOne = FloatOne();
                _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
                  {
                    Int32 _0One;// 49:Second->2:One 47370
                    Single _1At;// 49:Second->0:At 47369
                    Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 47367
                    Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 47353
                    Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 47408
                    Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 47688
                    Single _6X;// 2:VectorAsArray->1:X 47419
                    IArray[Single] _7Unit;// 4:Array3->2:Unit 47418
                    Single _8Y;// 2:VectorAsArray->2:Y 47420
                    IArray[Single] _9Append;// 4:Array3->3:Append 47417
                    Single _10Z;// 2:VectorAsArray->3:Z 47421
                    IArray[Single] _11Append;// 4:Array3->6:Append 47416
                    Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 47434
                    Single _13At;// 1:VectorComponent-ext->3:At 47411
                    Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 47407
                    Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 47406
                    Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 47422
                    Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 47405
                    Int32 _18One;// 13:PlusOne->1:One 47426
                    Int32 _19Add;// 13:PlusOne->0:Add 47425
                    Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 47423
                    Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 47404
                    Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 47431
                    Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47430
                    Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47428
                    Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47433
                    Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47432
                    Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 47427
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 47403
                    Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 47400
                    Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 47399
                    IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 47695
                    Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 47445
                    Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 47444
                    Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 47443
                    Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 47455
                    Single _36X;// 2:VectorAsArray->1:X 47466
                    IArray[Single] _37Unit;// 4:Array3->2:Unit 47465
                    Single _38Y;// 2:VectorAsArray->2:Y 47467
                    IArray[Single] _39Append;// 4:Array3->3:Append 47464
                    Single _40Z;// 2:VectorAsArray->3:Z 47468
                    IArray[Single] _41Append;// 4:Array3->6:Append 47463
                    Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 47481
                    Single _43At;// 1:VectorComponent-ext->3:At 47458
                    Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 47454
                    Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 47453
                    Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 47469
                    Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 47452
                    Int32 _48One;// 13:PlusOne->1:One 47473
                    Int32 _49Add;// 13:PlusOne->0:Add 47472
                    Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 47470
                    Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 47451
                    Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 47478
                    Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47477
                    Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47475
                    Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47480
                    Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47479
                    Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 47474
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 47450
                    Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 47447
                    Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 47446
                    Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 47441
                    Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 47439
                    Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 47491
                    Single _64X;// 2:VectorAsArray->1:X 47502
                    IArray[Single] _65Unit;// 4:Array3->2:Unit 47501
                    Single _66Y;// 2:VectorAsArray->2:Y 47503
                    IArray[Single] _67Append;// 4:Array3->3:Append 47500
                    Single _68Z;// 2:VectorAsArray->3:Z 47504
                    IArray[Single] _69Append;// 4:Array3->6:Append 47499
                    Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 47517
                    Single _71At;// 1:VectorComponent-ext->3:At 47494
                    Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 47490
                    Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 47489
                    Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 47505
                    Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 47488
                    Int32 _76One;// 13:PlusOne->1:One 47509
                    Int32 _77Add;// 13:PlusOne->0:Add 47508
                    Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 47506
                    Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 47487
                    Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 47514
                    Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47513
                    Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47511
                    Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47516
                    Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47515
                    Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 47510
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 47486
                    Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 47483
                    Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 47482
                    Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 47437
                    IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 47435
                    Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 47392
                    Single _92At;// 62:NoiseDeformerAt3-ext->4:At 47391
                    Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 47390
                    Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 47519
                    Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 47518
                    Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 47395
                    Single _97At;// 62:NoiseDeformerAt3-ext->7:At 47394
                    Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 47393
                    Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 47389
                    Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 47521
                    Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 47520
                    Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 47398
                    Single _103At;// 62:NoiseDeformerAt3-ext->10:At 47397
                    Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 47396
                    Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 47388
                    Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 47537
                    Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 47545
                    Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 47544
                    Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 47542
                    Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 47541
                    Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 47539
                    IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 47538
                    Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 47530
                    Single _114At;// 66:NoiseDeformerAt3-ext->4:At 47529
                    Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 47528
                    Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 47533
                    Single _117At;// 66:NoiseDeformerAt3-ext->7:At 47532
                    Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 47531
                    Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 47527
                    Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 47536
                    Single _121At;// 66:NoiseDeformerAt3-ext->10:At 47535
                    Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 47534
                    Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 47526
                    Single _124Constant;// 42:NoiseDeformerSCurve->0:Constant 47549
                    Single _125Constant;// 42:NoiseDeformerSCurve->0:Constant 47551
                    Single _126Multiply;// 42:NoiseDeformerSCurve->41:Multiply 47550
                    Single _127Subtract;// 42:NoiseDeformerSCurve->39:Subtract 47548
                    Single _128Multiply;// 42:NoiseDeformerSCurve->35:Multiply 47553
                    Single _129Multiply;// 42:NoiseDeformerSCurve->37:Multiply 47547
                    Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 47383
                    Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 47575
                    Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 47574
                    Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 47573
                    Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 47571
                    IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 47570
                    Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 47563
                    Single _137At;// 72:NoiseDeformerAt3-ext->4:At 47562
                    Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 47561
                    Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 47576
                    Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 47566
                    Single _141At;// 72:NoiseDeformerAt3-ext->7:At 47565
                    Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 47564
                    Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 47560
                    Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 47569
                    Single _145At;// 72:NoiseDeformerAt3-ext->10:At 47568
                    Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 47567
                    Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 47559
                    Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 47596
                    Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 47595
                    Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 47593
                    IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 47592
                    Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 47585
                    Single _153At;// 75:NoiseDeformerAt3-ext->4:At 47584
                    Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 47583
                    Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 47588
                    Single _156At;// 75:NoiseDeformerAt3-ext->7:At 47587
                    Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 47586
                    Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 47582
                    Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 47591
                    Single _160At;// 75:NoiseDeformerAt3-ext->10:At 47590
                    Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 47589
                    Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 47581
                    Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 47554
                    Single _164Constant;// 56:NoiseDeformerSCurve->0:Constant 47600
                    Single _165Constant;// 56:NoiseDeformerSCurve->0:Constant 47602
                    Single _166Multiply;// 56:NoiseDeformerSCurve->41:Multiply 47601
                    Single _167Subtract;// 56:NoiseDeformerSCurve->39:Subtract 47599
                    Single _168Multiply;// 56:NoiseDeformerSCurve->35:Multiply 47604
                    Single _169Multiply;// 56:NoiseDeformerSCurve->37:Multiply 47598
                    Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 47382
                    Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 47624
                    Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 47623
                    IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 47622
                    Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 47615
                    Single _175At;// 82:NoiseDeformerAt3-ext->4:At 47614
                    Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 47613
                    Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 47618
                    Single _178At;// 82:NoiseDeformerAt3-ext->7:At 47617
                    Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 47616
                    Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 47612
                    Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 47625
                    Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 47621
                    Single _183At;// 82:NoiseDeformerAt3-ext->10:At 47620
                    Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 47619
                    Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 47611
                    Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 47642
                    IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 47641
                    Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 47634
                    Single _189At;// 86:NoiseDeformerAt3-ext->4:At 47633
                    Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 47632
                    Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 47637
                    Single _192At;// 86:NoiseDeformerAt3-ext->7:At 47636
                    Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 47635
                    Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 47631
                    Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 47640
                    Single _196At;// 86:NoiseDeformerAt3-ext->10:At 47639
                    Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 47638
                    Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 47630
                    Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 47606
                    Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 47660
                    IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 47659
                    Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 47652
                    Single _203At;// 92:NoiseDeformerAt3-ext->4:At 47651
                    Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 47650
                    Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 47655
                    Single _206At;// 92:NoiseDeformerAt3-ext->7:At 47654
                    Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 47653
                    Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 47649
                    Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 47658
                    Single _210At;// 92:NoiseDeformerAt3-ext->10:At 47657
                    Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 47656
                    Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 47648
                    Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 47677
                    IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 47676
                    Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 47669
                    Single _216At;// 96:NoiseDeformerAt3-ext->4:At 47668
                    Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 47667
                    Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 47672
                    Single _219At;// 96:NoiseDeformerAt3-ext->7:At 47671
                    Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 47670
                    Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 47666
                    Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 47675
                    Single _223At;// 96:NoiseDeformerAt3-ext->10:At 47674
                    Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 47673
                    Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 47665
                    Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 47643
                    Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 47605
                    Single _228Constant;// 58:NoiseDeformerSCurve->0:Constant 47681
                    Single _229Constant;// 58:NoiseDeformerSCurve->0:Constant 47683
                    Single _230Multiply;// 58:NoiseDeformerSCurve->41:Multiply 47682
                    Single _231Subtract;// 58:NoiseDeformerSCurve->39:Subtract 47680
                    Single _232Multiply;// 58:NoiseDeformerSCurve->35:Multiply 47685
                    Single _233Multiply;// 58:NoiseDeformerSCurve->37:Multiply 47679
                    Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 47381
                    Single _235NaN;// 118:FloatIsNaN->1:NaN 47379
                    Int32 _236Compare;// 118:FloatIsNaN->2:Compare 47378
                    Int32 _237Zero;// 118:FloatIsNaN->4:Zero 47380
                    Boolean _238Equal;// 118:FloatIsNaN->3:Equal 47377
                    Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 47351
                    Int32 _241Zero;// 48:First->2:Zero 47698
                    Single _242At;// 48:First->0:At 47697
                    Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 47350
                    IArray[Single] _244Unit;// 43:Array2->2:Unit 47348
                    Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 47700
                    IArray[Single] _246Append;// 43:Array2->3:Append 47347
                    _0One = One();
                    _1At = At(x0, _0One);
                    _2AsInt = AsInt(_1At);
                    _3At = At(_13Map, _2AsInt);
                    _4Constant = 4096;
                    _5At = At(_23GenerateN, _2AsInt);
                    _6X = X(_5At);
                    _7Unit = Unit(_6X);
                    _8Y = Y(_5At);
                    _9Append = Append(_7Unit, _8Y);
                    _10Z = Z(_5At);
                    _11Append = Append(_9Append, _10Z);
                    _12Zero = Zero();
                    _13At = At(_11Append, _12Zero);
                    _14Add = Add(_4Constant, _13At);
                    _15Floor = Floor(_14Add);
                    _16Constant = 255;
                    _17And = And(_15Floor, _16Constant);
                    _18One = One();
                    _19Add = Add(_17And, _18One);
                    _20And = And(_19Add, _16Constant);
                    _21Pair = Pair(_17And, _20And);
                    _22Floor = Floor(_14Add);
                    _23AsFloat = AsFloat(_22Floor);
                    _24Subtract = Subtract(_14Add, _23AsFloat);
                    _25FloatOne = FloatOne();
                    _26Subtract = Subtract(_24Subtract, _25FloatOne);
                    _27Pair = Pair(_24Subtract, _26Subtract);
                    _28Pair = Pair(_21Pair, _27Pair);
                    _29PairItem2 = PairItem2(_28Pair);
                    _30PairItem1 = PairItem1(_29PairItem2);
                    _31PairItem2 = PairItem2(x1);
                    _32PairItem1 = PairItem1(_28Pair);
                    _33PairItem1 = PairItem1(_32PairItem1);
                    _34At = At(_31PairItem2, _33PairItem1);
                    _35Constant = 4096;
                    _36X = X(_5At);
                    _37Unit = Unit(_36X);
                    _38Y = Y(_5At);
                    _39Append = Append(_37Unit, _38Y);
                    _40Z = Z(_5At);
                    _41Append = Append(_39Append, _40Z);
                    _42One = One();
                    _43At = At(_41Append, _42One);
                    _44Add = Add(_35Constant, _43At);
                    _45Floor = Floor(_44Add);
                    _46Constant = 255;
                    _47And = And(_45Floor, _46Constant);
                    _48One = One();
                    _49Add = Add(_47And, _48One);
                    _50And = And(_49Add, _46Constant);
                    _51Pair = Pair(_47And, _50And);
                    _52Floor = Floor(_44Add);
                    _53AsFloat = AsFloat(_52Floor);
                    _54Subtract = Subtract(_44Add, _53AsFloat);
                    _55FloatOne = FloatOne();
                    _56Subtract = Subtract(_54Subtract, _55FloatOne);
                    _57Pair = Pair(_54Subtract, _56Subtract);
                    _58Pair = Pair(_51Pair, _57Pair);
                    _59PairItem1 = PairItem1(_58Pair);
                    _60PairItem1 = PairItem1(_59PairItem1);
                    _61Add = Add(_34At, _60PairItem1);
                    _62At = At(_31PairItem2, _61Add);
                    _63Constant = 4096;
                    _64X = X(_5At);
                    _65Unit = Unit(_64X);
                    _66Y = Y(_5At);
                    _67Append = Append(_65Unit, _66Y);
                    _68Z = Z(_5At);
                    _69Append = Append(_67Append, _68Z);
                    _70Two = Two();
                    _71At = At(_69Append, _70Two);
                    _72Add = Add(_63Constant, _71At);
                    _73Floor = Floor(_72Add);
                    _74Constant = 255;
                    _75And = And(_73Floor, _74Constant);
                    _76One = One();
                    _77Add = Add(_75And, _76One);
                    _78And = And(_77Add, _74Constant);
                    _79Pair = Pair(_75And, _78And);
                    _80Floor = Floor(_72Add);
                    _81AsFloat = AsFloat(_80Floor);
                    _82Subtract = Subtract(_72Add, _81AsFloat);
                    _83FloatOne = FloatOne();
                    _84Subtract = Subtract(_82Subtract, _83FloatOne);
                    _85Pair = Pair(_82Subtract, _84Subtract);
                    _86Pair = Pair(_79Pair, _85Pair);
                    _87PairItem1 = PairItem1(_86Pair);
                    _88PairItem1 = PairItem1(_87PairItem1);
                    _89Add = Add(_62At, _88PairItem1);
                    _90At = At(_24PairItem1, _89Add);
                    _91Zero = Zero();
                    _92At = At(_90At, _91Zero);
                    _93Multiply = Multiply(_30PairItem1, _92At);
                    _94PairItem2 = PairItem2(_58Pair);
                    _95PairItem1 = PairItem1(_94PairItem2);
                    _96One = One();
                    _97At = At(_90At, _96One);
                    _98Multiply = Multiply(_95PairItem1, _97At);
                    _99Add = Add(_93Multiply, _98Multiply);
                    _100PairItem2 = PairItem2(_86Pair);
                    _101PairItem1 = PairItem1(_100PairItem2);
                    _102Two = Two();
                    _103At = At(_90At, _102Two);
                    _104Multiply = Multiply(_101PairItem1, _103At);
                    _105Add = Add(_99Add, _104Multiply);
                    _106PairItem2 = PairItem2(_29PairItem2);
                    _107PairItem2 = PairItem2(_32PairItem1);
                    _108At = At(_31PairItem2, _107PairItem2);
                    _109Add = Add(_108At, _60PairItem1);
                    _110At = At(_31PairItem2, _109Add);
                    _111Add = Add(_110At, _88PairItem1);
                    _112At = At(_24PairItem1, _111Add);
                    _113Zero = Zero();
                    _114At = At(_112At, _113Zero);
                    _115Multiply = Multiply(_106PairItem2, _114At);
                    _116One = One();
                    _117At = At(_112At, _116One);
                    _118Multiply = Multiply(_95PairItem1, _117At);
                    _119Add = Add(_115Multiply, _118Multiply);
                    _120Two = Two();
                    _121At = At(_112At, _120Two);
                    _122Multiply = Multiply(_101PairItem1, _121At);
                    _123Add = Add(_119Add, _122Multiply);
                    _124Constant = 3;
                    _125Constant = 2;
                    _126Multiply = Multiply(_125Constant, _30PairItem1);
                    _127Subtract = Subtract(_124Constant, _126Multiply);
                    _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                    _129Multiply = Multiply(_127Subtract, _128Multiply);
                    _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                    _131PairItem2 = PairItem2(_59PairItem1);
                    _132Add = Add(_34At, _131PairItem2);
                    _133At = At(_31PairItem2, _132Add);
                    _134Add = Add(_133At, _88PairItem1);
                    _135At = At(_24PairItem1, _134Add);
                    _136Zero = Zero();
                    _137At = At(_135At, _136Zero);
                    _138Multiply = Multiply(_30PairItem1, _137At);
                    _139PairItem2 = PairItem2(_94PairItem2);
                    _140One = One();
                    _141At = At(_135At, _140One);
                    _142Multiply = Multiply(_139PairItem2, _141At);
                    _143Add = Add(_138Multiply, _142Multiply);
                    _144Two = Two();
                    _145At = At(_135At, _144Two);
                    _146Multiply = Multiply(_101PairItem1, _145At);
                    _147Add = Add(_143Add, _146Multiply);
                    _148Add = Add(_108At, _131PairItem2);
                    _149At = At(_31PairItem2, _148Add);
                    _150Add = Add(_149At, _88PairItem1);
                    _151At = At(_24PairItem1, _150Add);
                    _152Zero = Zero();
                    _153At = At(_151At, _152Zero);
                    _154Multiply = Multiply(_106PairItem2, _153At);
                    _155One = One();
                    _156At = At(_151At, _155One);
                    _157Multiply = Multiply(_139PairItem2, _156At);
                    _158Add = Add(_154Multiply, _157Multiply);
                    _159Two = Two();
                    _160At = At(_151At, _159Two);
                    _161Multiply = Multiply(_101PairItem1, _160At);
                    _162Add = Add(_158Add, _161Multiply);
                    _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                    _164Constant = 3;
                    _165Constant = 2;
                    _166Multiply = Multiply(_165Constant, _95PairItem1);
                    _167Subtract = Subtract(_164Constant, _166Multiply);
                    _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                    _169Multiply = Multiply(_167Subtract, _168Multiply);
                    _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                    _171PairItem2 = PairItem2(_87PairItem1);
                    _172Add = Add(_62At, _171PairItem2);
                    _173At = At(_24PairItem1, _172Add);
                    _174Zero = Zero();
                    _175At = At(_173At, _174Zero);
                    _176Multiply = Multiply(_30PairItem1, _175At);
                    _177One = One();
                    _178At = At(_173At, _177One);
                    _179Multiply = Multiply(_95PairItem1, _178At);
                    _180Add = Add(_176Multiply, _179Multiply);
                    _181PairItem2 = PairItem2(_100PairItem2);
                    _182Two = Two();
                    _183At = At(_173At, _182Two);
                    _184Multiply = Multiply(_181PairItem2, _183At);
                    _185Add = Add(_180Add, _184Multiply);
                    _186Add = Add(_110At, _171PairItem2);
                    _187At = At(_24PairItem1, _186Add);
                    _188Zero = Zero();
                    _189At = At(_187At, _188Zero);
                    _190Multiply = Multiply(_106PairItem2, _189At);
                    _191One = One();
                    _192At = At(_187At, _191One);
                    _193Multiply = Multiply(_95PairItem1, _192At);
                    _194Add = Add(_190Multiply, _193Multiply);
                    _195Two = Two();
                    _196At = At(_187At, _195Two);
                    _197Multiply = Multiply(_181PairItem2, _196At);
                    _198Add = Add(_194Add, _197Multiply);
                    _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                    _200Add = Add(_133At, _171PairItem2);
                    _201At = At(_24PairItem1, _200Add);
                    _202Zero = Zero();
                    _203At = At(_201At, _202Zero);
                    _204Multiply = Multiply(_30PairItem1, _203At);
                    _205One = One();
                    _206At = At(_201At, _205One);
                    _207Multiply = Multiply(_139PairItem2, _206At);
                    _208Add = Add(_204Multiply, _207Multiply);
                    _209Two = Two();
                    _210At = At(_201At, _209Two);
                    _211Multiply = Multiply(_181PairItem2, _210At);
                    _212Add = Add(_208Add, _211Multiply);
                    _213Add = Add(_149At, _171PairItem2);
                    _214At = At(_24PairItem1, _213Add);
                    _215Zero = Zero();
                    _216At = At(_214At, _215Zero);
                    _217Multiply = Multiply(_106PairItem2, _216At);
                    _218One = One();
                    _219At = At(_214At, _218One);
                    _220Multiply = Multiply(_139PairItem2, _219At);
                    _221Add = Add(_217Multiply, _220Multiply);
                    _222Two = Two();
                    _223At = At(_214At, _222Two);
                    _224Multiply = Multiply(_181PairItem2, _223At);
                    _225Add = Add(_221Add, _224Multiply);
                    _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                    _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                    _228Constant = 3;
                    _229Constant = 2;
                    _230Multiply = Multiply(_229Constant, _101PairItem1);
                    _231Subtract = Subtract(_228Constant, _230Multiply);
                    _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                    _233Multiply = Multiply(_231Subtract, _232Multiply);
                    _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                    _235NaN = NaN();
                    _236Compare = Compare(_234FloatLerp, _235NaN);
                    _237Zero = Zero();
                    _238Equal = Equal(_236Compare, _237Zero);
                    _240Multiply = Multiply(_3At, if (_238Equal)
                        {
                          Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 47686
                          _239FloatZero = FloatZero();
                          _239FloatZero;
                          }else
                        {
                          _234FloatLerp;
                          });
                    _241Zero = Zero();
                    _242At = At(x0, _241Zero);
                    _243Add = Add(_240Multiply, _242At);
                    _244Unit = Unit(_243Add);
                    _245Add = Add(_1At, _25FloatOne);
                    _246Append = Append(_244Unit, _245Add);
                    _246Append;
                    });
                _27Count = Count(_26GenerateN);
                _28One = One();
                _29Subtract = Subtract(_27Count, _28One);
                _30At = At(_26GenerateN, _29Subtract);
                _31Zero = Zero();
                _32At = At(_30At, _31Zero);
                _32At;
                }, _8X, _5Y);
            _11Vector3 = Vector3(_7Apply2, _9Apply2, _10Apply2);
            _12Vector3 = Vector3(strengthX, strengthY, strengthZ);
            _13Multiply = Multiply(_11Vector3, _12Vector3);
            _14Add = Add(x0, _13Multiply);
            _14Add;
            }, _28Pair);
        _36Pass-through: Matrix = if (use gizmo node)
          {
            Boolean _30IsValidNode;// 4:NodeTransformInLocalSpaceOrIdentity-ext->3:IsValidNode 47858
            _30IsValidNode = IsValidNode(gizmo node);
            if (_30IsValidNode)
              {
                Matrix _31ObjectTransformBeforeWSM;// 2:NodeTMInLocalSpace-ext->3:ObjectTransformBeforeWSM 47862
                Matrix _32InvertMatrix;// 2:NodeTMInLocalSpace-ext->2:InvertMatrix 47863
                Matrix _33Multiply;// 2:NodeTMInLocalSpace-ext->4:Multiply 47861
                _31ObjectTransformBeforeWSM = ObjectTransformBeforeWSM(gizmo node);
                _32InvertMatrix = InvertMatrix(modifierTransform);
                _33Multiply = Multiply(_31ObjectTransformBeforeWSM, _32InvertMatrix);
                _33Multiply;
                }else
              {
                Matrix _34MatrixIdentity;// 4:NodeTransformInLocalSpaceOrIdentity-ext->5:MatrixIdentity 47864
                _34MatrixIdentity = MatrixIdentity();
                _34MatrixIdentity;
                };
            }else
          {
            Matrix _35MatrixIdentity;// 16:NodeTransformInLocalSpaceConditionally-ext->5:MatrixIdentity 47865
            _35MatrixIdentity = MatrixIdentity();
            _35MatrixIdentity;
            };
        _37InvertMatrix = InvertMatrix(_36Pass-through: Matrix);
        _38ParallelMap = ParallelMap(_1MeshVertices, (Vector3 x0) => 
          {
            Vector3 _0Transform;// 2:MeshDeformVertices-ext->11:Transform 47304
            Vector3 _1Apply1;// 2:MeshDeformVertices-ext->8:Apply1 47303
            Vector3 _2Transform;// 2:MeshDeformVertices-ext->9:Transform 47302
            _0Transform = Transform(x0, _37InvertMatrix);
            _1Apply1 = Apply1(_29Bind2of2, _0Transform);
            _2Transform = Transform(_1Apply1, _36Pass-through: Matrix);
            _2Transform;
            });
        _39Zero = Zero();
        _40PerVertexData = PerVertexData(mesh, _39Zero);
        _41Combine3 = Combine3(_0MeshVertices, _38ParallelMap, _40PerVertexData, (Vector3 x0, Vector3 x1, Single x2) => 
          {
            Vector3 _0Lerp;// 1:LerpVectors-ext->8:Lerp 47294
            _0Lerp = Lerp(x0, x1, x2);
            _0Lerp;
            });
        _42SetMeshVertices = SetMeshVertices(mesh, _41Combine3);
        _42SetMeshVertices;
        }, () => 
      {
        IArray[Vector3] _0MeshVertices;// 2:MeshDeformVertices-ext->4:MeshVertices 47301
        Int32 _1Constant;// 72:NoiseDeformerNoiseInit-ext->0:Constant 47741
        Int32 _2One;// 126:PlusOne->1:One 47739
        Int32 _3Add;// 126:PlusOne->0:Add 47738
        IArray[Int32] _4Range;// 72:NoiseDeformerNoiseInit-ext->93:Range 47736
        Int32 _5Constant;// 72:NoiseDeformerNoiseInit-ext->0:Constant 47763
        IArray[Int32] _6Range;// 72:NoiseDeformerNoiseInit-ext->105:Range 47762
        IArray[IArray[Single]] _7Map;// 72:NoiseDeformerNoiseInit-ext->94:Map 47735
        IArray[IArray[Single]] _8Concatenate;// 72:NoiseDeformerNoiseInit-ext->70:Concatenate 47733
        IArray[Int32] _9Indices;// 72:NoiseDeformerNoiseInit-ext->2:Indices 47787
        Int32 _10Add;// 72:NoiseDeformerNoiseInit-ext->21:Add 47790
        Int32 _11Two;// 72:NoiseDeformerNoiseInit-ext->24:Two 47793
        Int32 _12Add;// 72:NoiseDeformerNoiseInit-ext->22:Add 47789
        IArray[Int32] _13Range;// 72:NoiseDeformerNoiseInit-ext->25:Range 47788
        Int32 _14Count;// 3:LastIndex->2:Count 47819
        Int32 _15One;// 3:MinusOne->2:One 47818
        Int32 _16Subtract;// 3:MinusOne->1:Subtract 47817
        Int32 _17At;// 35:Last->0:At 47814
        IArray[Int32] _18Map;// 72:NoiseDeformerNoiseInit-ext->20:Map 47805
        IArray[Int32] _19Aggregate;// 72:NoiseDeformerNoiseInit-ext->1:Aggregate 47785
        Int32 _20Two;// 72:NoiseDeformerNoiseInit-ext->67:Two 47833
        Int32 _21Add;// 72:NoiseDeformerNoiseInit-ext->66:Add 47831
        IArray[Int32] _22Range;// 72:NoiseDeformerNoiseInit-ext->69:Range 47830
        IArray[Int32] _23Map;// 72:NoiseDeformerNoiseInit-ext->82:Map 47828
        IArray[Int32] _24Map;// 79:SelectByIndex->2:Map 47838
        IArray[Tuple[Int32, Int32]] _25Combine;// 86:ZipToTuple->0:Combine 47826
        IArray[Int32] _26SetValues;// 72:NoiseDeformerNoiseInit-ext->76:SetValues 47782
        Tuple[IArray[IArray[Single]], IArray[Int32]] _27Pair;// 72:NoiseDeformerNoiseInit-ext->87:Pair 47732
        Func[Vector3, Vector3] _28Bind2of2;// 0:NoiseMesh-ext->5:Bind2of2 47307
        Matrix _35Pass-through: Matrix;// 0:Pass-through: Matrix 47274
        Matrix _36InvertMatrix;// 2:MeshDeformVertices-ext->7:InvertMatrix 47306
        IArray[Vector3] _37ParallelMap;// 2:MeshDeformVertices-ext->5:ParallelMap 47300
        TriMesh _38SetMeshVertices;// 3:MeshSetVertices-ext->8:SetMeshVertices 47299
        _0MeshVertices = MeshVertices(mesh);
        _1Constant = 256;
        _2One = One();
        _3Add = Add(_1Constant, _2One);
        _4Range = Range(_3Add);
        _5Constant = 3;
        _6Range = Range(_5Constant);
        _7Map = Map(_4Range, (Int32 x0) => 
          {
            Func[Int32, Single] _0Bind1of2;// 72:NoiseDeformerNoiseInit-ext->116:Bind1of2 47764
            IArray[Single] _1Map;// 72:NoiseDeformerNoiseInit-ext->108:Map 47761
            Int32 _2Zero;// 118:ArrayToVector3->2:Zero 47756
            Single _3At;// 118:ArrayToVector3->1:At 47755
            Int32 _4One;// 118:ArrayToVector3->3:One 47758
            Single _5At;// 118:ArrayToVector3->5:At 47757
            Int32 _6Two;// 118:ArrayToVector3->4:Two 47760
            Single _7At;// 118:ArrayToVector3->6:At 47759
            Vector3 _8Vector3;// 118:ArrayToVector3->7:Vector3 47754
            Vector3 _9Normalize;// 72:NoiseDeformerNoiseInit-ext->120:Normalize 47752
            Single _10X;// 117:VectorToArray->1:X 47749
            IArray[Single] _11Unit;// 4:Array3->2:Unit 47748
            Single _12Y;// 117:VectorToArray->2:Y 47750
            IArray[Single] _13Append;// 4:Array3->3:Append 47747
            Single _14Z;// 117:VectorToArray->3:Z 47751
            IArray[Single] _15Append;// 4:Array3->6:Append 47746
            _0Bind1of2 = Bind1of2((Int32 x0, Int32 x1) => 
              {
                Int32 _0Count;// 72:NoiseDeformerNoiseInit-ext->114:Count 47777
                Int32 _1Multiply;// 72:NoiseDeformerNoiseInit-ext->115:Multiply 47776
                Int32 _2Add;// 72:NoiseDeformerNoiseInit-ext->113:Add 47774
                Int32 _3RandInt;// 72:NoiseDeformerNoiseInit-ext->97:RandInt 47772
                Single _4AsFloat;// 72:NoiseDeformerNoiseInit-ext->121:AsFloat 47771
                Single _5Abs;// 72:NoiseDeformerNoiseInit-ext->123:Abs 47770
                Int32 _6AsInt;// 72:NoiseDeformerNoiseInit-ext->122:AsInt 47769
                Int32 _7Add;// 72:NoiseDeformerNoiseInit-ext->99:Add 47779
                Int32 _8Modulo;// 72:NoiseDeformerNoiseInit-ext->98:Modulo 47768
                Int32 _9Subtract;// 72:NoiseDeformerNoiseInit-ext->104:Subtract 47767
                Single _10AsFloat;// 72:NoiseDeformerNoiseInit-ext->100:AsFloat 47766
                Single _11AsFloat;// 72:NoiseDeformerNoiseInit-ext->103:AsFloat 47781
                Single _12Divide;// 72:NoiseDeformerNoiseInit-ext->101:Divide 47765
                _0Count = Count(_4Range);
                _1Multiply = Multiply(_0Count, x1);
                _2Add = Add(x0, _1Multiply);
                _3RandInt = RandInt(seed, _2Add);
                _4AsFloat = AsFloat(_3RandInt);
                _5Abs = Abs(_4AsFloat);
                _6AsInt = AsInt(_5Abs);
                _7Add = Add(_1Constant, _1Constant);
                _8Modulo = Modulo(_6AsInt, _7Add);
                _9Subtract = Subtract(_8Modulo, _1Constant);
                _10AsFloat = AsFloat(_9Subtract);
                _11AsFloat = AsFloat(_1Constant);
                _12Divide = Divide(_10AsFloat, _11AsFloat);
                _12Divide;
                }, x0);
            _1Map = Map(_6Range, _0Bind1of2);
            _2Zero = Zero();
            _3At = At(_1Map, _2Zero);
            _4One = One();
            _5At = At(_1Map, _4One);
            _6Two = Two();
            _7At = At(_1Map, _6Two);
            _8Vector3 = Vector3(_3At, _5At, _7At);
            _9Normalize = Normalize(_8Vector3);
            _10X = X(_9Normalize);
            _11Unit = Unit(_10X);
            _12Y = Y(_9Normalize);
            _13Append = Append(_11Unit, _12Y);
            _14Z = Z(_9Normalize);
            _15Append = Append(_13Append, _14Z);
            _15Append;
            });
        _8Concatenate = Concatenate(_7Map, _7Map);
        _9Indices = Indices(_7Map);
        _10Add = Add(_1Constant, _1Constant);
        _11Two = Two();
        _12Add = Add(_10Add, _11Two);
        _13Range = Range(_12Add);
        _14Count = Count(_9Indices);
        _15One = One();
        _16Subtract = Subtract(_14Count, _15One);
        _17At = At(_9Indices, _16Subtract);
        _18Map = Map(_9Indices, (Int32 x0) => 
          {
            Int32 _0Add;// 72:NoiseDeformerNoiseInit-ext->36:Add 47812
            Int32 _1RandInt;// 72:NoiseDeformerNoiseInit-ext->34:RandInt 47810
            Single _2AsFloat;// 72:NoiseDeformerNoiseInit-ext->92:AsFloat 47809
            Single _3Abs;// 72:NoiseDeformerNoiseInit-ext->90:Abs 47808
            Int32 _4AsInt;// 72:NoiseDeformerNoiseInit-ext->91:AsInt 47807
            Int32 _5Modulo;// 72:NoiseDeformerNoiseInit-ext->40:Modulo 47806
            _0Add = Add(_17At, x0);
            _1RandInt = RandInt(seed, _0Add);
            _2AsFloat = AsFloat(_1RandInt);
            _3Abs = Abs(_2AsFloat);
            _4AsInt = AsInt(_3Abs);
            _5Modulo = Modulo(_4AsInt, _1Constant);
            _5Modulo;
            });
        _19Aggregate = Aggregate(_9Indices, _13Range, (IArray[Int32] x0, Int32 x1) => 
          {
            Int32 _0At;// 72:NoiseDeformerNoiseInit-ext->52:At 47803
            Int32 _1At;// 72:NoiseDeformerNoiseInit-ext->60:At 47802
            Tuple[Int32, Int32] _2Pair;// 72:NoiseDeformerNoiseInit-ext->57:Pair 47800
            IArray[Tuple[Int32, Int32]] _3Unit;// 59:Array2->2:Unit 47799
            Int32 _4At;// 72:NoiseDeformerNoiseInit-ext->30:At 47823
            Tuple[Int32, Int32] _5Pair;// 72:NoiseDeformerNoiseInit-ext->55:Pair 47822
            IArray[Tuple[Int32, Int32]] _6Append;// 59:Array2->3:Append 47798
            IArray[Int32] _7SetValues;// 72:NoiseDeformerNoiseInit-ext->54:SetValues 47794
            _0At = At(_18Map, x1);
            _1At = At(x0, _0At);
            _2Pair = Pair(x1, _1At);
            _3Unit = Unit(_2Pair);
            _4At = At(x0, x1);
            _5Pair = Pair(_0At, _4At);
            _6Append = Append(_3Unit, _5Pair);
            _7SetValues = SetValues(x0, _6Append);
            _7SetValues;
            });
        _20Two = Two();
        _21Add = Add(_1Constant, _20Two);
        _22Range = Range(_21Add);
        _23Map = Map(_22Range, (Int32 x0) => 
          {
            Int32 _0Add;// 72:NoiseDeformerNoiseInit-ext->83:Add 47834
            _0Add = Add(x0, _1Constant);
            _0Add;
            });
        _24Map = Map(_22Range, (Int32 x0) => 
          {
            Int32 _0At;// 79:SelectByIndex->3:At 47839
            _0At = At(_19Aggregate, x0);
            _0At;
            });
        _25Combine = Combine(_23Map, _24Map, (Int32 x0, Int32 x1) => 
          {
            Tuple[Int32, Int32] _0Pair;// 86:ZipToTuple->4:Pair 47827
            _0Pair = Pair(x0, x1);
            _0Pair;
            });
        _26SetValues = SetValues(_19Aggregate, _25Combine);
        _27Pair = Pair(_8Concatenate, _26SetValues);
        _28Bind2of2 = Bind2of2((Vector3 x0, Tuple[IArray[IArray[Single]], IArray[Int32]] x1) => 
          {
            Single _0FloatOne;// 0:NoiseDeformer-ext->40:FloatOne 47723
            Single _1Divide;// 0:NoiseDeformer-ext->41:Divide 47722
            Vector3 _2MultiplyByScalar;// 0:NoiseDeformer-ext->16:MultiplyByScalar 47720
            Vector3 _3Constant;// 0:NoiseDeformer-ext->0:Constant 47724
            Vector3 _4Add;// 0:NoiseDeformer-ext->18:Add 47719
            Single _5Y;// 0:NoiseDeformer-ext->6:Y 47717
            Single _6Z;// 0:NoiseDeformer-ext->7:Z 47725
            Single _7Apply2;// 0:NoiseDeformer-ext->4:Apply2 47320
            Single _8X;// 0:NoiseDeformer-ext->5:X 47728
            Single _9Apply2;// 0:NoiseDeformer-ext->2:Apply2 47727
            Single _10Apply2;// 0:NoiseDeformer-ext->15:Apply2 47730
            Vector3 _11Vector3;// 0:NoiseDeformer-ext->14:Vector3 47318
            Vector3 _12Vector3;// 13:Vector3 47846
            Vector3 _13Multiply;// 0:NoiseDeformer-ext->22:Multiply 47317
            Vector3 _14Add;// 0:NoiseDeformer-ext->25:Add 47316
            _0FloatOne = FloatOne();
            _1Divide = Divide(_0FloatOne, scale);
            _2MultiplyByScalar = MultiplyByScalar(x0, _1Divide);
            _3Constant = new Microsoft.Xna.Framework.Vector3(0.5, 0.5, 0.5);
            _4Add = Add(_2MultiplyByScalar, _3Constant);
            _5Y = Y(_4Add);
            _6Z = Z(_4Add);
            _7Apply2 = Apply2((Single x0, Single x1) => 
              {
                Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 47341
                IArray[Single] _1Unit;// 37:Array2->2:Unit 47340
                Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 47342
                IArray[Single] _3Append;// 37:Array2->3:Append 47339
                Single _4AsFloat;// 0:NoiseDeformer-ext->13:AsFloat 47702
                Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 47343
                Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 47357
                Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 47358
                Single _8Constant;// 0:NoiseDeformer-ext->0:Constant 47703
                IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 47356
                Single _10FloatOne;// 0:NoiseDeformer-ext->46:FloatOne 47705
                Single _11Subtract;// 0:NoiseDeformer-ext->3:Subtract 47704
                Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 47365
                IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 47355
                Single _14AsFloat;// 0:NoiseDeformer-ext->43:AsFloat 47710
                Single _15Constant;// 0:NoiseDeformer-ext->0:Constant 47713
                Single _16Multiply;// 0:NoiseDeformer-ext->30:Multiply 47712
                Single _17Constant;// 0:NoiseDeformer-ext->0:Constant 47715
                Single _18Constant;// 0:NoiseDeformer-ext->0:Constant 47716
                Single _19Divide;// 0:NoiseDeformer-ext->31:Divide 47714
                Single _20Multiply;// 0:NoiseDeformer-ext->39:Multiply 47711
                Single _21Multiply;// 0:NoiseDeformer-ext->38:Multiply 47709
                Vector3 _22Vector3;// 0:NoiseDeformer-ext->0:Vector3 47706
                IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 47690
                IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 47694
                Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 47701
                IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 47336
                Int32 _27Count;// 3:LastIndex->2:Count 47335
                Int32 _28One;// 3:MinusOne->2:One 47334
                Int32 _29Subtract;// 3:MinusOne->1:Subtract 47333
                IArray[Single] _30At;// 68:Last->0:At 47330
                Int32 _31Zero;// 69:First->2:Zero 47328
                Single _32At;// 69:First->0:At 47327
                _0FloatZero = FloatZero();
                _1Unit = Unit(_0FloatZero);
                _2FloatZero = FloatZero();
                _3Append = Append(_1Unit, _2FloatZero);
                _4AsFloat = AsFloat(numIterations);
                _5AsInt = AsInt(_4AsFloat);
                _6FloatOne = FloatOne();
                _7AsInt = AsInt(_4AsFloat);
                _8Constant = 2;
                _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
                  {
                    Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 47360
                    _0Multiply = Multiply(_8Constant, x0);
                    _0Multiply;
                    });
                _10FloatOne = FloatOne();
                _11Subtract = Subtract(_10FloatOne, roughness);
                _12NegativeFloat = NegativeFloat(_11Subtract);
                _13Map = Map(_9GenerateN, (Single x0) => 
                  {
                    Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 47363
                    _0Pow = Pow(x0, _12NegativeFloat);
                    _0Pow;
                    });
                _14AsFloat = AsFloat(phase);
                _15Constant = 0.005;
                _16Multiply = Multiply(frequency, _15Constant);
                _17Constant = 1200;
                _18Constant = 4800;
                _19Divide = Divide(_17Constant, _18Constant);
                _20Multiply = Multiply(_16Multiply, _19Divide);
                _21Multiply = Multiply(_14AsFloat, _20Multiply);
                _22Vector3 = Vector3(x0, x1, _21Multiply);
                _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
                  {
                    Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 47692
                    _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                    _0MultiplyByScalar;
                    });
                _24PairItem1 = PairItem1(x1);
                _25FloatOne = FloatOne();
                _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
                  {
                    Int32 _0One;// 49:Second->2:One 47370
                    Single _1At;// 49:Second->0:At 47369
                    Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 47367
                    Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 47353
                    Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 47408
                    Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 47688
                    Single _6X;// 2:VectorAsArray->1:X 47419
                    IArray[Single] _7Unit;// 4:Array3->2:Unit 47418
                    Single _8Y;// 2:VectorAsArray->2:Y 47420
                    IArray[Single] _9Append;// 4:Array3->3:Append 47417
                    Single _10Z;// 2:VectorAsArray->3:Z 47421
                    IArray[Single] _11Append;// 4:Array3->6:Append 47416
                    Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 47434
                    Single _13At;// 1:VectorComponent-ext->3:At 47411
                    Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 47407
                    Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 47406
                    Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 47422
                    Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 47405
                    Int32 _18One;// 13:PlusOne->1:One 47426
                    Int32 _19Add;// 13:PlusOne->0:Add 47425
                    Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 47423
                    Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 47404
                    Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 47431
                    Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47430
                    Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47428
                    Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47433
                    Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47432
                    Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 47427
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 47403
                    Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 47400
                    Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 47399
                    IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 47695
                    Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 47445
                    Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 47444
                    Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 47443
                    Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 47455
                    Single _36X;// 2:VectorAsArray->1:X 47466
                    IArray[Single] _37Unit;// 4:Array3->2:Unit 47465
                    Single _38Y;// 2:VectorAsArray->2:Y 47467
                    IArray[Single] _39Append;// 4:Array3->3:Append 47464
                    Single _40Z;// 2:VectorAsArray->3:Z 47468
                    IArray[Single] _41Append;// 4:Array3->6:Append 47463
                    Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 47481
                    Single _43At;// 1:VectorComponent-ext->3:At 47458
                    Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 47454
                    Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 47453
                    Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 47469
                    Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 47452
                    Int32 _48One;// 13:PlusOne->1:One 47473
                    Int32 _49Add;// 13:PlusOne->0:Add 47472
                    Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 47470
                    Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 47451
                    Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 47478
                    Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47477
                    Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47475
                    Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47480
                    Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47479
                    Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 47474
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 47450
                    Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 47447
                    Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 47446
                    Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 47441
                    Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 47439
                    Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 47491
                    Single _64X;// 2:VectorAsArray->1:X 47502
                    IArray[Single] _65Unit;// 4:Array3->2:Unit 47501
                    Single _66Y;// 2:VectorAsArray->2:Y 47503
                    IArray[Single] _67Append;// 4:Array3->3:Append 47500
                    Single _68Z;// 2:VectorAsArray->3:Z 47504
                    IArray[Single] _69Append;// 4:Array3->6:Append 47499
                    Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 47517
                    Single _71At;// 1:VectorComponent-ext->3:At 47494
                    Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 47490
                    Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 47489
                    Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 47505
                    Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 47488
                    Int32 _76One;// 13:PlusOne->1:One 47509
                    Int32 _77Add;// 13:PlusOne->0:Add 47508
                    Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 47506
                    Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 47487
                    Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 47514
                    Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47513
                    Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47511
                    Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47516
                    Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47515
                    Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 47510
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 47486
                    Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 47483
                    Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 47482
                    Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 47437
                    IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 47435
                    Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 47392
                    Single _92At;// 62:NoiseDeformerAt3-ext->4:At 47391
                    Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 47390
                    Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 47519
                    Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 47518
                    Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 47395
                    Single _97At;// 62:NoiseDeformerAt3-ext->7:At 47394
                    Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 47393
                    Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 47389
                    Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 47521
                    Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 47520
                    Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 47398
                    Single _103At;// 62:NoiseDeformerAt3-ext->10:At 47397
                    Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 47396
                    Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 47388
                    Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 47537
                    Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 47545
                    Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 47544
                    Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 47542
                    Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 47541
                    Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 47539
                    IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 47538
                    Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 47530
                    Single _114At;// 66:NoiseDeformerAt3-ext->4:At 47529
                    Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 47528
                    Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 47533
                    Single _117At;// 66:NoiseDeformerAt3-ext->7:At 47532
                    Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 47531
                    Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 47527
                    Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 47536
                    Single _121At;// 66:NoiseDeformerAt3-ext->10:At 47535
                    Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 47534
                    Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 47526
                    Single _124Constant;// 42:NoiseDeformerSCurve->0:Constant 47549
                    Single _125Constant;// 42:NoiseDeformerSCurve->0:Constant 47551
                    Single _126Multiply;// 42:NoiseDeformerSCurve->41:Multiply 47550
                    Single _127Subtract;// 42:NoiseDeformerSCurve->39:Subtract 47548
                    Single _128Multiply;// 42:NoiseDeformerSCurve->35:Multiply 47553
                    Single _129Multiply;// 42:NoiseDeformerSCurve->37:Multiply 47547
                    Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 47383
                    Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 47575
                    Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 47574
                    Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 47573
                    Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 47571
                    IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 47570
                    Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 47563
                    Single _137At;// 72:NoiseDeformerAt3-ext->4:At 47562
                    Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 47561
                    Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 47576
                    Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 47566
                    Single _141At;// 72:NoiseDeformerAt3-ext->7:At 47565
                    Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 47564
                    Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 47560
                    Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 47569
                    Single _145At;// 72:NoiseDeformerAt3-ext->10:At 47568
                    Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 47567
                    Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 47559
                    Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 47596
                    Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 47595
                    Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 47593
                    IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 47592
                    Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 47585
                    Single _153At;// 75:NoiseDeformerAt3-ext->4:At 47584
                    Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 47583
                    Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 47588
                    Single _156At;// 75:NoiseDeformerAt3-ext->7:At 47587
                    Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 47586
                    Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 47582
                    Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 47591
                    Single _160At;// 75:NoiseDeformerAt3-ext->10:At 47590
                    Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 47589
                    Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 47581
                    Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 47554
                    Single _164Constant;// 56:NoiseDeformerSCurve->0:Constant 47600
                    Single _165Constant;// 56:NoiseDeformerSCurve->0:Constant 47602
                    Single _166Multiply;// 56:NoiseDeformerSCurve->41:Multiply 47601
                    Single _167Subtract;// 56:NoiseDeformerSCurve->39:Subtract 47599
                    Single _168Multiply;// 56:NoiseDeformerSCurve->35:Multiply 47604
                    Single _169Multiply;// 56:NoiseDeformerSCurve->37:Multiply 47598
                    Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 47382
                    Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 47624
                    Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 47623
                    IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 47622
                    Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 47615
                    Single _175At;// 82:NoiseDeformerAt3-ext->4:At 47614
                    Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 47613
                    Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 47618
                    Single _178At;// 82:NoiseDeformerAt3-ext->7:At 47617
                    Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 47616
                    Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 47612
                    Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 47625
                    Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 47621
                    Single _183At;// 82:NoiseDeformerAt3-ext->10:At 47620
                    Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 47619
                    Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 47611
                    Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 47642
                    IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 47641
                    Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 47634
                    Single _189At;// 86:NoiseDeformerAt3-ext->4:At 47633
                    Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 47632
                    Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 47637
                    Single _192At;// 86:NoiseDeformerAt3-ext->7:At 47636
                    Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 47635
                    Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 47631
                    Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 47640
                    Single _196At;// 86:NoiseDeformerAt3-ext->10:At 47639
                    Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 47638
                    Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 47630
                    Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 47606
                    Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 47660
                    IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 47659
                    Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 47652
                    Single _203At;// 92:NoiseDeformerAt3-ext->4:At 47651
                    Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 47650
                    Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 47655
                    Single _206At;// 92:NoiseDeformerAt3-ext->7:At 47654
                    Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 47653
                    Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 47649
                    Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 47658
                    Single _210At;// 92:NoiseDeformerAt3-ext->10:At 47657
                    Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 47656
                    Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 47648
                    Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 47677
                    IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 47676
                    Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 47669
                    Single _216At;// 96:NoiseDeformerAt3-ext->4:At 47668
                    Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 47667
                    Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 47672
                    Single _219At;// 96:NoiseDeformerAt3-ext->7:At 47671
                    Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 47670
                    Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 47666
                    Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 47675
                    Single _223At;// 96:NoiseDeformerAt3-ext->10:At 47674
                    Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 47673
                    Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 47665
                    Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 47643
                    Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 47605
                    Single _228Constant;// 58:NoiseDeformerSCurve->0:Constant 47681
                    Single _229Constant;// 58:NoiseDeformerSCurve->0:Constant 47683
                    Single _230Multiply;// 58:NoiseDeformerSCurve->41:Multiply 47682
                    Single _231Subtract;// 58:NoiseDeformerSCurve->39:Subtract 47680
                    Single _232Multiply;// 58:NoiseDeformerSCurve->35:Multiply 47685
                    Single _233Multiply;// 58:NoiseDeformerSCurve->37:Multiply 47679
                    Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 47381
                    Single _235NaN;// 118:FloatIsNaN->1:NaN 47379
                    Int32 _236Compare;// 118:FloatIsNaN->2:Compare 47378
                    Int32 _237Zero;// 118:FloatIsNaN->4:Zero 47380
                    Boolean _238Equal;// 118:FloatIsNaN->3:Equal 47377
                    Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 47351
                    Int32 _241Zero;// 48:First->2:Zero 47698
                    Single _242At;// 48:First->0:At 47697
                    Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 47350
                    IArray[Single] _244Unit;// 43:Array2->2:Unit 47348
                    Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 47700
                    IArray[Single] _246Append;// 43:Array2->3:Append 47347
                    _0One = One();
                    _1At = At(x0, _0One);
                    _2AsInt = AsInt(_1At);
                    _3At = At(_13Map, _2AsInt);
                    _4Constant = 4096;
                    _5At = At(_23GenerateN, _2AsInt);
                    _6X = X(_5At);
                    _7Unit = Unit(_6X);
                    _8Y = Y(_5At);
                    _9Append = Append(_7Unit, _8Y);
                    _10Z = Z(_5At);
                    _11Append = Append(_9Append, _10Z);
                    _12Zero = Zero();
                    _13At = At(_11Append, _12Zero);
                    _14Add = Add(_4Constant, _13At);
                    _15Floor = Floor(_14Add);
                    _16Constant = 255;
                    _17And = And(_15Floor, _16Constant);
                    _18One = One();
                    _19Add = Add(_17And, _18One);
                    _20And = And(_19Add, _16Constant);
                    _21Pair = Pair(_17And, _20And);
                    _22Floor = Floor(_14Add);
                    _23AsFloat = AsFloat(_22Floor);
                    _24Subtract = Subtract(_14Add, _23AsFloat);
                    _25FloatOne = FloatOne();
                    _26Subtract = Subtract(_24Subtract, _25FloatOne);
                    _27Pair = Pair(_24Subtract, _26Subtract);
                    _28Pair = Pair(_21Pair, _27Pair);
                    _29PairItem2 = PairItem2(_28Pair);
                    _30PairItem1 = PairItem1(_29PairItem2);
                    _31PairItem2 = PairItem2(x1);
                    _32PairItem1 = PairItem1(_28Pair);
                    _33PairItem1 = PairItem1(_32PairItem1);
                    _34At = At(_31PairItem2, _33PairItem1);
                    _35Constant = 4096;
                    _36X = X(_5At);
                    _37Unit = Unit(_36X);
                    _38Y = Y(_5At);
                    _39Append = Append(_37Unit, _38Y);
                    _40Z = Z(_5At);
                    _41Append = Append(_39Append, _40Z);
                    _42One = One();
                    _43At = At(_41Append, _42One);
                    _44Add = Add(_35Constant, _43At);
                    _45Floor = Floor(_44Add);
                    _46Constant = 255;
                    _47And = And(_45Floor, _46Constant);
                    _48One = One();
                    _49Add = Add(_47And, _48One);
                    _50And = And(_49Add, _46Constant);
                    _51Pair = Pair(_47And, _50And);
                    _52Floor = Floor(_44Add);
                    _53AsFloat = AsFloat(_52Floor);
                    _54Subtract = Subtract(_44Add, _53AsFloat);
                    _55FloatOne = FloatOne();
                    _56Subtract = Subtract(_54Subtract, _55FloatOne);
                    _57Pair = Pair(_54Subtract, _56Subtract);
                    _58Pair = Pair(_51Pair, _57Pair);
                    _59PairItem1 = PairItem1(_58Pair);
                    _60PairItem1 = PairItem1(_59PairItem1);
                    _61Add = Add(_34At, _60PairItem1);
                    _62At = At(_31PairItem2, _61Add);
                    _63Constant = 4096;
                    _64X = X(_5At);
                    _65Unit = Unit(_64X);
                    _66Y = Y(_5At);
                    _67Append = Append(_65Unit, _66Y);
                    _68Z = Z(_5At);
                    _69Append = Append(_67Append, _68Z);
                    _70Two = Two();
                    _71At = At(_69Append, _70Two);
                    _72Add = Add(_63Constant, _71At);
                    _73Floor = Floor(_72Add);
                    _74Constant = 255;
                    _75And = And(_73Floor, _74Constant);
                    _76One = One();
                    _77Add = Add(_75And, _76One);
                    _78And = And(_77Add, _74Constant);
                    _79Pair = Pair(_75And, _78And);
                    _80Floor = Floor(_72Add);
                    _81AsFloat = AsFloat(_80Floor);
                    _82Subtract = Subtract(_72Add, _81AsFloat);
                    _83FloatOne = FloatOne();
                    _84Subtract = Subtract(_82Subtract, _83FloatOne);
                    _85Pair = Pair(_82Subtract, _84Subtract);
                    _86Pair = Pair(_79Pair, _85Pair);
                    _87PairItem1 = PairItem1(_86Pair);
                    _88PairItem1 = PairItem1(_87PairItem1);
                    _89Add = Add(_62At, _88PairItem1);
                    _90At = At(_24PairItem1, _89Add);
                    _91Zero = Zero();
                    _92At = At(_90At, _91Zero);
                    _93Multiply = Multiply(_30PairItem1, _92At);
                    _94PairItem2 = PairItem2(_58Pair);
                    _95PairItem1 = PairItem1(_94PairItem2);
                    _96One = One();
                    _97At = At(_90At, _96One);
                    _98Multiply = Multiply(_95PairItem1, _97At);
                    _99Add = Add(_93Multiply, _98Multiply);
                    _100PairItem2 = PairItem2(_86Pair);
                    _101PairItem1 = PairItem1(_100PairItem2);
                    _102Two = Two();
                    _103At = At(_90At, _102Two);
                    _104Multiply = Multiply(_101PairItem1, _103At);
                    _105Add = Add(_99Add, _104Multiply);
                    _106PairItem2 = PairItem2(_29PairItem2);
                    _107PairItem2 = PairItem2(_32PairItem1);
                    _108At = At(_31PairItem2, _107PairItem2);
                    _109Add = Add(_108At, _60PairItem1);
                    _110At = At(_31PairItem2, _109Add);
                    _111Add = Add(_110At, _88PairItem1);
                    _112At = At(_24PairItem1, _111Add);
                    _113Zero = Zero();
                    _114At = At(_112At, _113Zero);
                    _115Multiply = Multiply(_106PairItem2, _114At);
                    _116One = One();
                    _117At = At(_112At, _116One);
                    _118Multiply = Multiply(_95PairItem1, _117At);
                    _119Add = Add(_115Multiply, _118Multiply);
                    _120Two = Two();
                    _121At = At(_112At, _120Two);
                    _122Multiply = Multiply(_101PairItem1, _121At);
                    _123Add = Add(_119Add, _122Multiply);
                    _124Constant = 3;
                    _125Constant = 2;
                    _126Multiply = Multiply(_125Constant, _30PairItem1);
                    _127Subtract = Subtract(_124Constant, _126Multiply);
                    _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                    _129Multiply = Multiply(_127Subtract, _128Multiply);
                    _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                    _131PairItem2 = PairItem2(_59PairItem1);
                    _132Add = Add(_34At, _131PairItem2);
                    _133At = At(_31PairItem2, _132Add);
                    _134Add = Add(_133At, _88PairItem1);
                    _135At = At(_24PairItem1, _134Add);
                    _136Zero = Zero();
                    _137At = At(_135At, _136Zero);
                    _138Multiply = Multiply(_30PairItem1, _137At);
                    _139PairItem2 = PairItem2(_94PairItem2);
                    _140One = One();
                    _141At = At(_135At, _140One);
                    _142Multiply = Multiply(_139PairItem2, _141At);
                    _143Add = Add(_138Multiply, _142Multiply);
                    _144Two = Two();
                    _145At = At(_135At, _144Two);
                    _146Multiply = Multiply(_101PairItem1, _145At);
                    _147Add = Add(_143Add, _146Multiply);
                    _148Add = Add(_108At, _131PairItem2);
                    _149At = At(_31PairItem2, _148Add);
                    _150Add = Add(_149At, _88PairItem1);
                    _151At = At(_24PairItem1, _150Add);
                    _152Zero = Zero();
                    _153At = At(_151At, _152Zero);
                    _154Multiply = Multiply(_106PairItem2, _153At);
                    _155One = One();
                    _156At = At(_151At, _155One);
                    _157Multiply = Multiply(_139PairItem2, _156At);
                    _158Add = Add(_154Multiply, _157Multiply);
                    _159Two = Two();
                    _160At = At(_151At, _159Two);
                    _161Multiply = Multiply(_101PairItem1, _160At);
                    _162Add = Add(_158Add, _161Multiply);
                    _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                    _164Constant = 3;
                    _165Constant = 2;
                    _166Multiply = Multiply(_165Constant, _95PairItem1);
                    _167Subtract = Subtract(_164Constant, _166Multiply);
                    _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                    _169Multiply = Multiply(_167Subtract, _168Multiply);
                    _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                    _171PairItem2 = PairItem2(_87PairItem1);
                    _172Add = Add(_62At, _171PairItem2);
                    _173At = At(_24PairItem1, _172Add);
                    _174Zero = Zero();
                    _175At = At(_173At, _174Zero);
                    _176Multiply = Multiply(_30PairItem1, _175At);
                    _177One = One();
                    _178At = At(_173At, _177One);
                    _179Multiply = Multiply(_95PairItem1, _178At);
                    _180Add = Add(_176Multiply, _179Multiply);
                    _181PairItem2 = PairItem2(_100PairItem2);
                    _182Two = Two();
                    _183At = At(_173At, _182Two);
                    _184Multiply = Multiply(_181PairItem2, _183At);
                    _185Add = Add(_180Add, _184Multiply);
                    _186Add = Add(_110At, _171PairItem2);
                    _187At = At(_24PairItem1, _186Add);
                    _188Zero = Zero();
                    _189At = At(_187At, _188Zero);
                    _190Multiply = Multiply(_106PairItem2, _189At);
                    _191One = One();
                    _192At = At(_187At, _191One);
                    _193Multiply = Multiply(_95PairItem1, _192At);
                    _194Add = Add(_190Multiply, _193Multiply);
                    _195Two = Two();
                    _196At = At(_187At, _195Two);
                    _197Multiply = Multiply(_181PairItem2, _196At);
                    _198Add = Add(_194Add, _197Multiply);
                    _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                    _200Add = Add(_133At, _171PairItem2);
                    _201At = At(_24PairItem1, _200Add);
                    _202Zero = Zero();
                    _203At = At(_201At, _202Zero);
                    _204Multiply = Multiply(_30PairItem1, _203At);
                    _205One = One();
                    _206At = At(_201At, _205One);
                    _207Multiply = Multiply(_139PairItem2, _206At);
                    _208Add = Add(_204Multiply, _207Multiply);
                    _209Two = Two();
                    _210At = At(_201At, _209Two);
                    _211Multiply = Multiply(_181PairItem2, _210At);
                    _212Add = Add(_208Add, _211Multiply);
                    _213Add = Add(_149At, _171PairItem2);
                    _214At = At(_24PairItem1, _213Add);
                    _215Zero = Zero();
                    _216At = At(_214At, _215Zero);
                    _217Multiply = Multiply(_106PairItem2, _216At);
                    _218One = One();
                    _219At = At(_214At, _218One);
                    _220Multiply = Multiply(_139PairItem2, _219At);
                    _221Add = Add(_217Multiply, _220Multiply);
                    _222Two = Two();
                    _223At = At(_214At, _222Two);
                    _224Multiply = Multiply(_181PairItem2, _223At);
                    _225Add = Add(_221Add, _224Multiply);
                    _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                    _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                    _228Constant = 3;
                    _229Constant = 2;
                    _230Multiply = Multiply(_229Constant, _101PairItem1);
                    _231Subtract = Subtract(_228Constant, _230Multiply);
                    _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                    _233Multiply = Multiply(_231Subtract, _232Multiply);
                    _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                    _235NaN = NaN();
                    _236Compare = Compare(_234FloatLerp, _235NaN);
                    _237Zero = Zero();
                    _238Equal = Equal(_236Compare, _237Zero);
                    _240Multiply = Multiply(_3At, if (_238Equal)
                        {
                          Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 47686
                          _239FloatZero = FloatZero();
                          _239FloatZero;
                          }else
                        {
                          _234FloatLerp;
                          });
                    _241Zero = Zero();
                    _242At = At(x0, _241Zero);
                    _243Add = Add(_240Multiply, _242At);
                    _244Unit = Unit(_243Add);
                    _245Add = Add(_1At, _25FloatOne);
                    _246Append = Append(_244Unit, _245Add);
                    _246Append;
                    });
                _27Count = Count(_26GenerateN);
                _28One = One();
                _29Subtract = Subtract(_27Count, _28One);
                _30At = At(_26GenerateN, _29Subtract);
                _31Zero = Zero();
                _32At = At(_30At, _31Zero);
                _32At;
                }, _5Y, _6Z);
            _8X = X(_4Add);
            _9Apply2 = Apply2((Single x0, Single x1) => 
              {
                Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 47341
                IArray[Single] _1Unit;// 37:Array2->2:Unit 47340
                Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 47342
                IArray[Single] _3Append;// 37:Array2->3:Append 47339
                Single _4AsFloat;// 0:NoiseDeformer-ext->13:AsFloat 47702
                Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 47343
                Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 47357
                Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 47358
                Single _8Constant;// 0:NoiseDeformer-ext->0:Constant 47703
                IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 47356
                Single _10FloatOne;// 0:NoiseDeformer-ext->46:FloatOne 47705
                Single _11Subtract;// 0:NoiseDeformer-ext->3:Subtract 47704
                Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 47365
                IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 47355
                Single _14AsFloat;// 0:NoiseDeformer-ext->43:AsFloat 47710
                Single _15Constant;// 0:NoiseDeformer-ext->0:Constant 47713
                Single _16Multiply;// 0:NoiseDeformer-ext->30:Multiply 47712
                Single _17Constant;// 0:NoiseDeformer-ext->0:Constant 47715
                Single _18Constant;// 0:NoiseDeformer-ext->0:Constant 47716
                Single _19Divide;// 0:NoiseDeformer-ext->31:Divide 47714
                Single _20Multiply;// 0:NoiseDeformer-ext->39:Multiply 47711
                Single _21Multiply;// 0:NoiseDeformer-ext->38:Multiply 47709
                Vector3 _22Vector3;// 0:NoiseDeformer-ext->0:Vector3 47706
                IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 47690
                IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 47694
                Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 47701
                IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 47336
                Int32 _27Count;// 3:LastIndex->2:Count 47335
                Int32 _28One;// 3:MinusOne->2:One 47334
                Int32 _29Subtract;// 3:MinusOne->1:Subtract 47333
                IArray[Single] _30At;// 68:Last->0:At 47330
                Int32 _31Zero;// 69:First->2:Zero 47328
                Single _32At;// 69:First->0:At 47327
                _0FloatZero = FloatZero();
                _1Unit = Unit(_0FloatZero);
                _2FloatZero = FloatZero();
                _3Append = Append(_1Unit, _2FloatZero);
                _4AsFloat = AsFloat(numIterations);
                _5AsInt = AsInt(_4AsFloat);
                _6FloatOne = FloatOne();
                _7AsInt = AsInt(_4AsFloat);
                _8Constant = 2;
                _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
                  {
                    Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 47360
                    _0Multiply = Multiply(_8Constant, x0);
                    _0Multiply;
                    });
                _10FloatOne = FloatOne();
                _11Subtract = Subtract(_10FloatOne, roughness);
                _12NegativeFloat = NegativeFloat(_11Subtract);
                _13Map = Map(_9GenerateN, (Single x0) => 
                  {
                    Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 47363
                    _0Pow = Pow(x0, _12NegativeFloat);
                    _0Pow;
                    });
                _14AsFloat = AsFloat(phase);
                _15Constant = 0.005;
                _16Multiply = Multiply(frequency, _15Constant);
                _17Constant = 1200;
                _18Constant = 4800;
                _19Divide = Divide(_17Constant, _18Constant);
                _20Multiply = Multiply(_16Multiply, _19Divide);
                _21Multiply = Multiply(_14AsFloat, _20Multiply);
                _22Vector3 = Vector3(x0, x1, _21Multiply);
                _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
                  {
                    Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 47692
                    _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                    _0MultiplyByScalar;
                    });
                _24PairItem1 = PairItem1(x1);
                _25FloatOne = FloatOne();
                _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
                  {
                    Int32 _0One;// 49:Second->2:One 47370
                    Single _1At;// 49:Second->0:At 47369
                    Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 47367
                    Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 47353
                    Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 47408
                    Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 47688
                    Single _6X;// 2:VectorAsArray->1:X 47419
                    IArray[Single] _7Unit;// 4:Array3->2:Unit 47418
                    Single _8Y;// 2:VectorAsArray->2:Y 47420
                    IArray[Single] _9Append;// 4:Array3->3:Append 47417
                    Single _10Z;// 2:VectorAsArray->3:Z 47421
                    IArray[Single] _11Append;// 4:Array3->6:Append 47416
                    Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 47434
                    Single _13At;// 1:VectorComponent-ext->3:At 47411
                    Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 47407
                    Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 47406
                    Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 47422
                    Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 47405
                    Int32 _18One;// 13:PlusOne->1:One 47426
                    Int32 _19Add;// 13:PlusOne->0:Add 47425
                    Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 47423
                    Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 47404
                    Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 47431
                    Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47430
                    Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47428
                    Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47433
                    Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47432
                    Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 47427
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 47403
                    Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 47400
                    Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 47399
                    IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 47695
                    Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 47445
                    Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 47444
                    Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 47443
                    Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 47455
                    Single _36X;// 2:VectorAsArray->1:X 47466
                    IArray[Single] _37Unit;// 4:Array3->2:Unit 47465
                    Single _38Y;// 2:VectorAsArray->2:Y 47467
                    IArray[Single] _39Append;// 4:Array3->3:Append 47464
                    Single _40Z;// 2:VectorAsArray->3:Z 47468
                    IArray[Single] _41Append;// 4:Array3->6:Append 47463
                    Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 47481
                    Single _43At;// 1:VectorComponent-ext->3:At 47458
                    Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 47454
                    Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 47453
                    Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 47469
                    Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 47452
                    Int32 _48One;// 13:PlusOne->1:One 47473
                    Int32 _49Add;// 13:PlusOne->0:Add 47472
                    Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 47470
                    Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 47451
                    Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 47478
                    Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47477
                    Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47475
                    Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47480
                    Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47479
                    Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 47474
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 47450
                    Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 47447
                    Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 47446
                    Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 47441
                    Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 47439
                    Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 47491
                    Single _64X;// 2:VectorAsArray->1:X 47502
                    IArray[Single] _65Unit;// 4:Array3->2:Unit 47501
                    Single _66Y;// 2:VectorAsArray->2:Y 47503
                    IArray[Single] _67Append;// 4:Array3->3:Append 47500
                    Single _68Z;// 2:VectorAsArray->3:Z 47504
                    IArray[Single] _69Append;// 4:Array3->6:Append 47499
                    Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 47517
                    Single _71At;// 1:VectorComponent-ext->3:At 47494
                    Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 47490
                    Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 47489
                    Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 47505
                    Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 47488
                    Int32 _76One;// 13:PlusOne->1:One 47509
                    Int32 _77Add;// 13:PlusOne->0:Add 47508
                    Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 47506
                    Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 47487
                    Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 47514
                    Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47513
                    Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47511
                    Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47516
                    Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47515
                    Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 47510
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 47486
                    Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 47483
                    Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 47482
                    Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 47437
                    IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 47435
                    Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 47392
                    Single _92At;// 62:NoiseDeformerAt3-ext->4:At 47391
                    Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 47390
                    Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 47519
                    Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 47518
                    Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 47395
                    Single _97At;// 62:NoiseDeformerAt3-ext->7:At 47394
                    Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 47393
                    Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 47389
                    Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 47521
                    Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 47520
                    Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 47398
                    Single _103At;// 62:NoiseDeformerAt3-ext->10:At 47397
                    Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 47396
                    Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 47388
                    Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 47537
                    Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 47545
                    Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 47544
                    Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 47542
                    Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 47541
                    Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 47539
                    IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 47538
                    Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 47530
                    Single _114At;// 66:NoiseDeformerAt3-ext->4:At 47529
                    Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 47528
                    Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 47533
                    Single _117At;// 66:NoiseDeformerAt3-ext->7:At 47532
                    Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 47531
                    Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 47527
                    Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 47536
                    Single _121At;// 66:NoiseDeformerAt3-ext->10:At 47535
                    Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 47534
                    Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 47526
                    Single _124Constant;// 42:NoiseDeformerSCurve->0:Constant 47549
                    Single _125Constant;// 42:NoiseDeformerSCurve->0:Constant 47551
                    Single _126Multiply;// 42:NoiseDeformerSCurve->41:Multiply 47550
                    Single _127Subtract;// 42:NoiseDeformerSCurve->39:Subtract 47548
                    Single _128Multiply;// 42:NoiseDeformerSCurve->35:Multiply 47553
                    Single _129Multiply;// 42:NoiseDeformerSCurve->37:Multiply 47547
                    Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 47383
                    Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 47575
                    Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 47574
                    Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 47573
                    Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 47571
                    IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 47570
                    Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 47563
                    Single _137At;// 72:NoiseDeformerAt3-ext->4:At 47562
                    Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 47561
                    Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 47576
                    Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 47566
                    Single _141At;// 72:NoiseDeformerAt3-ext->7:At 47565
                    Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 47564
                    Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 47560
                    Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 47569
                    Single _145At;// 72:NoiseDeformerAt3-ext->10:At 47568
                    Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 47567
                    Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 47559
                    Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 47596
                    Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 47595
                    Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 47593
                    IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 47592
                    Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 47585
                    Single _153At;// 75:NoiseDeformerAt3-ext->4:At 47584
                    Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 47583
                    Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 47588
                    Single _156At;// 75:NoiseDeformerAt3-ext->7:At 47587
                    Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 47586
                    Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 47582
                    Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 47591
                    Single _160At;// 75:NoiseDeformerAt3-ext->10:At 47590
                    Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 47589
                    Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 47581
                    Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 47554
                    Single _164Constant;// 56:NoiseDeformerSCurve->0:Constant 47600
                    Single _165Constant;// 56:NoiseDeformerSCurve->0:Constant 47602
                    Single _166Multiply;// 56:NoiseDeformerSCurve->41:Multiply 47601
                    Single _167Subtract;// 56:NoiseDeformerSCurve->39:Subtract 47599
                    Single _168Multiply;// 56:NoiseDeformerSCurve->35:Multiply 47604
                    Single _169Multiply;// 56:NoiseDeformerSCurve->37:Multiply 47598
                    Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 47382
                    Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 47624
                    Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 47623
                    IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 47622
                    Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 47615
                    Single _175At;// 82:NoiseDeformerAt3-ext->4:At 47614
                    Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 47613
                    Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 47618
                    Single _178At;// 82:NoiseDeformerAt3-ext->7:At 47617
                    Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 47616
                    Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 47612
                    Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 47625
                    Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 47621
                    Single _183At;// 82:NoiseDeformerAt3-ext->10:At 47620
                    Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 47619
                    Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 47611
                    Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 47642
                    IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 47641
                    Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 47634
                    Single _189At;// 86:NoiseDeformerAt3-ext->4:At 47633
                    Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 47632
                    Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 47637
                    Single _192At;// 86:NoiseDeformerAt3-ext->7:At 47636
                    Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 47635
                    Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 47631
                    Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 47640
                    Single _196At;// 86:NoiseDeformerAt3-ext->10:At 47639
                    Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 47638
                    Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 47630
                    Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 47606
                    Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 47660
                    IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 47659
                    Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 47652
                    Single _203At;// 92:NoiseDeformerAt3-ext->4:At 47651
                    Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 47650
                    Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 47655
                    Single _206At;// 92:NoiseDeformerAt3-ext->7:At 47654
                    Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 47653
                    Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 47649
                    Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 47658
                    Single _210At;// 92:NoiseDeformerAt3-ext->10:At 47657
                    Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 47656
                    Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 47648
                    Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 47677
                    IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 47676
                    Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 47669
                    Single _216At;// 96:NoiseDeformerAt3-ext->4:At 47668
                    Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 47667
                    Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 47672
                    Single _219At;// 96:NoiseDeformerAt3-ext->7:At 47671
                    Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 47670
                    Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 47666
                    Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 47675
                    Single _223At;// 96:NoiseDeformerAt3-ext->10:At 47674
                    Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 47673
                    Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 47665
                    Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 47643
                    Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 47605
                    Single _228Constant;// 58:NoiseDeformerSCurve->0:Constant 47681
                    Single _229Constant;// 58:NoiseDeformerSCurve->0:Constant 47683
                    Single _230Multiply;// 58:NoiseDeformerSCurve->41:Multiply 47682
                    Single _231Subtract;// 58:NoiseDeformerSCurve->39:Subtract 47680
                    Single _232Multiply;// 58:NoiseDeformerSCurve->35:Multiply 47685
                    Single _233Multiply;// 58:NoiseDeformerSCurve->37:Multiply 47679
                    Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 47381
                    Single _235NaN;// 118:FloatIsNaN->1:NaN 47379
                    Int32 _236Compare;// 118:FloatIsNaN->2:Compare 47378
                    Int32 _237Zero;// 118:FloatIsNaN->4:Zero 47380
                    Boolean _238Equal;// 118:FloatIsNaN->3:Equal 47377
                    Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 47351
                    Int32 _241Zero;// 48:First->2:Zero 47698
                    Single _242At;// 48:First->0:At 47697
                    Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 47350
                    IArray[Single] _244Unit;// 43:Array2->2:Unit 47348
                    Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 47700
                    IArray[Single] _246Append;// 43:Array2->3:Append 47347
                    _0One = One();
                    _1At = At(x0, _0One);
                    _2AsInt = AsInt(_1At);
                    _3At = At(_13Map, _2AsInt);
                    _4Constant = 4096;
                    _5At = At(_23GenerateN, _2AsInt);
                    _6X = X(_5At);
                    _7Unit = Unit(_6X);
                    _8Y = Y(_5At);
                    _9Append = Append(_7Unit, _8Y);
                    _10Z = Z(_5At);
                    _11Append = Append(_9Append, _10Z);
                    _12Zero = Zero();
                    _13At = At(_11Append, _12Zero);
                    _14Add = Add(_4Constant, _13At);
                    _15Floor = Floor(_14Add);
                    _16Constant = 255;
                    _17And = And(_15Floor, _16Constant);
                    _18One = One();
                    _19Add = Add(_17And, _18One);
                    _20And = And(_19Add, _16Constant);
                    _21Pair = Pair(_17And, _20And);
                    _22Floor = Floor(_14Add);
                    _23AsFloat = AsFloat(_22Floor);
                    _24Subtract = Subtract(_14Add, _23AsFloat);
                    _25FloatOne = FloatOne();
                    _26Subtract = Subtract(_24Subtract, _25FloatOne);
                    _27Pair = Pair(_24Subtract, _26Subtract);
                    _28Pair = Pair(_21Pair, _27Pair);
                    _29PairItem2 = PairItem2(_28Pair);
                    _30PairItem1 = PairItem1(_29PairItem2);
                    _31PairItem2 = PairItem2(x1);
                    _32PairItem1 = PairItem1(_28Pair);
                    _33PairItem1 = PairItem1(_32PairItem1);
                    _34At = At(_31PairItem2, _33PairItem1);
                    _35Constant = 4096;
                    _36X = X(_5At);
                    _37Unit = Unit(_36X);
                    _38Y = Y(_5At);
                    _39Append = Append(_37Unit, _38Y);
                    _40Z = Z(_5At);
                    _41Append = Append(_39Append, _40Z);
                    _42One = One();
                    _43At = At(_41Append, _42One);
                    _44Add = Add(_35Constant, _43At);
                    _45Floor = Floor(_44Add);
                    _46Constant = 255;
                    _47And = And(_45Floor, _46Constant);
                    _48One = One();
                    _49Add = Add(_47And, _48One);
                    _50And = And(_49Add, _46Constant);
                    _51Pair = Pair(_47And, _50And);
                    _52Floor = Floor(_44Add);
                    _53AsFloat = AsFloat(_52Floor);
                    _54Subtract = Subtract(_44Add, _53AsFloat);
                    _55FloatOne = FloatOne();
                    _56Subtract = Subtract(_54Subtract, _55FloatOne);
                    _57Pair = Pair(_54Subtract, _56Subtract);
                    _58Pair = Pair(_51Pair, _57Pair);
                    _59PairItem1 = PairItem1(_58Pair);
                    _60PairItem1 = PairItem1(_59PairItem1);
                    _61Add = Add(_34At, _60PairItem1);
                    _62At = At(_31PairItem2, _61Add);
                    _63Constant = 4096;
                    _64X = X(_5At);
                    _65Unit = Unit(_64X);
                    _66Y = Y(_5At);
                    _67Append = Append(_65Unit, _66Y);
                    _68Z = Z(_5At);
                    _69Append = Append(_67Append, _68Z);
                    _70Two = Two();
                    _71At = At(_69Append, _70Two);
                    _72Add = Add(_63Constant, _71At);
                    _73Floor = Floor(_72Add);
                    _74Constant = 255;
                    _75And = And(_73Floor, _74Constant);
                    _76One = One();
                    _77Add = Add(_75And, _76One);
                    _78And = And(_77Add, _74Constant);
                    _79Pair = Pair(_75And, _78And);
                    _80Floor = Floor(_72Add);
                    _81AsFloat = AsFloat(_80Floor);
                    _82Subtract = Subtract(_72Add, _81AsFloat);
                    _83FloatOne = FloatOne();
                    _84Subtract = Subtract(_82Subtract, _83FloatOne);
                    _85Pair = Pair(_82Subtract, _84Subtract);
                    _86Pair = Pair(_79Pair, _85Pair);
                    _87PairItem1 = PairItem1(_86Pair);
                    _88PairItem1 = PairItem1(_87PairItem1);
                    _89Add = Add(_62At, _88PairItem1);
                    _90At = At(_24PairItem1, _89Add);
                    _91Zero = Zero();
                    _92At = At(_90At, _91Zero);
                    _93Multiply = Multiply(_30PairItem1, _92At);
                    _94PairItem2 = PairItem2(_58Pair);
                    _95PairItem1 = PairItem1(_94PairItem2);
                    _96One = One();
                    _97At = At(_90At, _96One);
                    _98Multiply = Multiply(_95PairItem1, _97At);
                    _99Add = Add(_93Multiply, _98Multiply);
                    _100PairItem2 = PairItem2(_86Pair);
                    _101PairItem1 = PairItem1(_100PairItem2);
                    _102Two = Two();
                    _103At = At(_90At, _102Two);
                    _104Multiply = Multiply(_101PairItem1, _103At);
                    _105Add = Add(_99Add, _104Multiply);
                    _106PairItem2 = PairItem2(_29PairItem2);
                    _107PairItem2 = PairItem2(_32PairItem1);
                    _108At = At(_31PairItem2, _107PairItem2);
                    _109Add = Add(_108At, _60PairItem1);
                    _110At = At(_31PairItem2, _109Add);
                    _111Add = Add(_110At, _88PairItem1);
                    _112At = At(_24PairItem1, _111Add);
                    _113Zero = Zero();
                    _114At = At(_112At, _113Zero);
                    _115Multiply = Multiply(_106PairItem2, _114At);
                    _116One = One();
                    _117At = At(_112At, _116One);
                    _118Multiply = Multiply(_95PairItem1, _117At);
                    _119Add = Add(_115Multiply, _118Multiply);
                    _120Two = Two();
                    _121At = At(_112At, _120Two);
                    _122Multiply = Multiply(_101PairItem1, _121At);
                    _123Add = Add(_119Add, _122Multiply);
                    _124Constant = 3;
                    _125Constant = 2;
                    _126Multiply = Multiply(_125Constant, _30PairItem1);
                    _127Subtract = Subtract(_124Constant, _126Multiply);
                    _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                    _129Multiply = Multiply(_127Subtract, _128Multiply);
                    _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                    _131PairItem2 = PairItem2(_59PairItem1);
                    _132Add = Add(_34At, _131PairItem2);
                    _133At = At(_31PairItem2, _132Add);
                    _134Add = Add(_133At, _88PairItem1);
                    _135At = At(_24PairItem1, _134Add);
                    _136Zero = Zero();
                    _137At = At(_135At, _136Zero);
                    _138Multiply = Multiply(_30PairItem1, _137At);
                    _139PairItem2 = PairItem2(_94PairItem2);
                    _140One = One();
                    _141At = At(_135At, _140One);
                    _142Multiply = Multiply(_139PairItem2, _141At);
                    _143Add = Add(_138Multiply, _142Multiply);
                    _144Two = Two();
                    _145At = At(_135At, _144Two);
                    _146Multiply = Multiply(_101PairItem1, _145At);
                    _147Add = Add(_143Add, _146Multiply);
                    _148Add = Add(_108At, _131PairItem2);
                    _149At = At(_31PairItem2, _148Add);
                    _150Add = Add(_149At, _88PairItem1);
                    _151At = At(_24PairItem1, _150Add);
                    _152Zero = Zero();
                    _153At = At(_151At, _152Zero);
                    _154Multiply = Multiply(_106PairItem2, _153At);
                    _155One = One();
                    _156At = At(_151At, _155One);
                    _157Multiply = Multiply(_139PairItem2, _156At);
                    _158Add = Add(_154Multiply, _157Multiply);
                    _159Two = Two();
                    _160At = At(_151At, _159Two);
                    _161Multiply = Multiply(_101PairItem1, _160At);
                    _162Add = Add(_158Add, _161Multiply);
                    _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                    _164Constant = 3;
                    _165Constant = 2;
                    _166Multiply = Multiply(_165Constant, _95PairItem1);
                    _167Subtract = Subtract(_164Constant, _166Multiply);
                    _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                    _169Multiply = Multiply(_167Subtract, _168Multiply);
                    _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                    _171PairItem2 = PairItem2(_87PairItem1);
                    _172Add = Add(_62At, _171PairItem2);
                    _173At = At(_24PairItem1, _172Add);
                    _174Zero = Zero();
                    _175At = At(_173At, _174Zero);
                    _176Multiply = Multiply(_30PairItem1, _175At);
                    _177One = One();
                    _178At = At(_173At, _177One);
                    _179Multiply = Multiply(_95PairItem1, _178At);
                    _180Add = Add(_176Multiply, _179Multiply);
                    _181PairItem2 = PairItem2(_100PairItem2);
                    _182Two = Two();
                    _183At = At(_173At, _182Two);
                    _184Multiply = Multiply(_181PairItem2, _183At);
                    _185Add = Add(_180Add, _184Multiply);
                    _186Add = Add(_110At, _171PairItem2);
                    _187At = At(_24PairItem1, _186Add);
                    _188Zero = Zero();
                    _189At = At(_187At, _188Zero);
                    _190Multiply = Multiply(_106PairItem2, _189At);
                    _191One = One();
                    _192At = At(_187At, _191One);
                    _193Multiply = Multiply(_95PairItem1, _192At);
                    _194Add = Add(_190Multiply, _193Multiply);
                    _195Two = Two();
                    _196At = At(_187At, _195Two);
                    _197Multiply = Multiply(_181PairItem2, _196At);
                    _198Add = Add(_194Add, _197Multiply);
                    _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                    _200Add = Add(_133At, _171PairItem2);
                    _201At = At(_24PairItem1, _200Add);
                    _202Zero = Zero();
                    _203At = At(_201At, _202Zero);
                    _204Multiply = Multiply(_30PairItem1, _203At);
                    _205One = One();
                    _206At = At(_201At, _205One);
                    _207Multiply = Multiply(_139PairItem2, _206At);
                    _208Add = Add(_204Multiply, _207Multiply);
                    _209Two = Two();
                    _210At = At(_201At, _209Two);
                    _211Multiply = Multiply(_181PairItem2, _210At);
                    _212Add = Add(_208Add, _211Multiply);
                    _213Add = Add(_149At, _171PairItem2);
                    _214At = At(_24PairItem1, _213Add);
                    _215Zero = Zero();
                    _216At = At(_214At, _215Zero);
                    _217Multiply = Multiply(_106PairItem2, _216At);
                    _218One = One();
                    _219At = At(_214At, _218One);
                    _220Multiply = Multiply(_139PairItem2, _219At);
                    _221Add = Add(_217Multiply, _220Multiply);
                    _222Two = Two();
                    _223At = At(_214At, _222Two);
                    _224Multiply = Multiply(_181PairItem2, _223At);
                    _225Add = Add(_221Add, _224Multiply);
                    _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                    _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                    _228Constant = 3;
                    _229Constant = 2;
                    _230Multiply = Multiply(_229Constant, _101PairItem1);
                    _231Subtract = Subtract(_228Constant, _230Multiply);
                    _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                    _233Multiply = Multiply(_231Subtract, _232Multiply);
                    _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                    _235NaN = NaN();
                    _236Compare = Compare(_234FloatLerp, _235NaN);
                    _237Zero = Zero();
                    _238Equal = Equal(_236Compare, _237Zero);
                    _240Multiply = Multiply(_3At, if (_238Equal)
                        {
                          Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 47686
                          _239FloatZero = FloatZero();
                          _239FloatZero;
                          }else
                        {
                          _234FloatLerp;
                          });
                    _241Zero = Zero();
                    _242At = At(x0, _241Zero);
                    _243Add = Add(_240Multiply, _242At);
                    _244Unit = Unit(_243Add);
                    _245Add = Add(_1At, _25FloatOne);
                    _246Append = Append(_244Unit, _245Add);
                    _246Append;
                    });
                _27Count = Count(_26GenerateN);
                _28One = One();
                _29Subtract = Subtract(_27Count, _28One);
                _30At = At(_26GenerateN, _29Subtract);
                _31Zero = Zero();
                _32At = At(_30At, _31Zero);
                _32At;
                }, _8X, _6Z);
            _10Apply2 = Apply2((Single x0, Single x1) => 
              {
                Single _0FloatZero;// 27:NoiseDeformerfBm1-ext->33:FloatZero 47341
                IArray[Single] _1Unit;// 37:Array2->2:Unit 47340
                Single _2FloatZero;// 27:NoiseDeformerfBm1-ext->38:FloatZero 47342
                IArray[Single] _3Append;// 37:Array2->3:Append 47339
                Single _4AsFloat;// 0:NoiseDeformer-ext->13:AsFloat 47702
                Int32 _5AsInt;// 27:NoiseDeformerfBm1-ext->21:AsInt 47343
                Single _6FloatOne;// 27:NoiseDeformerfBm1-ext->5:FloatOne 47357
                Int32 _7AsInt;// 27:NoiseDeformerfBm1-ext->8:AsInt 47358
                Single _8Constant;// 0:NoiseDeformer-ext->0:Constant 47703
                IArray[Single] _9GenerateN;// 27:NoiseDeformerfBm1-ext->7:GenerateN 47356
                Single _10FloatOne;// 0:NoiseDeformer-ext->46:FloatOne 47705
                Single _11Subtract;// 0:NoiseDeformer-ext->3:Subtract 47704
                Single _12NegativeFloat;// 27:NoiseDeformerfBm1-ext->16:NegativeFloat 47365
                IArray[Single] _13Map;// 27:NoiseDeformerfBm1-ext->14:Map 47355
                Single _14AsFloat;// 0:NoiseDeformer-ext->43:AsFloat 47710
                Single _15Constant;// 0:NoiseDeformer-ext->0:Constant 47713
                Single _16Multiply;// 0:NoiseDeformer-ext->30:Multiply 47712
                Single _17Constant;// 0:NoiseDeformer-ext->0:Constant 47715
                Single _18Constant;// 0:NoiseDeformer-ext->0:Constant 47716
                Single _19Divide;// 0:NoiseDeformer-ext->31:Divide 47714
                Single _20Multiply;// 0:NoiseDeformer-ext->39:Multiply 47711
                Single _21Multiply;// 0:NoiseDeformer-ext->38:Multiply 47709
                Vector3 _22Vector3;// 0:NoiseDeformer-ext->0:Vector3 47706
                IArray[Vector3] _23GenerateN;// 27:NoiseDeformerfBm1-ext->30:GenerateN 47690
                IArray[IArray[Single]] _24PairItem1;// 27:NoiseDeformerfBm1-ext->72:PairItem1 47694
                Single _25FloatOne;// 27:NoiseDeformerfBm1-ext->53:FloatOne 47701
                IArray[IArray[Single]] _26GenerateN;// 27:NoiseDeformerfBm1-ext->35:GenerateN 47336
                Int32 _27Count;// 3:LastIndex->2:Count 47335
                Int32 _28One;// 3:MinusOne->2:One 47334
                Int32 _29Subtract;// 3:MinusOne->1:Subtract 47333
                IArray[Single] _30At;// 68:Last->0:At 47330
                Int32 _31Zero;// 69:First->2:Zero 47328
                Single _32At;// 69:First->0:At 47327
                _0FloatZero = FloatZero();
                _1Unit = Unit(_0FloatZero);
                _2FloatZero = FloatZero();
                _3Append = Append(_1Unit, _2FloatZero);
                _4AsFloat = AsFloat(numIterations);
                _5AsInt = AsInt(_4AsFloat);
                _6FloatOne = FloatOne();
                _7AsInt = AsInt(_4AsFloat);
                _8Constant = 2;
                _9GenerateN = GenerateN(_6FloatOne, _7AsInt, (Single x0) => 
                  {
                    Single _0Multiply;// 27:NoiseDeformerfBm1-ext->9:Multiply 47360
                    _0Multiply = Multiply(_8Constant, x0);
                    _0Multiply;
                    });
                _10FloatOne = FloatOne();
                _11Subtract = Subtract(_10FloatOne, roughness);
                _12NegativeFloat = NegativeFloat(_11Subtract);
                _13Map = Map(_9GenerateN, (Single x0) => 
                  {
                    Single _0Pow;// 27:NoiseDeformerfBm1-ext->15:Pow 47363
                    _0Pow = Pow(x0, _12NegativeFloat);
                    _0Pow;
                    });
                _14AsFloat = AsFloat(phase);
                _15Constant = 0.005;
                _16Multiply = Multiply(frequency, _15Constant);
                _17Constant = 1200;
                _18Constant = 4800;
                _19Divide = Divide(_17Constant, _18Constant);
                _20Multiply = Multiply(_16Multiply, _19Divide);
                _21Multiply = Multiply(_14AsFloat, _20Multiply);
                _22Vector3 = Vector3(x0, x1, _21Multiply);
                _23GenerateN = GenerateN(_22Vector3, _5AsInt, (Vector3 x0) => 
                  {
                    Vector3 _0MultiplyByScalar;// 27:NoiseDeformerfBm1-ext->22:MultiplyByScalar 47692
                    _0MultiplyByScalar = MultiplyByScalar(x0, _8Constant);
                    _0MultiplyByScalar;
                    });
                _24PairItem1 = PairItem1(x1);
                _25FloatOne = FloatOne();
                _26GenerateN = GenerateN(_3Append, _5AsInt, (IArray[Single] x0) => 
                  {
                    Int32 _0One;// 49:Second->2:One 47370
                    Single _1At;// 49:Second->0:At 47369
                    Int32 _2AsInt;// 27:NoiseDeformerfBm1-ext->55:AsInt 47367
                    Single _3At;// 27:NoiseDeformerfBm1-ext->60:At 47353
                    Single _4Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 47408
                    Vector3 _5At;// 27:NoiseDeformerfBm1-ext->54:At 47688
                    Single _6X;// 2:VectorAsArray->1:X 47419
                    IArray[Single] _7Unit;// 4:Array3->2:Unit 47418
                    Single _8Y;// 2:VectorAsArray->2:Y 47420
                    IArray[Single] _9Append;// 4:Array3->3:Append 47417
                    Single _10Z;// 2:VectorAsArray->3:Z 47421
                    IArray[Single] _11Append;// 4:Array3->6:Append 47416
                    Int32 _12Zero;// 77:NoiseDeformerNoise3-ext->3:Zero 47434
                    Single _13At;// 1:VectorComponent-ext->3:At 47411
                    Single _14Add;// 25:NoiseDeformerNoiseVarSetup-ext->5:Add 47407
                    Int32 _15Floor;// 25:NoiseDeformerNoiseVarSetup-ext->7:Floor 47406
                    Int32 _16Constant;// 25:NoiseDeformerNoiseVarSetup-ext->0:Constant 47422
                    Int32 _17And;// 25:NoiseDeformerNoiseVarSetup-ext->8:And 47405
                    Int32 _18One;// 13:PlusOne->1:One 47426
                    Int32 _19Add;// 13:PlusOne->0:Add 47425
                    Int32 _20And;// 25:NoiseDeformerNoiseVarSetup-ext->14:And 47423
                    Tuple[Int32, Int32] _21Pair;// 25:NoiseDeformerNoiseVarSetup-ext->3:Pair 47404
                    Int32 _22Floor;// 25:NoiseDeformerNoiseVarSetup-ext->22:Floor 47431
                    Single _23AsFloat;// 25:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47430
                    Single _24Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47428
                    Single _25FloatOne;// 25:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47433
                    Single _26Subtract;// 25:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47432
                    Tuple[Single, Single] _27Pair;// 25:NoiseDeformerNoiseVarSetup-ext->25:Pair 47427
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _28Pair;// 25:NoiseDeformerNoiseVarSetup-ext->26:Pair 47403
                    Tuple[Single, Single] _29PairItem2;// 77:NoiseDeformerNoise3-ext->10:PairItem2 47400
                    Single _30PairItem1;// 77:NoiseDeformerNoise3-ext->12:PairItem1 47399
                    IArray[Int32] _31PairItem2;// 27:NoiseDeformerfBm1-ext->73:PairItem2 47695
                    Tuple[Int32, Int32] _32PairItem1;// 77:NoiseDeformerNoise3-ext->8:PairItem1 47445
                    Int32 _33PairItem1;// 77:NoiseDeformerNoise3-ext->9:PairItem1 47444
                    Int32 _34At;// 77:NoiseDeformerNoise3-ext->31:At 47443
                    Single _35Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 47455
                    Single _36X;// 2:VectorAsArray->1:X 47466
                    IArray[Single] _37Unit;// 4:Array3->2:Unit 47465
                    Single _38Y;// 2:VectorAsArray->2:Y 47467
                    IArray[Single] _39Append;// 4:Array3->3:Append 47464
                    Single _40Z;// 2:VectorAsArray->3:Z 47468
                    IArray[Single] _41Append;// 4:Array3->6:Append 47463
                    Int32 _42One;// 77:NoiseDeformerNoise3-ext->4:One 47481
                    Single _43At;// 1:VectorComponent-ext->3:At 47458
                    Single _44Add;// 6:NoiseDeformerNoiseVarSetup-ext->5:Add 47454
                    Int32 _45Floor;// 6:NoiseDeformerNoiseVarSetup-ext->7:Floor 47453
                    Int32 _46Constant;// 6:NoiseDeformerNoiseVarSetup-ext->0:Constant 47469
                    Int32 _47And;// 6:NoiseDeformerNoiseVarSetup-ext->8:And 47452
                    Int32 _48One;// 13:PlusOne->1:One 47473
                    Int32 _49Add;// 13:PlusOne->0:Add 47472
                    Int32 _50And;// 6:NoiseDeformerNoiseVarSetup-ext->14:And 47470
                    Tuple[Int32, Int32] _51Pair;// 6:NoiseDeformerNoiseVarSetup-ext->3:Pair 47451
                    Int32 _52Floor;// 6:NoiseDeformerNoiseVarSetup-ext->22:Floor 47478
                    Single _53AsFloat;// 6:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47477
                    Single _54Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47475
                    Single _55FloatOne;// 6:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47480
                    Single _56Subtract;// 6:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47479
                    Tuple[Single, Single] _57Pair;// 6:NoiseDeformerNoiseVarSetup-ext->25:Pair 47474
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _58Pair;// 6:NoiseDeformerNoiseVarSetup-ext->26:Pair 47450
                    Tuple[Int32, Int32] _59PairItem1;// 77:NoiseDeformerNoise3-ext->20:PairItem1 47447
                    Int32 _60PairItem1;// 77:NoiseDeformerNoise3-ext->19:PairItem1 47446
                    Int32 _61Add;// 77:NoiseDeformerNoise3-ext->33:Add 47441
                    Int32 _62At;// 77:NoiseDeformerNoise3-ext->107:At 47439
                    Single _63Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 47491
                    Single _64X;// 2:VectorAsArray->1:X 47502
                    IArray[Single] _65Unit;// 4:Array3->2:Unit 47501
                    Single _66Y;// 2:VectorAsArray->2:Y 47503
                    IArray[Single] _67Append;// 4:Array3->3:Append 47500
                    Single _68Z;// 2:VectorAsArray->3:Z 47504
                    IArray[Single] _69Append;// 4:Array3->6:Append 47499
                    Int32 _70Two;// 77:NoiseDeformerNoise3-ext->5:Two 47517
                    Single _71At;// 1:VectorComponent-ext->3:At 47494
                    Single _72Add;// 7:NoiseDeformerNoiseVarSetup-ext->5:Add 47490
                    Int32 _73Floor;// 7:NoiseDeformerNoiseVarSetup-ext->7:Floor 47489
                    Int32 _74Constant;// 7:NoiseDeformerNoiseVarSetup-ext->0:Constant 47505
                    Int32 _75And;// 7:NoiseDeformerNoiseVarSetup-ext->8:And 47488
                    Int32 _76One;// 13:PlusOne->1:One 47509
                    Int32 _77Add;// 13:PlusOne->0:Add 47508
                    Int32 _78And;// 7:NoiseDeformerNoiseVarSetup-ext->14:And 47506
                    Tuple[Int32, Int32] _79Pair;// 7:NoiseDeformerNoiseVarSetup-ext->3:Pair 47487
                    Int32 _80Floor;// 7:NoiseDeformerNoiseVarSetup-ext->22:Floor 47514
                    Single _81AsFloat;// 7:NoiseDeformerNoiseVarSetup-ext->17:AsFloat 47513
                    Single _82Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->16:Subtract 47511
                    Single _83FloatOne;// 7:NoiseDeformerNoiseVarSetup-ext->20:FloatOne 47516
                    Single _84Subtract;// 7:NoiseDeformerNoiseVarSetup-ext->19:Subtract 47515
                    Tuple[Single, Single] _85Pair;// 7:NoiseDeformerNoiseVarSetup-ext->25:Pair 47510
                    Tuple[Tuple[Int32, Int32], Tuple[Single, Single]] _86Pair;// 7:NoiseDeformerNoiseVarSetup-ext->26:Pair 47486
                    Tuple[Int32, Int32] _87PairItem1;// 77:NoiseDeformerNoise3-ext->51:PairItem1 47483
                    Int32 _88PairItem1;// 77:NoiseDeformerNoise3-ext->53:PairItem1 47482
                    Int32 _89Add;// 77:NoiseDeformerNoise3-ext->61:Add 47437
                    IArray[Single] _90At;// 77:NoiseDeformerNoise3-ext->60:At 47435
                    Int32 _91Zero;// 62:NoiseDeformerAt3-ext->5:Zero 47392
                    Single _92At;// 62:NoiseDeformerAt3-ext->4:At 47391
                    Single _93Multiply;// 62:NoiseDeformerAt3-ext->11:Multiply 47390
                    Tuple[Single, Single] _94PairItem2;// 77:NoiseDeformerNoise3-ext->23:PairItem2 47519
                    Single _95PairItem1;// 77:NoiseDeformerNoise3-ext->18:PairItem1 47518
                    Int32 _96One;// 62:NoiseDeformerAt3-ext->8:One 47395
                    Single _97At;// 62:NoiseDeformerAt3-ext->7:At 47394
                    Single _98Multiply;// 62:NoiseDeformerAt3-ext->12:Multiply 47393
                    Single _99Add;// 62:NoiseDeformerAt3-ext->6:Add 47389
                    Tuple[Single, Single] _100PairItem2;// 77:NoiseDeformerNoise3-ext->48:PairItem2 47521
                    Single _101PairItem1;// 77:NoiseDeformerNoise3-ext->52:PairItem1 47520
                    Int32 _102Two;// 62:NoiseDeformerAt3-ext->9:Two 47398
                    Single _103At;// 62:NoiseDeformerAt3-ext->10:At 47397
                    Single _104Multiply;// 62:NoiseDeformerAt3-ext->13:Multiply 47396
                    Single _105Add;// 62:NoiseDeformerAt3-ext->14:Add 47388
                    Single _106PairItem2;// 77:NoiseDeformerNoise3-ext->13:PairItem2 47537
                    Int32 _107PairItem2;// 77:NoiseDeformerNoise3-ext->11:PairItem2 47545
                    Int32 _108At;// 77:NoiseDeformerNoise3-ext->32:At 47544
                    Int32 _109Add;// 77:NoiseDeformerNoise3-ext->34:Add 47542
                    Int32 _110At;// 77:NoiseDeformerNoise3-ext->113:At 47541
                    Int32 _111Add;// 77:NoiseDeformerNoise3-ext->65:Add 47539
                    IArray[Single] _112At;// 77:NoiseDeformerNoise3-ext->64:At 47538
                    Int32 _113Zero;// 66:NoiseDeformerAt3-ext->5:Zero 47530
                    Single _114At;// 66:NoiseDeformerAt3-ext->4:At 47529
                    Single _115Multiply;// 66:NoiseDeformerAt3-ext->11:Multiply 47528
                    Int32 _116One;// 66:NoiseDeformerAt3-ext->8:One 47533
                    Single _117At;// 66:NoiseDeformerAt3-ext->7:At 47532
                    Single _118Multiply;// 66:NoiseDeformerAt3-ext->12:Multiply 47531
                    Single _119Add;// 66:NoiseDeformerAt3-ext->6:Add 47527
                    Int32 _120Two;// 66:NoiseDeformerAt3-ext->9:Two 47536
                    Single _121At;// 66:NoiseDeformerAt3-ext->10:At 47535
                    Single _122Multiply;// 66:NoiseDeformerAt3-ext->13:Multiply 47534
                    Single _123Add;// 66:NoiseDeformerAt3-ext->14:Add 47526
                    Single _124Constant;// 42:NoiseDeformerSCurve->0:Constant 47549
                    Single _125Constant;// 42:NoiseDeformerSCurve->0:Constant 47551
                    Single _126Multiply;// 42:NoiseDeformerSCurve->41:Multiply 47550
                    Single _127Subtract;// 42:NoiseDeformerSCurve->39:Subtract 47548
                    Single _128Multiply;// 42:NoiseDeformerSCurve->35:Multiply 47553
                    Single _129Multiply;// 42:NoiseDeformerSCurve->37:Multiply 47547
                    Single _130FloatLerp;// 77:NoiseDeformerNoise3-ext->68:FloatLerp 47383
                    Int32 _131PairItem2;// 77:NoiseDeformerNoise3-ext->22:PairItem2 47575
                    Int32 _132Add;// 77:NoiseDeformerNoise3-ext->38:Add 47574
                    Int32 _133At;// 77:NoiseDeformerNoise3-ext->114:At 47573
                    Int32 _134Add;// 77:NoiseDeformerNoise3-ext->71:Add 47571
                    IArray[Single] _135At;// 77:NoiseDeformerNoise3-ext->70:At 47570
                    Int32 _136Zero;// 72:NoiseDeformerAt3-ext->5:Zero 47563
                    Single _137At;// 72:NoiseDeformerAt3-ext->4:At 47562
                    Single _138Multiply;// 72:NoiseDeformerAt3-ext->11:Multiply 47561
                    Single _139PairItem2;// 77:NoiseDeformerNoise3-ext->21:PairItem2 47576
                    Int32 _140One;// 72:NoiseDeformerAt3-ext->8:One 47566
                    Single _141At;// 72:NoiseDeformerAt3-ext->7:At 47565
                    Single _142Multiply;// 72:NoiseDeformerAt3-ext->12:Multiply 47564
                    Single _143Add;// 72:NoiseDeformerAt3-ext->6:Add 47560
                    Int32 _144Two;// 72:NoiseDeformerAt3-ext->9:Two 47569
                    Single _145At;// 72:NoiseDeformerAt3-ext->10:At 47568
                    Single _146Multiply;// 72:NoiseDeformerAt3-ext->13:Multiply 47567
                    Single _147Add;// 72:NoiseDeformerAt3-ext->14:Add 47559
                    Int32 _148Add;// 77:NoiseDeformerNoise3-ext->39:Add 47596
                    Int32 _149At;// 77:NoiseDeformerNoise3-ext->115:At 47595
                    Int32 _150Add;// 77:NoiseDeformerNoise3-ext->74:Add 47593
                    IArray[Single] _151At;// 77:NoiseDeformerNoise3-ext->76:At 47592
                    Int32 _152Zero;// 75:NoiseDeformerAt3-ext->5:Zero 47585
                    Single _153At;// 75:NoiseDeformerAt3-ext->4:At 47584
                    Single _154Multiply;// 75:NoiseDeformerAt3-ext->11:Multiply 47583
                    Int32 _155One;// 75:NoiseDeformerAt3-ext->8:One 47588
                    Single _156At;// 75:NoiseDeformerAt3-ext->7:At 47587
                    Single _157Multiply;// 75:NoiseDeformerAt3-ext->12:Multiply 47586
                    Single _158Add;// 75:NoiseDeformerAt3-ext->6:Add 47582
                    Int32 _159Two;// 75:NoiseDeformerAt3-ext->9:Two 47591
                    Single _160At;// 75:NoiseDeformerAt3-ext->10:At 47590
                    Single _161Multiply;// 75:NoiseDeformerAt3-ext->13:Multiply 47589
                    Single _162Add;// 75:NoiseDeformerAt3-ext->14:Add 47581
                    Single _163FloatLerp;// 77:NoiseDeformerNoise3-ext->78:FloatLerp 47554
                    Single _164Constant;// 56:NoiseDeformerSCurve->0:Constant 47600
                    Single _165Constant;// 56:NoiseDeformerSCurve->0:Constant 47602
                    Single _166Multiply;// 56:NoiseDeformerSCurve->41:Multiply 47601
                    Single _167Subtract;// 56:NoiseDeformerSCurve->39:Subtract 47599
                    Single _168Multiply;// 56:NoiseDeformerSCurve->35:Multiply 47604
                    Single _169Multiply;// 56:NoiseDeformerSCurve->37:Multiply 47598
                    Single _170FloatLerp;// 77:NoiseDeformerNoise3-ext->80:FloatLerp 47382
                    Int32 _171PairItem2;// 77:NoiseDeformerNoise3-ext->49:PairItem2 47624
                    Int32 _172Add;// 77:NoiseDeformerNoise3-ext->84:Add 47623
                    IArray[Single] _173At;// 77:NoiseDeformerNoise3-ext->83:At 47622
                    Int32 _174Zero;// 82:NoiseDeformerAt3-ext->5:Zero 47615
                    Single _175At;// 82:NoiseDeformerAt3-ext->4:At 47614
                    Single _176Multiply;// 82:NoiseDeformerAt3-ext->11:Multiply 47613
                    Int32 _177One;// 82:NoiseDeformerAt3-ext->8:One 47618
                    Single _178At;// 82:NoiseDeformerAt3-ext->7:At 47617
                    Single _179Multiply;// 82:NoiseDeformerAt3-ext->12:Multiply 47616
                    Single _180Add;// 82:NoiseDeformerAt3-ext->6:Add 47612
                    Single _181PairItem2;// 77:NoiseDeformerNoise3-ext->50:PairItem2 47625
                    Int32 _182Two;// 82:NoiseDeformerAt3-ext->9:Two 47621
                    Single _183At;// 82:NoiseDeformerAt3-ext->10:At 47620
                    Single _184Multiply;// 82:NoiseDeformerAt3-ext->13:Multiply 47619
                    Single _185Add;// 82:NoiseDeformerAt3-ext->14:Add 47611
                    Int32 _186Add;// 77:NoiseDeformerNoise3-ext->88:Add 47642
                    IArray[Single] _187At;// 77:NoiseDeformerNoise3-ext->87:At 47641
                    Int32 _188Zero;// 86:NoiseDeformerAt3-ext->5:Zero 47634
                    Single _189At;// 86:NoiseDeformerAt3-ext->4:At 47633
                    Single _190Multiply;// 86:NoiseDeformerAt3-ext->11:Multiply 47632
                    Int32 _191One;// 86:NoiseDeformerAt3-ext->8:One 47637
                    Single _192At;// 86:NoiseDeformerAt3-ext->7:At 47636
                    Single _193Multiply;// 86:NoiseDeformerAt3-ext->12:Multiply 47635
                    Single _194Add;// 86:NoiseDeformerAt3-ext->6:Add 47631
                    Int32 _195Two;// 86:NoiseDeformerAt3-ext->9:Two 47640
                    Single _196At;// 86:NoiseDeformerAt3-ext->10:At 47639
                    Single _197Multiply;// 86:NoiseDeformerAt3-ext->13:Multiply 47638
                    Single _198Add;// 86:NoiseDeformerAt3-ext->14:Add 47630
                    Single _199FloatLerp;// 77:NoiseDeformerNoise3-ext->90:FloatLerp 47606
                    Int32 _200Add;// 77:NoiseDeformerNoise3-ext->94:Add 47660
                    IArray[Single] _201At;// 77:NoiseDeformerNoise3-ext->93:At 47659
                    Int32 _202Zero;// 92:NoiseDeformerAt3-ext->5:Zero 47652
                    Single _203At;// 92:NoiseDeformerAt3-ext->4:At 47651
                    Single _204Multiply;// 92:NoiseDeformerAt3-ext->11:Multiply 47650
                    Int32 _205One;// 92:NoiseDeformerAt3-ext->8:One 47655
                    Single _206At;// 92:NoiseDeformerAt3-ext->7:At 47654
                    Single _207Multiply;// 92:NoiseDeformerAt3-ext->12:Multiply 47653
                    Single _208Add;// 92:NoiseDeformerAt3-ext->6:Add 47649
                    Int32 _209Two;// 92:NoiseDeformerAt3-ext->9:Two 47658
                    Single _210At;// 92:NoiseDeformerAt3-ext->10:At 47657
                    Single _211Multiply;// 92:NoiseDeformerAt3-ext->13:Multiply 47656
                    Single _212Add;// 92:NoiseDeformerAt3-ext->14:Add 47648
                    Int32 _213Add;// 77:NoiseDeformerNoise3-ext->97:Add 47677
                    IArray[Single] _214At;// 77:NoiseDeformerNoise3-ext->98:At 47676
                    Int32 _215Zero;// 96:NoiseDeformerAt3-ext->5:Zero 47669
                    Single _216At;// 96:NoiseDeformerAt3-ext->4:At 47668
                    Single _217Multiply;// 96:NoiseDeformerAt3-ext->11:Multiply 47667
                    Int32 _218One;// 96:NoiseDeformerAt3-ext->8:One 47672
                    Single _219At;// 96:NoiseDeformerAt3-ext->7:At 47671
                    Single _220Multiply;// 96:NoiseDeformerAt3-ext->12:Multiply 47670
                    Single _221Add;// 96:NoiseDeformerAt3-ext->6:Add 47666
                    Int32 _222Two;// 96:NoiseDeformerAt3-ext->9:Two 47675
                    Single _223At;// 96:NoiseDeformerAt3-ext->10:At 47674
                    Single _224Multiply;// 96:NoiseDeformerAt3-ext->13:Multiply 47673
                    Single _225Add;// 96:NoiseDeformerAt3-ext->14:Add 47665
                    Single _226FloatLerp;// 77:NoiseDeformerNoise3-ext->100:FloatLerp 47643
                    Single _227FloatLerp;// 77:NoiseDeformerNoise3-ext->102:FloatLerp 47605
                    Single _228Constant;// 58:NoiseDeformerSCurve->0:Constant 47681
                    Single _229Constant;// 58:NoiseDeformerSCurve->0:Constant 47683
                    Single _230Multiply;// 58:NoiseDeformerSCurve->41:Multiply 47682
                    Single _231Subtract;// 58:NoiseDeformerSCurve->39:Subtract 47680
                    Single _232Multiply;// 58:NoiseDeformerSCurve->35:Multiply 47685
                    Single _233Multiply;// 58:NoiseDeformerSCurve->37:Multiply 47679
                    Single _234FloatLerp;// 77:NoiseDeformerNoise3-ext->104:FloatLerp 47381
                    Single _235NaN;// 118:FloatIsNaN->1:NaN 47379
                    Int32 _236Compare;// 118:FloatIsNaN->2:Compare 47378
                    Int32 _237Zero;// 118:FloatIsNaN->4:Zero 47380
                    Boolean _238Equal;// 118:FloatIsNaN->3:Equal 47377
                    Single _240Multiply;// 27:NoiseDeformerfBm1-ext->64:Multiply 47351
                    Int32 _241Zero;// 48:First->2:Zero 47698
                    Single _242At;// 48:First->0:At 47697
                    Single _243Add;// 27:NoiseDeformerfBm1-ext->59:Add 47350
                    IArray[Single] _244Unit;// 43:Array2->2:Unit 47348
                    Single _245Add;// 27:NoiseDeformerfBm1-ext->52:Add 47700
                    IArray[Single] _246Append;// 43:Array2->3:Append 47347
                    _0One = One();
                    _1At = At(x0, _0One);
                    _2AsInt = AsInt(_1At);
                    _3At = At(_13Map, _2AsInt);
                    _4Constant = 4096;
                    _5At = At(_23GenerateN, _2AsInt);
                    _6X = X(_5At);
                    _7Unit = Unit(_6X);
                    _8Y = Y(_5At);
                    _9Append = Append(_7Unit, _8Y);
                    _10Z = Z(_5At);
                    _11Append = Append(_9Append, _10Z);
                    _12Zero = Zero();
                    _13At = At(_11Append, _12Zero);
                    _14Add = Add(_4Constant, _13At);
                    _15Floor = Floor(_14Add);
                    _16Constant = 255;
                    _17And = And(_15Floor, _16Constant);
                    _18One = One();
                    _19Add = Add(_17And, _18One);
                    _20And = And(_19Add, _16Constant);
                    _21Pair = Pair(_17And, _20And);
                    _22Floor = Floor(_14Add);
                    _23AsFloat = AsFloat(_22Floor);
                    _24Subtract = Subtract(_14Add, _23AsFloat);
                    _25FloatOne = FloatOne();
                    _26Subtract = Subtract(_24Subtract, _25FloatOne);
                    _27Pair = Pair(_24Subtract, _26Subtract);
                    _28Pair = Pair(_21Pair, _27Pair);
                    _29PairItem2 = PairItem2(_28Pair);
                    _30PairItem1 = PairItem1(_29PairItem2);
                    _31PairItem2 = PairItem2(x1);
                    _32PairItem1 = PairItem1(_28Pair);
                    _33PairItem1 = PairItem1(_32PairItem1);
                    _34At = At(_31PairItem2, _33PairItem1);
                    _35Constant = 4096;
                    _36X = X(_5At);
                    _37Unit = Unit(_36X);
                    _38Y = Y(_5At);
                    _39Append = Append(_37Unit, _38Y);
                    _40Z = Z(_5At);
                    _41Append = Append(_39Append, _40Z);
                    _42One = One();
                    _43At = At(_41Append, _42One);
                    _44Add = Add(_35Constant, _43At);
                    _45Floor = Floor(_44Add);
                    _46Constant = 255;
                    _47And = And(_45Floor, _46Constant);
                    _48One = One();
                    _49Add = Add(_47And, _48One);
                    _50And = And(_49Add, _46Constant);
                    _51Pair = Pair(_47And, _50And);
                    _52Floor = Floor(_44Add);
                    _53AsFloat = AsFloat(_52Floor);
                    _54Subtract = Subtract(_44Add, _53AsFloat);
                    _55FloatOne = FloatOne();
                    _56Subtract = Subtract(_54Subtract, _55FloatOne);
                    _57Pair = Pair(_54Subtract, _56Subtract);
                    _58Pair = Pair(_51Pair, _57Pair);
                    _59PairItem1 = PairItem1(_58Pair);
                    _60PairItem1 = PairItem1(_59PairItem1);
                    _61Add = Add(_34At, _60PairItem1);
                    _62At = At(_31PairItem2, _61Add);
                    _63Constant = 4096;
                    _64X = X(_5At);
                    _65Unit = Unit(_64X);
                    _66Y = Y(_5At);
                    _67Append = Append(_65Unit, _66Y);
                    _68Z = Z(_5At);
                    _69Append = Append(_67Append, _68Z);
                    _70Two = Two();
                    _71At = At(_69Append, _70Two);
                    _72Add = Add(_63Constant, _71At);
                    _73Floor = Floor(_72Add);
                    _74Constant = 255;
                    _75And = And(_73Floor, _74Constant);
                    _76One = One();
                    _77Add = Add(_75And, _76One);
                    _78And = And(_77Add, _74Constant);
                    _79Pair = Pair(_75And, _78And);
                    _80Floor = Floor(_72Add);
                    _81AsFloat = AsFloat(_80Floor);
                    _82Subtract = Subtract(_72Add, _81AsFloat);
                    _83FloatOne = FloatOne();
                    _84Subtract = Subtract(_82Subtract, _83FloatOne);
                    _85Pair = Pair(_82Subtract, _84Subtract);
                    _86Pair = Pair(_79Pair, _85Pair);
                    _87PairItem1 = PairItem1(_86Pair);
                    _88PairItem1 = PairItem1(_87PairItem1);
                    _89Add = Add(_62At, _88PairItem1);
                    _90At = At(_24PairItem1, _89Add);
                    _91Zero = Zero();
                    _92At = At(_90At, _91Zero);
                    _93Multiply = Multiply(_30PairItem1, _92At);
                    _94PairItem2 = PairItem2(_58Pair);
                    _95PairItem1 = PairItem1(_94PairItem2);
                    _96One = One();
                    _97At = At(_90At, _96One);
                    _98Multiply = Multiply(_95PairItem1, _97At);
                    _99Add = Add(_93Multiply, _98Multiply);
                    _100PairItem2 = PairItem2(_86Pair);
                    _101PairItem1 = PairItem1(_100PairItem2);
                    _102Two = Two();
                    _103At = At(_90At, _102Two);
                    _104Multiply = Multiply(_101PairItem1, _103At);
                    _105Add = Add(_99Add, _104Multiply);
                    _106PairItem2 = PairItem2(_29PairItem2);
                    _107PairItem2 = PairItem2(_32PairItem1);
                    _108At = At(_31PairItem2, _107PairItem2);
                    _109Add = Add(_108At, _60PairItem1);
                    _110At = At(_31PairItem2, _109Add);
                    _111Add = Add(_110At, _88PairItem1);
                    _112At = At(_24PairItem1, _111Add);
                    _113Zero = Zero();
                    _114At = At(_112At, _113Zero);
                    _115Multiply = Multiply(_106PairItem2, _114At);
                    _116One = One();
                    _117At = At(_112At, _116One);
                    _118Multiply = Multiply(_95PairItem1, _117At);
                    _119Add = Add(_115Multiply, _118Multiply);
                    _120Two = Two();
                    _121At = At(_112At, _120Two);
                    _122Multiply = Multiply(_101PairItem1, _121At);
                    _123Add = Add(_119Add, _122Multiply);
                    _124Constant = 3;
                    _125Constant = 2;
                    _126Multiply = Multiply(_125Constant, _30PairItem1);
                    _127Subtract = Subtract(_124Constant, _126Multiply);
                    _128Multiply = Multiply(_30PairItem1, _30PairItem1);
                    _129Multiply = Multiply(_127Subtract, _128Multiply);
                    _130FloatLerp = FloatLerp(_105Add, _123Add, _129Multiply);
                    _131PairItem2 = PairItem2(_59PairItem1);
                    _132Add = Add(_34At, _131PairItem2);
                    _133At = At(_31PairItem2, _132Add);
                    _134Add = Add(_133At, _88PairItem1);
                    _135At = At(_24PairItem1, _134Add);
                    _136Zero = Zero();
                    _137At = At(_135At, _136Zero);
                    _138Multiply = Multiply(_30PairItem1, _137At);
                    _139PairItem2 = PairItem2(_94PairItem2);
                    _140One = One();
                    _141At = At(_135At, _140One);
                    _142Multiply = Multiply(_139PairItem2, _141At);
                    _143Add = Add(_138Multiply, _142Multiply);
                    _144Two = Two();
                    _145At = At(_135At, _144Two);
                    _146Multiply = Multiply(_101PairItem1, _145At);
                    _147Add = Add(_143Add, _146Multiply);
                    _148Add = Add(_108At, _131PairItem2);
                    _149At = At(_31PairItem2, _148Add);
                    _150Add = Add(_149At, _88PairItem1);
                    _151At = At(_24PairItem1, _150Add);
                    _152Zero = Zero();
                    _153At = At(_151At, _152Zero);
                    _154Multiply = Multiply(_106PairItem2, _153At);
                    _155One = One();
                    _156At = At(_151At, _155One);
                    _157Multiply = Multiply(_139PairItem2, _156At);
                    _158Add = Add(_154Multiply, _157Multiply);
                    _159Two = Two();
                    _160At = At(_151At, _159Two);
                    _161Multiply = Multiply(_101PairItem1, _160At);
                    _162Add = Add(_158Add, _161Multiply);
                    _163FloatLerp = FloatLerp(_147Add, _162Add, _129Multiply);
                    _164Constant = 3;
                    _165Constant = 2;
                    _166Multiply = Multiply(_165Constant, _95PairItem1);
                    _167Subtract = Subtract(_164Constant, _166Multiply);
                    _168Multiply = Multiply(_95PairItem1, _95PairItem1);
                    _169Multiply = Multiply(_167Subtract, _168Multiply);
                    _170FloatLerp = FloatLerp(_130FloatLerp, _163FloatLerp, _169Multiply);
                    _171PairItem2 = PairItem2(_87PairItem1);
                    _172Add = Add(_62At, _171PairItem2);
                    _173At = At(_24PairItem1, _172Add);
                    _174Zero = Zero();
                    _175At = At(_173At, _174Zero);
                    _176Multiply = Multiply(_30PairItem1, _175At);
                    _177One = One();
                    _178At = At(_173At, _177One);
                    _179Multiply = Multiply(_95PairItem1, _178At);
                    _180Add = Add(_176Multiply, _179Multiply);
                    _181PairItem2 = PairItem2(_100PairItem2);
                    _182Two = Two();
                    _183At = At(_173At, _182Two);
                    _184Multiply = Multiply(_181PairItem2, _183At);
                    _185Add = Add(_180Add, _184Multiply);
                    _186Add = Add(_110At, _171PairItem2);
                    _187At = At(_24PairItem1, _186Add);
                    _188Zero = Zero();
                    _189At = At(_187At, _188Zero);
                    _190Multiply = Multiply(_106PairItem2, _189At);
                    _191One = One();
                    _192At = At(_187At, _191One);
                    _193Multiply = Multiply(_95PairItem1, _192At);
                    _194Add = Add(_190Multiply, _193Multiply);
                    _195Two = Two();
                    _196At = At(_187At, _195Two);
                    _197Multiply = Multiply(_181PairItem2, _196At);
                    _198Add = Add(_194Add, _197Multiply);
                    _199FloatLerp = FloatLerp(_185Add, _198Add, _129Multiply);
                    _200Add = Add(_133At, _171PairItem2);
                    _201At = At(_24PairItem1, _200Add);
                    _202Zero = Zero();
                    _203At = At(_201At, _202Zero);
                    _204Multiply = Multiply(_30PairItem1, _203At);
                    _205One = One();
                    _206At = At(_201At, _205One);
                    _207Multiply = Multiply(_139PairItem2, _206At);
                    _208Add = Add(_204Multiply, _207Multiply);
                    _209Two = Two();
                    _210At = At(_201At, _209Two);
                    _211Multiply = Multiply(_181PairItem2, _210At);
                    _212Add = Add(_208Add, _211Multiply);
                    _213Add = Add(_149At, _171PairItem2);
                    _214At = At(_24PairItem1, _213Add);
                    _215Zero = Zero();
                    _216At = At(_214At, _215Zero);
                    _217Multiply = Multiply(_106PairItem2, _216At);
                    _218One = One();
                    _219At = At(_214At, _218One);
                    _220Multiply = Multiply(_139PairItem2, _219At);
                    _221Add = Add(_217Multiply, _220Multiply);
                    _222Two = Two();
                    _223At = At(_214At, _222Two);
                    _224Multiply = Multiply(_181PairItem2, _223At);
                    _225Add = Add(_221Add, _224Multiply);
                    _226FloatLerp = FloatLerp(_212Add, _225Add, _129Multiply);
                    _227FloatLerp = FloatLerp(_199FloatLerp, _226FloatLerp, _169Multiply);
                    _228Constant = 3;
                    _229Constant = 2;
                    _230Multiply = Multiply(_229Constant, _101PairItem1);
                    _231Subtract = Subtract(_228Constant, _230Multiply);
                    _232Multiply = Multiply(_101PairItem1, _101PairItem1);
                    _233Multiply = Multiply(_231Subtract, _232Multiply);
                    _234FloatLerp = FloatLerp(_170FloatLerp, _227FloatLerp, _233Multiply);
                    _235NaN = NaN();
                    _236Compare = Compare(_234FloatLerp, _235NaN);
                    _237Zero = Zero();
                    _238Equal = Equal(_236Compare, _237Zero);
                    _240Multiply = Multiply(_3At, if (_238Equal)
                        {
                          Single _239FloatZero;// 77:NoiseDeformerNoise3-ext->117:FloatZero 47686
                          _239FloatZero = FloatZero();
                          _239FloatZero;
                          }else
                        {
                          _234FloatLerp;
                          });
                    _241Zero = Zero();
                    _242At = At(x0, _241Zero);
                    _243Add = Add(_240Multiply, _242At);
                    _244Unit = Unit(_243Add);
                    _245Add = Add(_1At, _25FloatOne);
                    _246Append = Append(_244Unit, _245Add);
                    _246Append;
                    });
                _27Count = Count(_26GenerateN);
                _28One = One();
                _29Subtract = Subtract(_27Count, _28One);
                _30At = At(_26GenerateN, _29Subtract);
                _31Zero = Zero();
                _32At = At(_30At, _31Zero);
                _32At;
                }, _8X, _5Y);
            _11Vector3 = Vector3(_7Apply2, _9Apply2, _10Apply2);
            _12Vector3 = Vector3(strengthX, strengthY, strengthZ);
            _13Multiply = Multiply(_11Vector3, _12Vector3);
            _14Add = Add(x0, _13Multiply);
            _14Add;
            }, _27Pair);
        _35Pass-through: Matrix = if (use gizmo node)
          {
            Boolean _29IsValidNode;// 4:NodeTransformInLocalSpaceOrIdentity-ext->3:IsValidNode 47858
            _29IsValidNode = IsValidNode(gizmo node);
            if (_29IsValidNode)
              {
                Matrix _30ObjectTransformBeforeWSM;// 2:NodeTMInLocalSpace-ext->3:ObjectTransformBeforeWSM 47862
                Matrix _31InvertMatrix;// 2:NodeTMInLocalSpace-ext->2:InvertMatrix 47863
                Matrix _32Multiply;// 2:NodeTMInLocalSpace-ext->4:Multiply 47861
                _30ObjectTransformBeforeWSM = ObjectTransformBeforeWSM(gizmo node);
                _31InvertMatrix = InvertMatrix(modifierTransform);
                _32Multiply = Multiply(_30ObjectTransformBeforeWSM, _31InvertMatrix);
                _32Multiply;
                }else
              {
                Matrix _33MatrixIdentity;// 4:NodeTransformInLocalSpaceOrIdentity-ext->5:MatrixIdentity 47864
                _33MatrixIdentity = MatrixIdentity();
                _33MatrixIdentity;
                };
            }else
          {
            Matrix _34MatrixIdentity;// 16:NodeTransformInLocalSpaceConditionally-ext->5:MatrixIdentity 47865
            _34MatrixIdentity = MatrixIdentity();
            _34MatrixIdentity;
            };
        _36InvertMatrix = InvertMatrix(_35Pass-through: Matrix);
        _37ParallelMap = ParallelMap(_0MeshVertices, (Vector3 x0) => 
          {
            Vector3 _0Transform;// 2:MeshDeformVertices-ext->11:Transform 47304
            Vector3 _1Apply1;// 2:MeshDeformVertices-ext->8:Apply1 47303
            Vector3 _2Transform;// 2:MeshDeformVertices-ext->9:Transform 47302
            _0Transform = Transform(x0, _36InvertMatrix);
            _1Apply1 = Apply1(_28Bind2of2, _0Transform);
            _2Transform = Transform(_1Apply1, _35Pass-through: Matrix);
            _2Transform;
            });
        _38SetMeshVertices = SetMeshVertices(mesh, _37ParallelMap);
        _38SetMeshVertices;
        });
    _5IfThen;
    }